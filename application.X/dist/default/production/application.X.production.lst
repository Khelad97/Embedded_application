

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri Nov 13 16:49:43 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 05/05/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F46K20 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	idataCOMRAM
    64  001988                     __pidataCOMRAM:
    65                           	callstack 0
    66                           
    67                           ;initializer for _port_register
    68  001988  80                 	db	128
    69  001989  0F                 	db	15
    70  00198A  81                 	db	129
    71  00198B  0F                 	db	15
    72  00198C  82                 	db	130
    73  00198D  0F                 	db	15
    74  00198E  83                 	db	131
    75  00198F  0F                 	db	15
    76  001990  84                 	db	132
    77  001991  0F                 	db	15
    78                           
    79                           ;initializer for _lat_register
    80  001992  89                 	db	137
    81  001993  0F                 	db	15
    82  001994  8A                 	db	138
    83  001995  0F                 	db	15
    84  001996  8B                 	db	139
    85  001997  0F                 	db	15
    86  001998  8C                 	db	140
    87  001999  0F                 	db	15
    88  00199A  8D                 	db	141
    89  00199B  0F                 	db	15
    90                           
    91                           ;initializer for _tris_register
    92  00199C  92                 	db	146
    93  00199D  0F                 	db	15
    94  00199E  93                 	db	147
    95  00199F  0F                 	db	15
    96  0019A0  94                 	db	148
    97  0019A1  0F                 	db	15
    98  0019A2  95                 	db	149
    99  0019A3  0F                 	db	15
   100  0019A4  96                 	db	150
   101  0019A5  0F                 	db	15
   102                           
   103                           ;initializer for _lcd_1
   104  0019A6  32                 	db	50
   105  0019A7  13                 	db	19
   106  0019A8  00                 	db	0
   107  0019A9  00                 	db	0
   108                           
   109                           	psect	smallconst
   110  001000                     __psmallconst:
   111                           	callstack 0
   112  001000  00                 	db	0
   113  001001                     _character5:
   114                           	callstack 0
   115  001001  0E                 	db	14
   116  001002  0A                 	db	10
   117  001003  1F                 	db	31
   118  001004  1F                 	db	31
   119  001005  1F                 	db	31
   120  001006  1F                 	db	31
   121  001007  1F                 	db	31
   122  001008  00                 	db	0
   123  001009                     __end_of_character5:
   124                           	callstack 0
   125  001009                     _character4:
   126                           	callstack 0
   127  001009  0E                 	db	14
   128  00100A  0A                 	db	10
   129  00100B  11                 	db	17
   130  00100C  1F                 	db	31
   131  00100D  1F                 	db	31
   132  00100E  1F                 	db	31
   133  00100F  1F                 	db	31
   134  001010  00                 	db	0
   135  001011                     __end_of_character4:
   136                           	callstack 0
   137  001011                     _character3:
   138                           	callstack 0
   139  001011  0E                 	db	14
   140  001012  0A                 	db	10
   141  001013  11                 	db	17
   142  001014  11                 	db	17
   143  001015  1F                 	db	31
   144  001016  1F                 	db	31
   145  001017  1F                 	db	31
   146  001018  00                 	db	0
   147  001019                     __end_of_character3:
   148                           	callstack 0
   149  001019                     _character2:
   150                           	callstack 0
   151  001019  0E                 	db	14
   152  00101A  0A                 	db	10
   153  00101B  11                 	db	17
   154  00101C  11                 	db	17
   155  00101D  11                 	db	17
   156  00101E  1F                 	db	31
   157  00101F  1F                 	db	31
   158  001020  00                 	db	0
   159  001021                     __end_of_character2:
   160                           	callstack 0
   161  001021                     _character1:
   162                           	callstack 0
   163  001021  0E                 	db	14
   164  001022  0A                 	db	10
   165  001023  11                 	db	17
   166  001024  11                 	db	17
   167  001025  11                 	db	17
   168  001026  11                 	db	17
   169  001027  1F                 	db	31
   170  001028  00                 	db	0
   171  001029                     __end_of_character1:
   172                           	callstack 0
   173  001029                     _mesg2:
   174                           	callstack 0
   175  001029  1F                 	db	31
   176  00102A  03                 	db	3
   177  00102B  0D                 	db	13
   178  00102C  11                 	db	17
   179  00102D  01                 	db	1
   180  00102E  1F                 	db	31
   181  00102F  00                 	db	0
   182  001030  00                 	db	0
   183  001031                     __end_of_mesg2:
   184                           	callstack 0
   185  001031                     _mesg1:
   186                           	callstack 0
   187  001031  1F                 	db	31
   188  001032  18                 	db	24
   189  001033  16                 	db	22
   190  001034  11                 	db	17
   191  001035  10                 	db	16
   192  001036  1F                 	db	31
   193  001037  00                 	db	0
   194  001038  00                 	db	0
   195  001039                     __end_of_mesg1:
   196                           	callstack 0
   197  001039                     _shab_bat3:
   198                           	callstack 0
   199  001039  1E                 	db	30
   200  00103A  1E                 	db	30
   201  00103B  1E                 	db	30
   202  00103C  1E                 	db	30
   203  00103D  1E                 	db	30
   204  00103E  1E                 	db	30
   205  00103F  1E                 	db	30
   206  001040  00                 	db	0
   207  001041                     __end_of_shab_bat3:
   208                           	callstack 0
   209  001041                     _shab_bat2:
   210                           	callstack 0
   211  001041  1C                 	db	28
   212  001042  1C                 	db	28
   213  001043  1C                 	db	28
   214  001044  1C                 	db	28
   215  001045  1C                 	db	28
   216  001046  1C                 	db	28
   217  001047  1C                 	db	28
   218  001048  00                 	db	0
   219  001049                     __end_of_shab_bat2:
   220                           	callstack 0
   221  001049                     _shab_bat1:
   222                           	callstack 0
   223  001049  18                 	db	24
   224  00104A  18                 	db	24
   225  00104B  18                 	db	24
   226  00104C  18                 	db	24
   227  00104D  18                 	db	24
   228  00104E  18                 	db	24
   229  00104F  18                 	db	24
   230  001050  00                 	db	0
   231  001051                     __end_of_shab_bat1:
   232                           	callstack 0
   233  001051                     _Shab:
   234                           	callstack 0
   235  001051  1F                 	db	31
   236  001052  15                 	db	21
   237  001053  0E                 	db	14
   238  001054  04                 	db	4
   239  001055  04                 	db	4
   240  001056  04                 	db	4
   241  001057  04                 	db	4
   242  001058  00                 	db	0
   243  001059                     __end_of_Shab:
   244                           	callstack 0
   245  001059                     _blt:
   246                           	callstack 0
   247  001059  06                 	db	6
   248  00105A  15                 	db	21
   249  00105B  0D                 	db	13
   250  00105C  06                 	db	6
   251  00105D  0D                 	db	13
   252  00105E  15                 	db	21
   253  00105F  06                 	db	6
   254  001060  00                 	db	0
   255  001061                     __end_of_blt:
   256                           	callstack 0
   257  001061                     _character6:
   258                           	callstack 0
   259  001061  0E                 	db	14
   260  001062  0E                 	db	14
   261  001063  1F                 	db	31
   262  001064  1F                 	db	31
   263  001065  1F                 	db	31
   264  001066  1F                 	db	31
   265  001067  1F                 	db	31
   266  001068  00                 	db	0
   267  001069                     __end_of_character6:
   268                           	callstack 0
   269  0000                     _PORTE	set	3972
   270  0000                     _PORTD	set	3971
   271  0000                     _PORTC	set	3970
   272  0000                     _PORTB	set	3969
   273  0000                     _PORTA	set	3968
   274  0000                     _LATE	set	3981
   275  0000                     _LATD	set	3980
   276  0000                     _LATC	set	3979
   277  0000                     _LATB	set	3978
   278  0000                     _LATA	set	3977
   279  0000                     _TRISE	set	3990
   280  0000                     _TRISD	set	3989
   281  0000                     _TRISC	set	3988
   282  0000                     _TRISB	set	3987
   283  0000                     _TRISA	set	3986
   284  001069                     STR_4:
   285  001069  45                 	db	69	;'E'
   286  00106A  53                 	db	83	;'S'
   287  00106B  20                 	db	32
   288  00106C  44                 	db	68	;'D'
   289  00106D  69                 	db	105	;'i'
   290  00106E  70                 	db	112	;'p'
   291  00106F  6C                 	db	108	;'l'
   292  001070  6F                 	db	111	;'o'
   293  001071  6D                 	db	109	;'m'
   294  001072  61                 	db	97	;'a'
   295  001073  00                 	db	0
   296  001074                     STR_1:
   297  001074  33                 	db	51	;'3'
   298  001075  20                 	db	32
   299  001076  6D                 	db	109	;'m'
   300  001077  65                 	db	101	;'e'
   301  001078  73                 	db	115	;'s'
   302  001079  73                 	db	115	;'s'
   303  00107A  61                 	db	97	;'a'
   304  00107B  67                 	db	103	;'g'
   305  00107C  65                 	db	101	;'e'
   306  00107D  73                 	db	115	;'s'
   307  00107E  00                 	db	0
   308  00107F                     STR_2:
   309  00107F  72                 	db	114	;'r'
   310  001080  65                 	db	101	;'e'
   311  001081  63                 	db	99	;'c'
   312  001082  65                 	db	101	;'e'
   313  001083  69                 	db	105	;'i'
   314  001084  76                 	db	118	;'v'
   315  001085  65                 	db	101	;'e'
   316  001086  64                 	db	100	;'d'
   317  001087  00                 	db	0
   318  001088                     STR_6:
   319  001088  20                 	db	32
   320  001089  20                 	db	32
   321  00108A  20                 	db	32
   322  00108B  20                 	db	32
   323  00108C  00                 	db	0
   324  00108D                     STR_3:
   325  00108D  52                 	db	82	;'R'
   326  00108E  65                 	db	101	;'e'
   327  00108F  61                 	db	97	;'a'
   328  001090  64                 	db	100	;'d'
   329  001091  00                 	db	0
   330  001092                     STR_7:
   331  001092  25                 	db	37
   332  001093  69                 	db	105	;'i'
   333  001094  00                 	db	0
   334  001095  00                 	db	0	; dummy byte at the end
   335  0000                     
   336                           ; #config settings
   337                           
   338                           	psect	cinit
   339  00195E                     __pcinit:
   340                           	callstack 0
   341  00195E                     start_initialization:
   342                           	callstack 0
   343  00195E                     __initialization:
   344                           	callstack 0
   345                           
   346                           ; Initialize objects allocated to COMRAM (34 bytes)
   347                           ; load TBLPTR registers with __pidataCOMRAM
   348  00195E  0E88               	movlw	low __pidataCOMRAM
   349  001960  6EF6               	movwf	tblptrl,c
   350  001962  0E19               	movlw	high __pidataCOMRAM
   351  001964  6EF7               	movwf	tblptrh,c
   352  001966  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   353  001968  6EF8               	movwf	tblptru,c
   354  00196A  EE00  F027         	lfsr	0,__pdataCOMRAM
   355  00196E  EE10 F022          	lfsr	1,34
   356  001972                     copy_data0:
   357  001972  0009               	tblrd		*+
   358  001974  CFF5 FFEE          	movff	tablat,postinc0
   359  001978  50E5               	movf	postdec1,w,c
   360  00197A  50E1               	movf	fsr1l,w,c
   361  00197C  E1FA               	bnz	copy_data0
   362  00197E                     end_of_initialization:
   363                           	callstack 0
   364  00197E                     __end_of__initialization:
   365                           	callstack 0
   366  00197E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   367  001980  6EF8               	movwf	tblptru,c
   368  001982  0100               	movlb	0
   369  001984  EF4B  F008         	goto	_main	;jump to C main() function
   370                           
   371                           	psect	dataCOMRAM
   372  000027                     __pdataCOMRAM:
   373                           	callstack 0
   374  000027                     _port_register:
   375                           	callstack 0
   376  000027                     	ds	10
   377  000031                     _lat_register:
   378                           	callstack 0
   379  000031                     	ds	10
   380  00003B                     _tris_register:
   381                           	callstack 0
   382  00003B                     	ds	10
   383  000045                     _lcd_1:
   384                           	callstack 0
   385  000045                     	ds	4
   386                           
   387                           	psect	cstackCOMRAM
   388  000001                     __pcstackCOMRAM:
   389                           	callstack 0
   390  000001                     gpio_pin_direction_intialize@pin:
   391                           	callstack 0
   392  000001                     gpio_pin_write_value@pin:
   393                           	callstack 0
   394  000001                     gpio_port_direction_intialize@direction:
   395                           	callstack 0
   396  000001                     gpio_port_write_value@value:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0x0
   400  000001                     	ds	1
   401  000002                     ??_gpio_port_direction_intialize:
   402  000002                     ??_gpio_port_write_value:
   403  000002                     gpio_pin_direction_intialize@direction:
   404                           	callstack 0
   405  000002                     gpio_pin_write_value@logic:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x1
   409  000002                     	ds	1
   410  000003                     ??_gpio_pin_direction_intialize:
   411  000003                     ??_gpio_pin_write_value:
   412                           
   413                           ; 1 bytes @ 0x2
   414  000003                     	ds	2
   415  000005                     gpio_port_direction_intialize@port:
   416                           	callstack 0
   417  000005                     gpio_port_write_value@port:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0x4
   421  000005                     	ds	4
   422  000009                     gpio_pin_direction_intialize@port:
   423                           	callstack 0
   424  000009                     gpio_pin_write_value@port:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0x8
   428  000009                     	ds	1
   429  00000A                     lcd_send_enable@lcd:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x9
   433  00000A                     	ds	2
   434  00000C                     lcd_send_command@lcd:
   435                           	callstack 0
   436  00000C                     lcd_send_char_data@lcd:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0xB
   440  00000C                     	ds	2
   441  00000E                     lcd_send_command@command:
   442                           	callstack 0
   443  00000E                     lcd_send_char_data@data:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0xD
   447  00000E                     	ds	1
   448  00000F                     ??_lcd_send_command:
   449  00000F                     
   450                           ; 1 bytes @ 0xE
   451  00000F                     	ds	1
   452  000010                     lcd_intialize@lcd:
   453                           	callstack 0
   454  000010                     lcd_set_cursor@lcd:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0xF
   458  000010                     	ds	2
   459  000012                     ??_lcd_intialize:
   460  000012                     lcd_set_cursor@row:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0x11
   464  000012                     	ds	1
   465  000013                     lcd_set_cursor@coulmn:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x12
   469  000013                     	ds	1
   470  000014                     ??_lcd_set_cursor:
   471                           
   472                           ; 1 bytes @ 0x13
   473  000014                     	ds	2
   474  000016                     lcd_send_char_data_pos@lcd:
   475                           	callstack 0
   476  000016                     lcd_send_string_data_pos@lcd:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x15
   480  000016                     	ds	2
   481  000018                     lcd_send_char_data_pos@row:
   482                           	callstack 0
   483  000018                     lcd_send_string_data_pos@row:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x17
   487  000018                     	ds	1
   488  000019                     lcd_send_char_data_pos@coulmn:
   489                           	callstack 0
   490  000019                     lcd_send_string_data_pos@coulmn:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0x18
   494  000019                     	ds	1
   495  00001A                     lcd_send_char_data_pos@data:
   496                           	callstack 0
   497  00001A                     lcd_send_string_data_pos@data:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x19
   501  00001A                     	ds	1
   502  00001B                     lcd_send_custome_char@lcd:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x1A
   506  00001B                     	ds	1
   507  00001C                     ??_lcd_send_string_data_pos:
   508                           
   509                           ; 1 bytes @ 0x1B
   510  00001C                     	ds	1
   511  00001D                     lcd_send_custome_char@row:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0x1C
   515  00001D                     	ds	1
   516  00001E                     lcd_send_custome_char@coulmn:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x1D
   520  00001E                     	ds	1
   521  00001F                     lcd_send_custome_char@arr:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x1E
   525  00001F                     	ds	2
   526  000021                     lcd_send_custome_char@pos:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x20
   530  000021                     	ds	1
   531  000022                     ??_lcd_send_custome_char:
   532                           
   533                           ; 1 bytes @ 0x21
   534  000022                     	ds	2
   535  000024                     lcd_send_custome_char@l_counter:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x23
   539  000024                     	ds	1
   540  000025                     ??_main:
   541                           
   542                           ; 1 bytes @ 0x24
   543  000025                     	ds	2
   544                           
   545 ;;
   546 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   547 ;;
   548 ;; *************** function _main *****************
   549 ;; Defined at:
   550 ;;		line 30 in file "application.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  2  248[None  ] int 
   557 ;; Registers used:
   558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;Total ram usage:        2 bytes
   569 ;; Hardware stack levels required when called:    6
   570 ;; This function calls:
   571 ;;		_lcd_intialize
   572 ;;		_lcd_send_custome_char
   573 ;;		_lcd_send_string_data_pos
   574 ;; This function is called by:
   575 ;;		Startup code after reset
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text0
   580  001096                     __ptext0:
   581                           	callstack 0
   582  001096                     _main:
   583                           	callstack 25
   584  001096                     
   585                           ;application.c: 31:     lcd_intialize(&lcd_1);
   586  001096  0E45               	movlw	low _lcd_1
   587  001098  6E10               	movwf	lcd_intialize@lcd^0,c
   588  00109A  0E00               	movlw	high _lcd_1
   589  00109C  6E11               	movwf	(lcd_intialize@lcd+1)^0,c
   590  00109E  EC5F  F009         	call	_lcd_intialize	;wreg free
   591  0010A2                     
   592                           ;application.c: 32:     lcd_send_custome_char(&lcd_1, 4, 20, character6, 0);
   593  0010A2  0E45               	movlw	low _lcd_1
   594  0010A4  6E1B               	movwf	lcd_send_custome_char@lcd^0,c
   595  0010A6  0E00               	movlw	high _lcd_1
   596  0010A8  6E1C               	movwf	(lcd_send_custome_char@lcd+1)^0,c
   597  0010AA  0E04               	movlw	4
   598  0010AC  6E1D               	movwf	lcd_send_custome_char@row^0,c
   599  0010AE  0E14               	movlw	20
   600  0010B0  6E1E               	movwf	lcd_send_custome_char@coulmn^0,c
   601  0010B2  0E61               	movlw	low _character6
   602  0010B4  6E1F               	movwf	lcd_send_custome_char@arr^0,c
   603  0010B6  0E10               	movlw	high _character6
   604  0010B8  6E20               	movwf	(lcd_send_custome_char@arr+1)^0,c
   605  0010BA  0E00               	movlw	0
   606  0010BC  6E21               	movwf	lcd_send_custome_char@pos^0,c
   607  0010BE  EC7F  F00B         	call	_lcd_send_custome_char	;wreg free
   608  0010C2                     
   609                           ;application.c: 33:     lcd_send_custome_char(&lcd_1, 1, 19, blt, 1);
   610  0010C2  0E45               	movlw	low _lcd_1
   611  0010C4  6E1B               	movwf	lcd_send_custome_char@lcd^0,c
   612  0010C6  0E00               	movlw	high _lcd_1
   613  0010C8  6E1C               	movwf	(lcd_send_custome_char@lcd+1)^0,c
   614  0010CA  0E01               	movlw	1
   615  0010CC  6E1D               	movwf	lcd_send_custome_char@row^0,c
   616  0010CE  0E13               	movlw	19
   617  0010D0  6E1E               	movwf	lcd_send_custome_char@coulmn^0,c
   618  0010D2  0E59               	movlw	low _blt
   619  0010D4  6E1F               	movwf	lcd_send_custome_char@arr^0,c
   620  0010D6  0E10               	movlw	high _blt
   621  0010D8  6E20               	movwf	(lcd_send_custome_char@arr+1)^0,c
   622  0010DA  0E01               	movlw	1
   623  0010DC  6E21               	movwf	lcd_send_custome_char@pos^0,c
   624  0010DE  EC7F  F00B         	call	_lcd_send_custome_char	;wreg free
   625  0010E2                     
   626                           ;application.c: 34:     lcd_send_custome_char(&lcd_1, 4, 1, Shab, 2);
   627  0010E2  0E45               	movlw	low _lcd_1
   628  0010E4  6E1B               	movwf	lcd_send_custome_char@lcd^0,c
   629  0010E6  0E00               	movlw	high _lcd_1
   630  0010E8  6E1C               	movwf	(lcd_send_custome_char@lcd+1)^0,c
   631  0010EA  0E04               	movlw	4
   632  0010EC  6E1D               	movwf	lcd_send_custome_char@row^0,c
   633  0010EE  0E01               	movlw	1
   634  0010F0  6E1E               	movwf	lcd_send_custome_char@coulmn^0,c
   635  0010F2  0E51               	movlw	low _Shab
   636  0010F4  6E1F               	movwf	lcd_send_custome_char@arr^0,c
   637  0010F6  0E10               	movlw	high _Shab
   638  0010F8  6E20               	movwf	(lcd_send_custome_char@arr+1)^0,c
   639  0010FA  0E02               	movlw	2
   640  0010FC  6E21               	movwf	lcd_send_custome_char@pos^0,c
   641  0010FE  EC7F  F00B         	call	_lcd_send_custome_char	;wreg free
   642  001102                     
   643                           ;application.c: 35:     lcd_send_custome_char(&lcd_1, 3, 1, shab_bat1, 3);
   644  001102  0E45               	movlw	low _lcd_1
   645  001104  6E1B               	movwf	lcd_send_custome_char@lcd^0,c
   646  001106  0E00               	movlw	high _lcd_1
   647  001108  6E1C               	movwf	(lcd_send_custome_char@lcd+1)^0,c
   648  00110A  0E03               	movlw	3
   649  00110C  6E1D               	movwf	lcd_send_custome_char@row^0,c
   650  00110E  0E01               	movlw	1
   651  001110  6E1E               	movwf	lcd_send_custome_char@coulmn^0,c
   652  001112  0E49               	movlw	low _shab_bat1
   653  001114  6E1F               	movwf	lcd_send_custome_char@arr^0,c
   654  001116  0E10               	movlw	high _shab_bat1
   655  001118  6E20               	movwf	(lcd_send_custome_char@arr+1)^0,c
   656  00111A  0E03               	movlw	3
   657  00111C  6E21               	movwf	lcd_send_custome_char@pos^0,c
   658  00111E  EC7F  F00B         	call	_lcd_send_custome_char	;wreg free
   659  001122                     
   660                           ;application.c: 36:     lcd_send_custome_char(&lcd_1, 3, 20, shab_bat1, 3);
   661  001122  0E45               	movlw	low _lcd_1
   662  001124  6E1B               	movwf	lcd_send_custome_char@lcd^0,c
   663  001126  0E00               	movlw	high _lcd_1
   664  001128  6E1C               	movwf	(lcd_send_custome_char@lcd+1)^0,c
   665  00112A  0E03               	movlw	3
   666  00112C  6E1D               	movwf	lcd_send_custome_char@row^0,c
   667  00112E  0E14               	movlw	20
   668  001130  6E1E               	movwf	lcd_send_custome_char@coulmn^0,c
   669  001132  0E49               	movlw	low _shab_bat1
   670  001134  6E1F               	movwf	lcd_send_custome_char@arr^0,c
   671  001136  0E10               	movlw	high _shab_bat1
   672  001138  6E20               	movwf	(lcd_send_custome_char@arr+1)^0,c
   673  00113A  0E03               	movlw	3
   674  00113C  6E21               	movwf	lcd_send_custome_char@pos^0,c
   675  00113E  EC7F  F00B         	call	_lcd_send_custome_char	;wreg free
   676  001142                     
   677                           ;application.c: 37:     lcd_send_custome_char(&lcd_1, 2, 1, shab_bat2, 4);
   678  001142  0E45               	movlw	low _lcd_1
   679  001144  6E1B               	movwf	lcd_send_custome_char@lcd^0,c
   680  001146  0E00               	movlw	high _lcd_1
   681  001148  6E1C               	movwf	(lcd_send_custome_char@lcd+1)^0,c
   682  00114A  0E02               	movlw	2
   683  00114C  6E1D               	movwf	lcd_send_custome_char@row^0,c
   684  00114E  0E01               	movlw	1
   685  001150  6E1E               	movwf	lcd_send_custome_char@coulmn^0,c
   686  001152  0E41               	movlw	low _shab_bat2
   687  001154  6E1F               	movwf	lcd_send_custome_char@arr^0,c
   688  001156  0E10               	movlw	high _shab_bat2
   689  001158  6E20               	movwf	(lcd_send_custome_char@arr+1)^0,c
   690  00115A  0E04               	movlw	4
   691  00115C  6E21               	movwf	lcd_send_custome_char@pos^0,c
   692  00115E  EC7F  F00B         	call	_lcd_send_custome_char	;wreg free
   693  001162                     
   694                           ;application.c: 38:     lcd_send_custome_char(&lcd_1, 2, 20, shab_bat2, 4);
   695  001162  0E45               	movlw	low _lcd_1
   696  001164  6E1B               	movwf	lcd_send_custome_char@lcd^0,c
   697  001166  0E00               	movlw	high _lcd_1
   698  001168  6E1C               	movwf	(lcd_send_custome_char@lcd+1)^0,c
   699  00116A  0E02               	movlw	2
   700  00116C  6E1D               	movwf	lcd_send_custome_char@row^0,c
   701  00116E  0E14               	movlw	20
   702  001170  6E1E               	movwf	lcd_send_custome_char@coulmn^0,c
   703  001172  0E41               	movlw	low _shab_bat2
   704  001174  6E1F               	movwf	lcd_send_custome_char@arr^0,c
   705  001176  0E10               	movlw	high _shab_bat2
   706  001178  6E20               	movwf	(lcd_send_custome_char@arr+1)^0,c
   707  00117A  0E04               	movlw	4
   708  00117C  6E21               	movwf	lcd_send_custome_char@pos^0,c
   709  00117E  EC7F  F00B         	call	_lcd_send_custome_char	;wreg free
   710  001182                     
   711                           ;application.c: 39:     lcd_send_custome_char(&lcd_1, 1, 20, shab_bat3, 4);
   712  001182  0E45               	movlw	low _lcd_1
   713  001184  6E1B               	movwf	lcd_send_custome_char@lcd^0,c
   714  001186  0E00               	movlw	high _lcd_1
   715  001188  6E1C               	movwf	(lcd_send_custome_char@lcd+1)^0,c
   716  00118A  0E01               	movlw	1
   717  00118C  6E1D               	movwf	lcd_send_custome_char@row^0,c
   718  00118E  0E14               	movlw	20
   719  001190  6E1E               	movwf	lcd_send_custome_char@coulmn^0,c
   720  001192  0E39               	movlw	low _shab_bat3
   721  001194  6E1F               	movwf	lcd_send_custome_char@arr^0,c
   722  001196  0E10               	movlw	high _shab_bat3
   723  001198  6E20               	movwf	(lcd_send_custome_char@arr+1)^0,c
   724  00119A  0E04               	movlw	4
   725  00119C  6E21               	movwf	lcd_send_custome_char@pos^0,c
   726  00119E  EC7F  F00B         	call	_lcd_send_custome_char	;wreg free
   727  0011A2                     
   728                           ;application.c: 40:     lcd_send_custome_char(&lcd_1, 1, 2, mesg1, 5);
   729  0011A2  0E45               	movlw	low _lcd_1
   730  0011A4  6E1B               	movwf	lcd_send_custome_char@lcd^0,c
   731  0011A6  0E00               	movlw	high _lcd_1
   732  0011A8  6E1C               	movwf	(lcd_send_custome_char@lcd+1)^0,c
   733  0011AA  0E01               	movlw	1
   734  0011AC  6E1D               	movwf	lcd_send_custome_char@row^0,c
   735  0011AE  0E02               	movlw	2
   736  0011B0  6E1E               	movwf	lcd_send_custome_char@coulmn^0,c
   737  0011B2  0E31               	movlw	low _mesg1
   738  0011B4  6E1F               	movwf	lcd_send_custome_char@arr^0,c
   739  0011B6  0E10               	movlw	high _mesg1
   740  0011B8  6E20               	movwf	(lcd_send_custome_char@arr+1)^0,c
   741  0011BA  0E05               	movlw	5
   742  0011BC  6E21               	movwf	lcd_send_custome_char@pos^0,c
   743  0011BE  EC7F  F00B         	call	_lcd_send_custome_char	;wreg free
   744  0011C2                     
   745                           ;application.c: 41:     lcd_send_custome_char(&lcd_1, 1, 3, mesg2, 6);
   746  0011C2  0E45               	movlw	low _lcd_1
   747  0011C4  6E1B               	movwf	lcd_send_custome_char@lcd^0,c
   748  0011C6  0E00               	movlw	high _lcd_1
   749  0011C8  6E1C               	movwf	(lcd_send_custome_char@lcd+1)^0,c
   750  0011CA  0E01               	movlw	1
   751  0011CC  6E1D               	movwf	lcd_send_custome_char@row^0,c
   752  0011CE  0E03               	movlw	3
   753  0011D0  6E1E               	movwf	lcd_send_custome_char@coulmn^0,c
   754  0011D2  0E29               	movlw	low _mesg2
   755  0011D4  6E1F               	movwf	lcd_send_custome_char@arr^0,c
   756  0011D6  0E10               	movlw	high _mesg2
   757  0011D8  6E20               	movwf	(lcd_send_custome_char@arr+1)^0,c
   758  0011DA  0E06               	movlw	6
   759  0011DC  6E21               	movwf	lcd_send_custome_char@pos^0,c
   760  0011DE  EC7F  F00B         	call	_lcd_send_custome_char	;wreg free
   761  0011E2                     
   762                           ;application.c: 42:     lcd_send_string_data_pos(&lcd_1, 2, 2, "3 messages");
   763  0011E2  0E45               	movlw	low _lcd_1
   764  0011E4  6E16               	movwf	lcd_send_string_data_pos@lcd^0,c
   765  0011E6  0E00               	movlw	high _lcd_1
   766  0011E8  6E17               	movwf	(lcd_send_string_data_pos@lcd+1)^0,c
   767  0011EA  0E02               	movlw	2
   768  0011EC  6E18               	movwf	lcd_send_string_data_pos@row^0,c
   769  0011EE  0E02               	movlw	2
   770  0011F0  6E19               	movwf	lcd_send_string_data_pos@coulmn^0,c
   771  0011F2  0E74               	movlw	low STR_1
   772  0011F4  6E1A               	movwf	lcd_send_string_data_pos@data^0,c
   773  0011F6  0E10               	movlw	high STR_1
   774  0011F8  6E1B               	movwf	(lcd_send_string_data_pos@data+1)^0,c
   775  0011FA  ECBD  F00B         	call	_lcd_send_string_data_pos	;wreg free
   776  0011FE                     
   777                           ;application.c: 43:     lcd_send_string_data_pos(&lcd_1, 3, 5, "received");
   778  0011FE  0E45               	movlw	low _lcd_1
   779  001200  6E16               	movwf	lcd_send_string_data_pos@lcd^0,c
   780  001202  0E00               	movlw	high _lcd_1
   781  001204  6E17               	movwf	(lcd_send_string_data_pos@lcd+1)^0,c
   782  001206  0E03               	movlw	3
   783  001208  6E18               	movwf	lcd_send_string_data_pos@row^0,c
   784  00120A  0E05               	movlw	5
   785  00120C  6E19               	movwf	lcd_send_string_data_pos@coulmn^0,c
   786  00120E  0E7F               	movlw	low STR_2
   787  001210  6E1A               	movwf	lcd_send_string_data_pos@data^0,c
   788  001212  0E10               	movlw	high STR_2
   789  001214  6E1B               	movwf	(lcd_send_string_data_pos@data+1)^0,c
   790  001216  ECBD  F00B         	call	_lcd_send_string_data_pos	;wreg free
   791  00121A                     
   792                           ;application.c: 44:     lcd_send_string_data_pos(&lcd_1, 4, 9, "Read");
   793  00121A  0E45               	movlw	low _lcd_1
   794  00121C  6E16               	movwf	lcd_send_string_data_pos@lcd^0,c
   795  00121E  0E00               	movlw	high _lcd_1
   796  001220  6E17               	movwf	(lcd_send_string_data_pos@lcd+1)^0,c
   797  001222  0E04               	movlw	4
   798  001224  6E18               	movwf	lcd_send_string_data_pos@row^0,c
   799  001226  0E09               	movlw	9
   800  001228  6E19               	movwf	lcd_send_string_data_pos@coulmn^0,c
   801  00122A  0E8D               	movlw	low STR_3
   802  00122C  6E1A               	movwf	lcd_send_string_data_pos@data^0,c
   803  00122E  0E10               	movlw	high STR_3
   804  001230  6E1B               	movwf	(lcd_send_string_data_pos@data+1)^0,c
   805  001232  ECBD  F00B         	call	_lcd_send_string_data_pos	;wreg free
   806  001236                     l1820:
   807                           
   808                           ;application.c: 46:         lcd_send_string_data_pos(&lcd_1, 1, 6, "ES Diploma");
   809  001236  0E45               	movlw	low _lcd_1
   810  001238  6E16               	movwf	lcd_send_string_data_pos@lcd^0,c
   811  00123A  0E00               	movlw	high _lcd_1
   812  00123C  6E17               	movwf	(lcd_send_string_data_pos@lcd+1)^0,c
   813  00123E  0E01               	movlw	1
   814  001240  6E18               	movwf	lcd_send_string_data_pos@row^0,c
   815  001242  0E06               	movlw	6
   816  001244  6E19               	movwf	lcd_send_string_data_pos@coulmn^0,c
   817  001246  0E69               	movlw	low STR_4
   818  001248  6E1A               	movwf	lcd_send_string_data_pos@data^0,c
   819  00124A  0E10               	movlw	high STR_4
   820  00124C  6E1B               	movwf	(lcd_send_string_data_pos@data+1)^0,c
   821  00124E  ECBD  F00B         	call	_lcd_send_string_data_pos	;wreg free
   822  001252                     
   823                           ;application.c: 47:         lcd_send_string_data_pos(&lcd_1, 4, 9, "Read");_delay((unsig
      +                          ned long)((500)*(8000000UL/4000.0)));
   824  001252  0E45               	movlw	low _lcd_1
   825  001254  6E16               	movwf	lcd_send_string_data_pos@lcd^0,c
   826  001256  0E00               	movlw	high _lcd_1
   827  001258  6E17               	movwf	(lcd_send_string_data_pos@lcd+1)^0,c
   828  00125A  0E04               	movlw	4
   829  00125C  6E18               	movwf	lcd_send_string_data_pos@row^0,c
   830  00125E  0E09               	movlw	9
   831  001260  6E19               	movwf	lcd_send_string_data_pos@coulmn^0,c
   832  001262  0E8D               	movlw	low STR_3
   833  001264  6E1A               	movwf	lcd_send_string_data_pos@data^0,c
   834  001266  0E10               	movlw	high STR_3
   835  001268  6E1B               	movwf	(lcd_send_string_data_pos@data+1)^0,c
   836  00126A  ECBD  F00B         	call	_lcd_send_string_data_pos	;wreg free
   837  00126E  0E06               	movlw	6
   838  001270  6E26               	movwf	(??_main+1)^0,c
   839  001272  0E13               	movlw	19
   840  001274  6E25               	movwf	??_main^0,c
   841  001276  0EAE               	movlw	174
   842  001278                     u877:
   843  001278  2EE8               	decfsz	wreg,f,c
   844  00127A  D7FE               	bra	u877
   845  00127C  2E25               	decfsz	??_main^0,f,c
   846  00127E  D7FC               	bra	u877
   847  001280  2E26               	decfsz	(??_main+1)^0,f,c
   848  001282  D7FA               	bra	u877
   849  001284                     
   850                           ;application.c: 48:         lcd_send_string_data_pos(&lcd_1, 4, 9, "    ");_delay((unsig
      +                          ned long)((500)*(8000000UL/4000.0)));
   851  001284  0E45               	movlw	low _lcd_1
   852  001286  6E16               	movwf	lcd_send_string_data_pos@lcd^0,c
   853  001288  0E00               	movlw	high _lcd_1
   854  00128A  6E17               	movwf	(lcd_send_string_data_pos@lcd+1)^0,c
   855  00128C  0E04               	movlw	4
   856  00128E  6E18               	movwf	lcd_send_string_data_pos@row^0,c
   857  001290  0E09               	movlw	9
   858  001292  6E19               	movwf	lcd_send_string_data_pos@coulmn^0,c
   859  001294  0E88               	movlw	low STR_6
   860  001296  6E1A               	movwf	lcd_send_string_data_pos@data^0,c
   861  001298  0E10               	movlw	high STR_6
   862  00129A  6E1B               	movwf	(lcd_send_string_data_pos@data+1)^0,c
   863  00129C  ECBD  F00B         	call	_lcd_send_string_data_pos	;wreg free
   864  0012A0  0E06               	movlw	6
   865  0012A2  6E26               	movwf	(??_main+1)^0,c
   866  0012A4  0E13               	movlw	19
   867  0012A6  6E25               	movwf	??_main^0,c
   868  0012A8  0EAE               	movlw	174
   869  0012AA                     u887:
   870  0012AA  2EE8               	decfsz	wreg,f,c
   871  0012AC  D7FE               	bra	u887
   872  0012AE  2E25               	decfsz	??_main^0,f,c
   873  0012B0  D7FC               	bra	u887
   874  0012B2  2E26               	decfsz	(??_main+1)^0,f,c
   875  0012B4  D7FA               	bra	u887
   876  0012B6  EF1B  F009         	goto	l1820
   877  0012BA  EF00  F000         	goto	start
   878  0012BE                     __end_of_main:
   879                           	callstack 0
   880                           
   881 ;; *************** function _lcd_send_string_data_pos *****************
   882 ;; Defined at:
   883 ;;		line 187 in file "ecu/ecu_lcd/ecu_lcd.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  lcd             2   21[COMRAM] PTR const struct .
   886 ;;		 -> lcd_1(4), 
   887 ;;  row             1   23[COMRAM] unsigned char 
   888 ;;  coulmn          1   24[COMRAM] unsigned char 
   889 ;;  data            2   25[COMRAM] PTR unsigned char 
   890 ;;		 -> STR_6(5), STR_5(5), STR_4(11), STR_3(5), 
   891 ;;		 -> STR_2(9), STR_1(11), 
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   903 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   905 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;Total ram usage:        7 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; Hardware stack levels required when called:    4
   910 ;; This function calls:
   911 ;;		_lcd_send_char_data
   912 ;;		_lcd_send_command
   913 ;;		_lcd_set_cursor
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text1
   920  00177A                     __ptext1:
   921                           	callstack 0
   922  00177A                     _lcd_send_string_data_pos:
   923                           	callstack 26
   924  00177A                     
   925                           ;ecu/ecu_lcd/ecu_lcd.c: 188:     lcd_send_command(lcd, 0x02);
   926  00177A  C016  F00C         	movff	lcd_send_string_data_pos@lcd,lcd_send_command@lcd
   927  00177E  C017  F00D         	movff	lcd_send_string_data_pos@lcd+1,lcd_send_command@lcd+1
   928  001782  0E02               	movlw	2
   929  001784  6E0E               	movwf	lcd_send_command@command^0,c
   930  001786  ECF6  F00B         	call	_lcd_send_command	;wreg free
   931                           
   932                           ;ecu/ecu_lcd/ecu_lcd.c: 189:     lcd_set_cursor(lcd, row, coulmn);
   933  00178A  C016  F010         	movff	lcd_send_string_data_pos@lcd,lcd_set_cursor@lcd
   934  00178E  C017  F011         	movff	lcd_send_string_data_pos@lcd+1,lcd_set_cursor@lcd+1
   935  001792  C018  F012         	movff	lcd_send_string_data_pos@row,lcd_set_cursor@row
   936  001796  C019  F013         	movff	lcd_send_string_data_pos@coulmn,lcd_set_cursor@coulmn
   937  00179A  ECE9  F00A         	call	_lcd_set_cursor	;wreg free
   938                           
   939                           ;ecu/ecu_lcd/ecu_lcd.c: 190:     while (*data) {
   940  00179E  EFE7  F00B         	goto	l1644
   941  0017A2                     l1638:
   942                           
   943                           ;ecu/ecu_lcd/ecu_lcd.c: 191:         lcd_send_char_data(lcd, *data++);
   944  0017A2  C016  F00C         	movff	lcd_send_string_data_pos@lcd,lcd_send_char_data@lcd
   945  0017A6  C017  F00D         	movff	lcd_send_string_data_pos@lcd+1,lcd_send_char_data@lcd+1
   946  0017AA  C01A  FFF6         	movff	lcd_send_string_data_pos@data,tblptrl
   947  0017AE  C01B  FFF7         	movff	lcd_send_string_data_pos@data+1,tblptrh
   948  0017B2                     	if	0	;tblptru may be non-zero
   949  0017B2                     	endif
   950  0017B2                     	if	0	;tblptru may be non-zero
   951  0017B2                     	endif
   952  0017B2  0008               	tblrd		*
   953  0017B4  CFF5 F00E          	movff	tablat,lcd_send_char_data@data
   954  0017B8  EC50  F00C         	call	_lcd_send_char_data	;wreg free
   955  0017BC  4A1A               	infsnz	lcd_send_string_data_pos@data^0,f,c
   956  0017BE  2A1B               	incf	(lcd_send_string_data_pos@data+1)^0,f,c
   957  0017C0                     
   958                           ;ecu/ecu_lcd/ecu_lcd.c: 192:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
   959  0017C0  0E03               	movlw	3
   960  0017C2  6E1C               	movwf	??_lcd_send_string_data_pos^0,c
   961  0017C4  0E98               	movlw	152
   962  0017C6                     u897:
   963  0017C6  2EE8               	decfsz	wreg,f,c
   964  0017C8  D7FE               	bra	u897
   965  0017CA  2E1C               	decfsz	??_lcd_send_string_data_pos^0,f,c
   966  0017CC  D7FC               	bra	u897
   967  0017CE                     l1644:
   968                           
   969                           ;ecu/ecu_lcd/ecu_lcd.c: 190:     while (*data) {
   970  0017CE  C01A  FFF6         	movff	lcd_send_string_data_pos@data,tblptrl
   971  0017D2  C01B  FFF7         	movff	lcd_send_string_data_pos@data+1,tblptrh
   972  0017D6                     	if	0	;tblptru may be non-zero
   973  0017D6                     	endif
   974  0017D6                     	if	0	;tblptru may be non-zero
   975  0017D6                     	endif
   976  0017D6  0008               	tblrd		*
   977  0017D8  50F5               	movf	tablat,w,c
   978  0017DA  0900               	iorlw	0
   979  0017DC  A4D8               	btfss	status,2,c
   980  0017DE  EFF3  F00B         	goto	u611
   981  0017E2  EFF5  F00B         	goto	u610
   982  0017E6                     u611:
   983  0017E6  EFD1  F00B         	goto	l1638
   984  0017EA                     u610:
   985  0017EA  0012               	return		;funcret
   986  0017EC                     __end_of_lcd_send_string_data_pos:
   987                           	callstack 0
   988                           
   989 ;; *************** function _lcd_send_custome_char *****************
   990 ;; Defined at:
   991 ;;		line 205 in file "ecu/ecu_lcd/ecu_lcd.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  lcd             2   26[COMRAM] PTR const struct .
   994 ;;		 -> lcd_1(4), 
   995 ;;  row             1   28[COMRAM] unsigned char 
   996 ;;  coulmn          1   29[COMRAM] unsigned char 
   997 ;;  arr             2   30[COMRAM] PTR const unsigned char 
   998 ;;		 -> mesg2(8), mesg1(8), shab_bat3(8), shab_bat2(8), 
   999 ;;		 -> shab_bat1(8), Shab(8), blt(8), character6(8), 
  1000 ;;  pos             1   32[COMRAM] unsigned char 
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;  l_counter       1   35[COMRAM] unsigned char 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1012 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;Total ram usage:       10 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; Hardware stack levels required when called:    5
  1019 ;; This function calls:
  1020 ;;		_lcd_send_char_data
  1021 ;;		_lcd_send_char_data_pos
  1022 ;;		_lcd_send_command
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text2
  1029  0016FE                     __ptext2:
  1030                           	callstack 0
  1031  0016FE                     _lcd_send_custome_char:
  1032                           	callstack 25
  1033  0016FE                     
  1034                           ;ecu/ecu_lcd/ecu_lcd.c: 208:     lcd_send_command(lcd, 0x40 + (pos * 8));
  1035  0016FE  C01B  F00C         	movff	lcd_send_custome_char@lcd,lcd_send_command@lcd
  1036  001702  C01C  F00D         	movff	lcd_send_custome_char@lcd+1,lcd_send_command@lcd+1
  1037  001706  5021               	movf	lcd_send_custome_char@pos^0,w,c
  1038  001708  0D08               	mullw	8
  1039  00170A  50F3               	movf	243,w,c
  1040  00170C  0F40               	addlw	64
  1041  00170E  6E0E               	movwf	lcd_send_command@command^0,c
  1042  001710  ECF6  F00B         	call	_lcd_send_command	;wreg free
  1043  001714                     
  1044                           ;ecu/ecu_lcd/ecu_lcd.c: 209:     for (l_counter = 0; l_counter <= 7; l_counter++) {
  1045  001714  0E00               	movlw	0
  1046  001716  6E24               	movwf	lcd_send_custome_char@l_counter^0,c
  1047  001718                     l1628:
  1048                           
  1049                           ;ecu/ecu_lcd/ecu_lcd.c: 210:         lcd_send_char_data(lcd, arr[l_counter]);
  1050  001718  C01B  F00C         	movff	lcd_send_custome_char@lcd,lcd_send_char_data@lcd
  1051  00171C  C01C  F00D         	movff	lcd_send_custome_char@lcd+1,lcd_send_char_data@lcd+1
  1052  001720  5024               	movf	lcd_send_custome_char@l_counter^0,w,c
  1053  001722  241F               	addwf	lcd_send_custome_char@arr^0,w,c
  1054  001724  6E22               	movwf	??_lcd_send_custome_char^0,c
  1055  001726  0E00               	movlw	0
  1056  001728  2020               	addwfc	(lcd_send_custome_char@arr+1)^0,w,c
  1057  00172A  6E23               	movwf	(??_lcd_send_custome_char+1)^0,c
  1058  00172C  C022  FFF6         	movff	??_lcd_send_custome_char,tblptrl
  1059  001730  C023  FFF7         	movff	??_lcd_send_custome_char+1,tblptrh
  1060  001734                     	if	0	;tblptru may be non-zero
  1061  001734                     	endif
  1062  001734                     	if	0	;tblptru may be non-zero
  1063  001734                     	endif
  1064  001734  0008               	tblrd		*
  1065  001736  CFF5 F00E          	movff	tablat,lcd_send_char_data@data
  1066  00173A  EC50  F00C         	call	_lcd_send_char_data	;wreg free
  1067  00173E                     
  1068                           ;ecu/ecu_lcd/ecu_lcd.c: 211:     }
  1069  00173E  2A24               	incf	lcd_send_custome_char@l_counter^0,f,c
  1070  001740  0E07               	movlw	7
  1071  001742  6424               	cpfsgt	lcd_send_custome_char@l_counter^0,c
  1072  001744  EFA6  F00B         	goto	u601
  1073  001748  EFA8  F00B         	goto	u600
  1074  00174C                     u601:
  1075  00174C  EF8C  F00B         	goto	l1628
  1076  001750                     u600:
  1077  001750                     
  1078                           ;ecu/ecu_lcd/ecu_lcd.c: 212:     lcd_send_command(lcd, 0x02);
  1079  001750  C01B  F00C         	movff	lcd_send_custome_char@lcd,lcd_send_command@lcd
  1080  001754  C01C  F00D         	movff	lcd_send_custome_char@lcd+1,lcd_send_command@lcd+1
  1081  001758  0E02               	movlw	2
  1082  00175A  6E0E               	movwf	lcd_send_command@command^0,c
  1083  00175C  ECF6  F00B         	call	_lcd_send_command	;wreg free
  1084                           
  1085                           ;ecu/ecu_lcd/ecu_lcd.c: 213:     lcd_send_char_data_pos(lcd, row, coulmn, pos);
  1086  001760  C01B  F016         	movff	lcd_send_custome_char@lcd,lcd_send_char_data_pos@lcd
  1087  001764  C01C  F017         	movff	lcd_send_custome_char@lcd+1,lcd_send_char_data_pos@lcd+1
  1088  001768  C01D  F018         	movff	lcd_send_custome_char@row,lcd_send_char_data_pos@row
  1089  00176C  C01E  F019         	movff	lcd_send_custome_char@coulmn,lcd_send_char_data_pos@coulmn
  1090  001770  C021  F01A         	movff	lcd_send_custome_char@pos,lcd_send_char_data_pos@data
  1091  001774  EC94  F00C         	call	_lcd_send_char_data_pos	;wreg free
  1092  001778  0012               	return		;funcret
  1093  00177A                     __end_of_lcd_send_custome_char:
  1094                           	callstack 0
  1095                           
  1096 ;; *************** function _lcd_send_char_data_pos *****************
  1097 ;; Defined at:
  1098 ;;		line 156 in file "ecu/ecu_lcd/ecu_lcd.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  lcd             2   21[COMRAM] PTR const struct .
  1101 ;;		 -> lcd_1(4), 
  1102 ;;  row             1   23[COMRAM] unsigned char 
  1103 ;;  coulmn          1   24[COMRAM] unsigned char 
  1104 ;;  data            1   25[COMRAM] unsigned char 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1116 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;Total ram usage:        5 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:    4
  1123 ;; This function calls:
  1124 ;;		_lcd_send_char_data
  1125 ;;		_lcd_send_command
  1126 ;;		_lcd_set_cursor
  1127 ;; This function is called by:
  1128 ;;		_lcd_send_custome_char
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text3
  1133  001928                     __ptext3:
  1134                           	callstack 0
  1135  001928                     _lcd_send_char_data_pos:
  1136                           	callstack 25
  1137  001928                     
  1138                           ;ecu/ecu_lcd/ecu_lcd.c: 158:     lcd_send_command(lcd, 0x02);
  1139  001928  C016  F00C         	movff	lcd_send_char_data_pos@lcd,lcd_send_command@lcd
  1140  00192C  C017  F00D         	movff	lcd_send_char_data_pos@lcd+1,lcd_send_command@lcd+1
  1141  001930  0E02               	movlw	2
  1142  001932  6E0E               	movwf	lcd_send_command@command^0,c
  1143  001934  ECF6  F00B         	call	_lcd_send_command	;wreg free
  1144                           
  1145                           ;ecu/ecu_lcd/ecu_lcd.c: 159:     lcd_set_cursor(lcd, row, coulmn);
  1146  001938  C016  F010         	movff	lcd_send_char_data_pos@lcd,lcd_set_cursor@lcd
  1147  00193C  C017  F011         	movff	lcd_send_char_data_pos@lcd+1,lcd_set_cursor@lcd+1
  1148  001940  C018  F012         	movff	lcd_send_char_data_pos@row,lcd_set_cursor@row
  1149  001944  C019  F013         	movff	lcd_send_char_data_pos@coulmn,lcd_set_cursor@coulmn
  1150  001948  ECE9  F00A         	call	_lcd_set_cursor	;wreg free
  1151                           
  1152                           ;ecu/ecu_lcd/ecu_lcd.c: 160:     lcd_send_char_data(lcd, data);
  1153  00194C  C016  F00C         	movff	lcd_send_char_data_pos@lcd,lcd_send_char_data@lcd
  1154  001950  C017  F00D         	movff	lcd_send_char_data_pos@lcd+1,lcd_send_char_data@lcd+1
  1155  001954  C01A  F00E         	movff	lcd_send_char_data_pos@data,lcd_send_char_data@data
  1156  001958  EC50  F00C         	call	_lcd_send_char_data	;wreg free
  1157  00195C  0012               	return		;funcret
  1158  00195E                     __end_of_lcd_send_char_data_pos:
  1159                           	callstack 0
  1160                           
  1161 ;; *************** function _lcd_set_cursor *****************
  1162 ;; Defined at:
  1163 ;;		line 80 in file "ecu/ecu_lcd/ecu_lcd.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;  lcd             2   15[COMRAM] PTR const struct .
  1166 ;;		 -> lcd_1(4), 
  1167 ;;  row             1   17[COMRAM] unsigned char 
  1168 ;;  coulmn          1   18[COMRAM] unsigned char 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;		None
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1180 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;Total ram usage:        6 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:    3
  1187 ;; This function calls:
  1188 ;;		_lcd_send_command
  1189 ;; This function is called by:
  1190 ;;		_lcd_send_char_data_pos
  1191 ;;		_lcd_send_string_data_pos
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text4
  1196  0015D2                     __ptext4:
  1197                           	callstack 0
  1198  0015D2                     _lcd_set_cursor:
  1199                           	callstack 26
  1200  0015D2                     
  1201                           ;ecu/ecu_lcd/ecu_lcd.c: 81:     coulmn--;
  1202  0015D2  0613               	decf	lcd_set_cursor@coulmn^0,f,c
  1203                           
  1204                           ;ecu/ecu_lcd/ecu_lcd.c: 82:     switch (row) {
  1205  0015D4  EF18  F00B         	goto	l1550
  1206  0015D8                     l1542:
  1207  0015D8  C010  F00C         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
  1208  0015DC  C011  F00D         	movff	lcd_set_cursor@lcd+1,lcd_send_command@lcd+1
  1209  0015E0  5013               	movf	lcd_set_cursor@coulmn^0,w,c
  1210  0015E2  0F80               	addlw	128
  1211  0015E4  6E0E               	movwf	lcd_send_command@command^0,c
  1212  0015E6  ECF6  F00B         	call	_lcd_send_command	;wreg free
  1213                           
  1214                           ;ecu/ecu_lcd/ecu_lcd.c: 84:             break;
  1215  0015EA  EF35  F00B         	goto	l282
  1216  0015EE                     l1544:
  1217  0015EE  C010  F00C         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
  1218  0015F2  C011  F00D         	movff	lcd_set_cursor@lcd+1,lcd_send_command@lcd+1
  1219  0015F6  5013               	movf	lcd_set_cursor@coulmn^0,w,c
  1220  0015F8  0FC0               	addlw	192
  1221  0015FA  6E0E               	movwf	lcd_send_command@command^0,c
  1222  0015FC  ECF6  F00B         	call	_lcd_send_command	;wreg free
  1223                           
  1224                           ;ecu/ecu_lcd/ecu_lcd.c: 86:             break;
  1225  001600  EF35  F00B         	goto	l282
  1226  001604                     l1546:
  1227  001604  C010  F00C         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
  1228  001608  C011  F00D         	movff	lcd_set_cursor@lcd+1,lcd_send_command@lcd+1
  1229  00160C  5013               	movf	lcd_set_cursor@coulmn^0,w,c
  1230  00160E  0F94               	addlw	148
  1231  001610  6E0E               	movwf	lcd_send_command@command^0,c
  1232  001612  ECF6  F00B         	call	_lcd_send_command	;wreg free
  1233                           
  1234                           ;ecu/ecu_lcd/ecu_lcd.c: 88:             break;
  1235  001616  EF35  F00B         	goto	l282
  1236  00161A                     l1548:
  1237  00161A  C010  F00C         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
  1238  00161E  C011  F00D         	movff	lcd_set_cursor@lcd+1,lcd_send_command@lcd+1
  1239  001622  5013               	movf	lcd_set_cursor@coulmn^0,w,c
  1240  001624  0FD4               	addlw	212
  1241  001626  6E0E               	movwf	lcd_send_command@command^0,c
  1242  001628  ECF6  F00B         	call	_lcd_send_command	;wreg free
  1243                           
  1244                           ;ecu/ecu_lcd/ecu_lcd.c: 90:             break;
  1245  00162C  EF35  F00B         	goto	l282
  1246  001630                     l1550:
  1247  001630  5012               	movf	lcd_set_cursor@row^0,w,c
  1248  001632  6E14               	movwf	??_lcd_set_cursor^0,c
  1249  001634  6A15               	clrf	(??_lcd_set_cursor+1)^0,c
  1250                           
  1251                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1252                           ; Switch size 1, requested type "simple"
  1253                           ; Number of cases is 1, Range of values is 0 to 0
  1254                           ; switch strategies available:
  1255                           ; Name         Instructions Cycles
  1256                           ; simple_byte            4     3 (average)
  1257                           ;	Chosen strategy is simple_byte
  1258  001636  5015               	movf	(??_lcd_set_cursor+1)^0,w,c
  1259  001638  0A00               	xorlw	0	; case 0
  1260  00163A  B4D8               	btfsc	status,2,c
  1261  00163C  EF22  F00B         	goto	l1858
  1262  001640  EF35  F00B         	goto	l282
  1263  001644                     l1858:
  1264                           
  1265                           ; Switch size 1, requested type "simple"
  1266                           ; Number of cases is 4, Range of values is 1 to 4
  1267                           ; switch strategies available:
  1268                           ; Name         Instructions Cycles
  1269                           ; simple_byte           13     7 (average)
  1270                           ;	Chosen strategy is simple_byte
  1271  001644  5014               	movf	??_lcd_set_cursor^0,w,c
  1272  001646  0A01               	xorlw	1	; case 1
  1273  001648  B4D8               	btfsc	status,2,c
  1274  00164A  EFEC  F00A         	goto	l1542
  1275  00164E  0A03               	xorlw	3	; case 2
  1276  001650  B4D8               	btfsc	status,2,c
  1277  001652  EFF7  F00A         	goto	l1544
  1278  001656  0A01               	xorlw	1	; case 3
  1279  001658  B4D8               	btfsc	status,2,c
  1280  00165A  EF02  F00B         	goto	l1546
  1281  00165E  0A07               	xorlw	7	; case 4
  1282  001660  B4D8               	btfsc	status,2,c
  1283  001662  EF0D  F00B         	goto	l1548
  1284  001666  EF35  F00B         	goto	l282
  1285  00166A                     l282:
  1286  00166A  0012               	return		;funcret
  1287  00166C                     __end_of_lcd_set_cursor:
  1288                           	callstack 0
  1289                           
  1290 ;; *************** function _lcd_send_char_data *****************
  1291 ;; Defined at:
  1292 ;;		line 133 in file "ecu/ecu_lcd/ecu_lcd.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  lcd             2   11[COMRAM] PTR const struct .
  1295 ;;		 -> lcd_1(4), 
  1296 ;;  data            1   13[COMRAM] unsigned char 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1308 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;Total ram usage:        3 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; Hardware stack levels required when called:    2
  1315 ;; This function calls:
  1316 ;;		_gpio_pin_write_value
  1317 ;;		_gpio_port_write_value
  1318 ;;		_lcd_send_enable
  1319 ;; This function is called by:
  1320 ;;		_lcd_send_char_data_pos
  1321 ;;		_lcd_send_string_data_pos
  1322 ;;		_lcd_send_custome_char
  1323 ;;		_lcd_send_string_data_current_pos
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text5
  1328  0018A0                     __ptext5:
  1329                           	callstack 0
  1330  0018A0                     _lcd_send_char_data:
  1331                           	callstack 27
  1332  0018A0                     
  1333                           ;ecu/ecu_lcd/ecu_lcd.c: 135:     gpio_pin_write_value(lcd->lcd_rs_port, lcd->lcd_rs_pin,
      +                           PIN_HIGH);
  1334  0018A0  EE20 F002          	lfsr	2,2
  1335  0018A4  500C               	movf	lcd_send_char_data@lcd^0,w,c
  1336  0018A6  26D9               	addwf	fsr2l,f,c
  1337  0018A8  500D               	movf	(lcd_send_char_data@lcd+1)^0,w,c
  1338  0018AA  22DA               	addwfc	fsr2h,f,c
  1339  0018AC  50DF               	movf	indf2,w,c
  1340  0018AE  0B07               	andlw	7
  1341  0018B0  6E01               	movwf	gpio_pin_write_value@pin^0,c
  1342  0018B2  0E01               	movlw	1
  1343  0018B4  6E02               	movwf	gpio_pin_write_value@logic^0,c
  1344  0018B6  EE20 F001          	lfsr	2,1
  1345  0018BA  500C               	movf	lcd_send_char_data@lcd^0,w,c
  1346  0018BC  26D9               	addwf	fsr2l,f,c
  1347  0018BE  500D               	movf	(lcd_send_char_data@lcd+1)^0,w,c
  1348  0018C0  22DA               	addwfc	fsr2h,f,c
  1349  0018C2  50DF               	movf	indf2,w,c
  1350  0018C4  0B0F               	andlw	15
  1351  0018C6  EC1F  F00A         	call	_gpio_pin_write_value
  1352                           
  1353                           ;ecu/ecu_lcd/ecu_lcd.c: 136:     gpio_port_write_value(lcd->lcd_data_port, data);
  1354  0018CA  C00E  F001         	movff	lcd_send_char_data@data,gpio_port_write_value@value
  1355  0018CE  C00C  FFD9         	movff	lcd_send_char_data@lcd,fsr2l
  1356  0018D2  C00D  FFDA         	movff	lcd_send_char_data@lcd+1,fsr2h
  1357  0018D6  50DF               	movf	indf2,w,c
  1358  0018D8  0B0F               	andlw	15
  1359  0018DA  EC76  F00C         	call	_gpio_port_write_value
  1360                           
  1361                           ;ecu/ecu_lcd/ecu_lcd.c: 137:     lcd_send_enable(lcd);
  1362  0018DE  C00C  F00A         	movff	lcd_send_char_data@lcd,lcd_send_enable@lcd
  1363  0018E2  C00D  F00B         	movff	lcd_send_char_data@lcd+1,lcd_send_enable@lcd+1
  1364  0018E6  EC25  F00C         	call	_lcd_send_enable	;wreg free
  1365  0018EA  0012               	return		;funcret
  1366  0018EC                     __end_of_lcd_send_char_data:
  1367                           	callstack 0
  1368                           
  1369 ;; *************** function _lcd_intialize *****************
  1370 ;; Defined at:
  1371 ;;		line 14 in file "ecu/ecu_lcd/ecu_lcd.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  lcd             2   15[COMRAM] PTR const struct .
  1374 ;;		 -> lcd_1(4), 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;Total ram usage:        3 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:    3
  1393 ;; This function calls:
  1394 ;;		_gpio_pin_direction_intialize
  1395 ;;		_gpio_pin_write_value
  1396 ;;		_gpio_port_direction_intialize
  1397 ;;		_gpio_port_write_value
  1398 ;;		_lcd_send_command
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text6
  1405  0012BE                     __ptext6:
  1406                           	callstack 0
  1407  0012BE                     _lcd_intialize:
  1408                           	callstack 27
  1409  0012BE                     
  1410                           ;ecu/ecu_lcd/ecu_lcd.c: 16:     gpio_port_direction_intialize(lcd->lcd_data_port, 0X00);
  1411  0012BE  0E00               	movlw	0
  1412  0012C0  6E01               	movwf	gpio_port_direction_intialize@direction^0,c
  1413  0012C2  C010  FFD9         	movff	lcd_intialize@lcd,fsr2l
  1414  0012C6  C011  FFDA         	movff	lcd_intialize@lcd+1,fsr2h
  1415  0012CA  50DF               	movf	indf2,w,c
  1416  0012CC  0B0F               	andlw	15
  1417  0012CE  EC36  F00B         	call	_gpio_port_direction_intialize
  1418                           
  1419                           ;ecu/ecu_lcd/ecu_lcd.c: 17:     gpio_port_write_value(lcd->lcd_data_port, 0X00);
  1420  0012D2  0E00               	movlw	0
  1421  0012D4  6E01               	movwf	gpio_port_write_value@value^0,c
  1422  0012D6  C010  FFD9         	movff	lcd_intialize@lcd,fsr2l
  1423  0012DA  C011  FFDA         	movff	lcd_intialize@lcd+1,fsr2h
  1424  0012DE  50DF               	movf	indf2,w,c
  1425  0012E0  0B0F               	andlw	15
  1426  0012E2  EC76  F00C         	call	_gpio_port_write_value
  1427                           
  1428                           ;ecu/ecu_lcd/ecu_lcd.c: 18:     gpio_pin_direction_intialize(lcd->lcd_en_port, lcd->lcd_
      +                          en_pin, DIRECTION_OUTPUT);
  1429  0012E6  EE20 F001          	lfsr	2,1
  1430  0012EA  5010               	movf	lcd_intialize@lcd^0,w,c
  1431  0012EC  26D9               	addwf	fsr2l,f,c
  1432  0012EE  5011               	movf	(lcd_intialize@lcd+1)^0,w,c
  1433  0012F0  22DA               	addwfc	fsr2h,f,c
  1434  0012F2  38DF               	swapf	indf2,w,c
  1435  0012F4  0B07               	andlw	7
  1436  0012F6  6E01               	movwf	gpio_pin_direction_intialize@pin^0,c
  1437  0012F8  0E00               	movlw	0
  1438  0012FA  6E02               	movwf	gpio_pin_direction_intialize@direction^0,c
  1439  0012FC  C010  FFD9         	movff	lcd_intialize@lcd,fsr2l
  1440  001300  C011  FFDA         	movff	lcd_intialize@lcd+1,fsr2h
  1441  001304  38DF               	swapf	indf2,w,c
  1442  001306  0B0F               	andlw	15
  1443  001308  EC85  F00A         	call	_gpio_pin_direction_intialize
  1444                           
  1445                           ;ecu/ecu_lcd/ecu_lcd.c: 19:     gpio_pin_write_value(lcd->lcd_en_port, lcd->lcd_en_pin, 
      +                          PIN_LOW);
  1446  00130C  EE20 F001          	lfsr	2,1
  1447  001310  5010               	movf	lcd_intialize@lcd^0,w,c
  1448  001312  26D9               	addwf	fsr2l,f,c
  1449  001314  5011               	movf	(lcd_intialize@lcd+1)^0,w,c
  1450  001316  22DA               	addwfc	fsr2h,f,c
  1451  001318  38DF               	swapf	indf2,w,c
  1452  00131A  0B07               	andlw	7
  1453  00131C  6E01               	movwf	gpio_pin_write_value@pin^0,c
  1454  00131E  0E00               	movlw	0
  1455  001320  6E02               	movwf	gpio_pin_write_value@logic^0,c
  1456  001322  C010  FFD9         	movff	lcd_intialize@lcd,fsr2l
  1457  001326  C011  FFDA         	movff	lcd_intialize@lcd+1,fsr2h
  1458  00132A  38DF               	swapf	indf2,w,c
  1459  00132C  0B0F               	andlw	15
  1460  00132E  EC1F  F00A         	call	_gpio_pin_write_value
  1461                           
  1462                           ;ecu/ecu_lcd/ecu_lcd.c: 20:     gpio_pin_direction_intialize(lcd->lcd_rs_port, lcd->lcd_
      +                          rs_pin, DIRECTION_OUTPUT);
  1463  001332  EE20 F002          	lfsr	2,2
  1464  001336  5010               	movf	lcd_intialize@lcd^0,w,c
  1465  001338  26D9               	addwf	fsr2l,f,c
  1466  00133A  5011               	movf	(lcd_intialize@lcd+1)^0,w,c
  1467  00133C  22DA               	addwfc	fsr2h,f,c
  1468  00133E  50DF               	movf	indf2,w,c
  1469  001340  0B07               	andlw	7
  1470  001342  6E01               	movwf	gpio_pin_direction_intialize@pin^0,c
  1471  001344  0E00               	movlw	0
  1472  001346  6E02               	movwf	gpio_pin_direction_intialize@direction^0,c
  1473  001348  EE20 F001          	lfsr	2,1
  1474  00134C  5010               	movf	lcd_intialize@lcd^0,w,c
  1475  00134E  26D9               	addwf	fsr2l,f,c
  1476  001350  5011               	movf	(lcd_intialize@lcd+1)^0,w,c
  1477  001352  22DA               	addwfc	fsr2h,f,c
  1478  001354  50DF               	movf	indf2,w,c
  1479  001356  0B0F               	andlw	15
  1480  001358  EC85  F00A         	call	_gpio_pin_direction_intialize
  1481                           
  1482                           ;ecu/ecu_lcd/ecu_lcd.c: 21:     gpio_pin_write_value(lcd->lcd_rs_port, lcd->lcd_rs_pin, 
      +                          PIN_LOW);
  1483  00135C  EE20 F002          	lfsr	2,2
  1484  001360  5010               	movf	lcd_intialize@lcd^0,w,c
  1485  001362  26D9               	addwf	fsr2l,f,c
  1486  001364  5011               	movf	(lcd_intialize@lcd+1)^0,w,c
  1487  001366  22DA               	addwfc	fsr2h,f,c
  1488  001368  50DF               	movf	indf2,w,c
  1489  00136A  0B07               	andlw	7
  1490  00136C  6E01               	movwf	gpio_pin_write_value@pin^0,c
  1491  00136E  0E00               	movlw	0
  1492  001370  6E02               	movwf	gpio_pin_write_value@logic^0,c
  1493  001372  EE20 F001          	lfsr	2,1
  1494  001376  5010               	movf	lcd_intialize@lcd^0,w,c
  1495  001378  26D9               	addwf	fsr2l,f,c
  1496  00137A  5011               	movf	(lcd_intialize@lcd+1)^0,w,c
  1497  00137C  22DA               	addwfc	fsr2h,f,c
  1498  00137E  50DF               	movf	indf2,w,c
  1499  001380  0B0F               	andlw	15
  1500  001382  EC1F  F00A         	call	_gpio_pin_write_value
  1501  001386                     
  1502                           ;ecu/ecu_lcd/ecu_lcd.c: 22:     _delay((unsigned long)((40)*(8000000UL/4000.0)));
  1503  001386  0E68               	movlw	104
  1504  001388  6E12               	movwf	??_lcd_intialize^0,c
  1505  00138A  0EE4               	movlw	228
  1506  00138C                     u907:
  1507  00138C  2EE8               	decfsz	wreg,f,c
  1508  00138E  D7FE               	bra	u907
  1509  001390  2E12               	decfsz	??_lcd_intialize^0,f,c
  1510  001392  D7FC               	bra	u907
  1511  001394  F000 F000          	nop2	
  1512  001398                     
  1513                           ;ecu/ecu_lcd/ecu_lcd.c: 23:     lcd_send_command(lcd, 0x38);
  1514  001398  C010  F00C         	movff	lcd_intialize@lcd,lcd_send_command@lcd
  1515  00139C  C011  F00D         	movff	lcd_intialize@lcd+1,lcd_send_command@lcd+1
  1516  0013A0  0E38               	movlw	56
  1517  0013A2  6E0E               	movwf	lcd_send_command@command^0,c
  1518  0013A4  ECF6  F00B         	call	_lcd_send_command	;wreg free
  1519                           
  1520                           ;ecu/ecu_lcd/ecu_lcd.c: 24:     _delay((unsigned long)((5)*(8000000UL/4000.0)));
  1521  0013A8  0E0D               	movlw	13
  1522  0013AA  6E12               	movwf	??_lcd_intialize^0,c
  1523  0013AC  0EFC               	movlw	252
  1524  0013AE                     u917:
  1525  0013AE  2EE8               	decfsz	wreg,f,c
  1526  0013B0  D7FE               	bra	u917
  1527  0013B2  2E12               	decfsz	??_lcd_intialize^0,f,c
  1528  0013B4  D7FC               	bra	u917
  1529  0013B6                     
  1530                           ;ecu/ecu_lcd/ecu_lcd.c: 25:     lcd_send_command(lcd, 0x38);
  1531  0013B6  C010  F00C         	movff	lcd_intialize@lcd,lcd_send_command@lcd
  1532  0013BA  C011  F00D         	movff	lcd_intialize@lcd+1,lcd_send_command@lcd+1
  1533  0013BE  0E38               	movlw	56
  1534  0013C0  6E0E               	movwf	lcd_send_command@command^0,c
  1535  0013C2  ECF6  F00B         	call	_lcd_send_command	;wreg free
  1536  0013C6                     
  1537                           ;ecu/ecu_lcd/ecu_lcd.c: 26:     _delay((unsigned long)((300)*(8000000UL/4000000.0)));
  1538  0013C6  0EC8               	movlw	200
  1539  0013C8                     u927:
  1540  0013C8  2EE8               	decfsz	wreg,f,c
  1541  0013CA  D7FE               	bra	u927
  1542                           
  1543                           ;ecu/ecu_lcd/ecu_lcd.c: 27:     lcd_send_command(lcd, 0x38);
  1544  0013CC  C010  F00C         	movff	lcd_intialize@lcd,lcd_send_command@lcd
  1545  0013D0  C011  F00D         	movff	lcd_intialize@lcd+1,lcd_send_command@lcd+1
  1546  0013D4  0E38               	movlw	56
  1547  0013D6  6E0E               	movwf	lcd_send_command@command^0,c
  1548  0013D8  ECF6  F00B         	call	_lcd_send_command	;wreg free
  1549                           
  1550                           ;ecu/ecu_lcd/ecu_lcd.c: 29:     lcd_send_command(lcd, 0X01);
  1551  0013DC  C010  F00C         	movff	lcd_intialize@lcd,lcd_send_command@lcd
  1552  0013E0  C011  F00D         	movff	lcd_intialize@lcd+1,lcd_send_command@lcd+1
  1553  0013E4  0E01               	movlw	1
  1554  0013E6  6E0E               	movwf	lcd_send_command@command^0,c
  1555  0013E8  ECF6  F00B         	call	_lcd_send_command	;wreg free
  1556                           
  1557                           ;ecu/ecu_lcd/ecu_lcd.c: 30:     lcd_send_command(lcd, 0x02);
  1558  0013EC  C010  F00C         	movff	lcd_intialize@lcd,lcd_send_command@lcd
  1559  0013F0  C011  F00D         	movff	lcd_intialize@lcd+1,lcd_send_command@lcd+1
  1560  0013F4  0E02               	movlw	2
  1561  0013F6  6E0E               	movwf	lcd_send_command@command^0,c
  1562  0013F8  ECF6  F00B         	call	_lcd_send_command	;wreg free
  1563                           
  1564                           ;ecu/ecu_lcd/ecu_lcd.c: 31:     lcd_send_command(lcd, 0X06);
  1565  0013FC  C010  F00C         	movff	lcd_intialize@lcd,lcd_send_command@lcd
  1566  001400  C011  F00D         	movff	lcd_intialize@lcd+1,lcd_send_command@lcd+1
  1567  001404  0E06               	movlw	6
  1568  001406  6E0E               	movwf	lcd_send_command@command^0,c
  1569  001408  ECF6  F00B         	call	_lcd_send_command	;wreg free
  1570                           
  1571                           ;ecu/ecu_lcd/ecu_lcd.c: 32:     lcd_send_command(lcd, 0X0C);
  1572  00140C  C010  F00C         	movff	lcd_intialize@lcd,lcd_send_command@lcd
  1573  001410  C011  F00D         	movff	lcd_intialize@lcd+1,lcd_send_command@lcd+1
  1574  001414  0E0C               	movlw	12
  1575  001416  6E0E               	movwf	lcd_send_command@command^0,c
  1576  001418  ECF6  F00B         	call	_lcd_send_command	;wreg free
  1577                           
  1578                           ;ecu/ecu_lcd/ecu_lcd.c: 33:     lcd_send_command(lcd, 0x38);
  1579  00141C  C010  F00C         	movff	lcd_intialize@lcd,lcd_send_command@lcd
  1580  001420  C011  F00D         	movff	lcd_intialize@lcd+1,lcd_send_command@lcd+1
  1581  001424  0E38               	movlw	56
  1582  001426  6E0E               	movwf	lcd_send_command@command^0,c
  1583  001428  ECF6  F00B         	call	_lcd_send_command	;wreg free
  1584                           
  1585                           ;ecu/ecu_lcd/ecu_lcd.c: 34:     lcd_send_command(lcd, 0x80);
  1586  00142C  C010  F00C         	movff	lcd_intialize@lcd,lcd_send_command@lcd
  1587  001430  C011  F00D         	movff	lcd_intialize@lcd+1,lcd_send_command@lcd+1
  1588  001434  0E80               	movlw	128
  1589  001436  6E0E               	movwf	lcd_send_command@command^0,c
  1590  001438  ECF6  F00B         	call	_lcd_send_command	;wreg free
  1591  00143C  0012               	return		;funcret
  1592  00143E                     __end_of_lcd_intialize:
  1593                           	callstack 0
  1594                           
  1595 ;; *************** function _lcd_send_command *****************
  1596 ;; Defined at:
  1597 ;;		line 110 in file "ecu/ecu_lcd/ecu_lcd.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;  lcd             2   11[COMRAM] PTR const struct .
  1600 ;;		 -> lcd_1(4), 
  1601 ;;  command         1   13[COMRAM] unsigned char 
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;		None
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1613 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;Total ram usage:        4 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    2
  1620 ;; This function calls:
  1621 ;;		_gpio_pin_write_value
  1622 ;;		_gpio_port_write_value
  1623 ;;		_lcd_send_enable
  1624 ;; This function is called by:
  1625 ;;		_lcd_intialize
  1626 ;;		_lcd_set_cursor
  1627 ;;		_lcd_send_char_data_pos
  1628 ;;		_lcd_send_string_data_pos
  1629 ;;		_lcd_send_custome_char
  1630 ;;		_lcd_clear_display
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text7
  1635  0017EC                     __ptext7:
  1636                           	callstack 0
  1637  0017EC                     _lcd_send_command:
  1638                           	callstack 26
  1639  0017EC                     
  1640                           ;ecu/ecu_lcd/ecu_lcd.c: 112:     gpio_pin_write_value(lcd->lcd_rs_port, lcd->lcd_rs_pin,
      +                           PIN_LOW);
  1641  0017EC  EE20 F002          	lfsr	2,2
  1642  0017F0  500C               	movf	lcd_send_command@lcd^0,w,c
  1643  0017F2  26D9               	addwf	fsr2l,f,c
  1644  0017F4  500D               	movf	(lcd_send_command@lcd+1)^0,w,c
  1645  0017F6  22DA               	addwfc	fsr2h,f,c
  1646  0017F8  50DF               	movf	indf2,w,c
  1647  0017FA  0B07               	andlw	7
  1648  0017FC  6E01               	movwf	gpio_pin_write_value@pin^0,c
  1649  0017FE  0E00               	movlw	0
  1650  001800  6E02               	movwf	gpio_pin_write_value@logic^0,c
  1651  001802  EE20 F001          	lfsr	2,1
  1652  001806  500C               	movf	lcd_send_command@lcd^0,w,c
  1653  001808  26D9               	addwf	fsr2l,f,c
  1654  00180A  500D               	movf	(lcd_send_command@lcd+1)^0,w,c
  1655  00180C  22DA               	addwfc	fsr2h,f,c
  1656  00180E  50DF               	movf	indf2,w,c
  1657  001810  0B0F               	andlw	15
  1658  001812  EC1F  F00A         	call	_gpio_pin_write_value
  1659                           
  1660                           ;ecu/ecu_lcd/ecu_lcd.c: 113:     gpio_port_write_value(lcd->lcd_data_port, command);
  1661  001816  C00E  F001         	movff	lcd_send_command@command,gpio_port_write_value@value
  1662  00181A  C00C  FFD9         	movff	lcd_send_command@lcd,fsr2l
  1663  00181E  C00D  FFDA         	movff	lcd_send_command@lcd+1,fsr2h
  1664  001822  50DF               	movf	indf2,w,c
  1665  001824  0B0F               	andlw	15
  1666  001826  EC76  F00C         	call	_gpio_port_write_value
  1667                           
  1668                           ;ecu/ecu_lcd/ecu_lcd.c: 114:     lcd_send_enable(lcd);
  1669  00182A  C00C  F00A         	movff	lcd_send_command@lcd,lcd_send_enable@lcd
  1670  00182E  C00D  F00B         	movff	lcd_send_command@lcd+1,lcd_send_enable@lcd+1
  1671  001832  EC25  F00C         	call	_lcd_send_enable	;wreg free
  1672  001836                     
  1673                           ;ecu/ecu_lcd/ecu_lcd.c: 115:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
  1674  001836  0E06               	movlw	6
  1675  001838  6E0F               	movwf	??_lcd_send_command^0,c
  1676  00183A  0E30               	movlw	48
  1677  00183C                     u937:
  1678  00183C  2EE8               	decfsz	wreg,f,c
  1679  00183E  D7FE               	bra	u937
  1680  001840  2E0F               	decfsz	??_lcd_send_command^0,f,c
  1681  001842  D7FC               	bra	u937
  1682  001844  F000 F000          	nop2	
  1683  001848  0012               	return		;funcret
  1684  00184A                     __end_of_lcd_send_command:
  1685                           	callstack 0
  1686                           
  1687 ;; *************** function _lcd_send_enable *****************
  1688 ;; Defined at:
  1689 ;;		line 62 in file "ecu/ecu_lcd/ecu_lcd.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;  lcd             2    9[COMRAM] PTR const struct .
  1692 ;;		 -> lcd_1(4), 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;		None
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      void 
  1697 ;; Registers used:
  1698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;Total ram usage:        2 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; Hardware stack levels required when called:    1
  1711 ;; This function calls:
  1712 ;;		_gpio_pin_write_value
  1713 ;; This function is called by:
  1714 ;;		_lcd_send_command
  1715 ;;		_lcd_send_char_data
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	text8
  1720  00184A                     __ptext8:
  1721                           	callstack 0
  1722  00184A                     _lcd_send_enable:
  1723                           	callstack 26
  1724  00184A                     
  1725                           ;ecu/ecu_lcd/ecu_lcd.c: 64:     gpio_pin_write_value(lcd->lcd_en_port, lcd->lcd_en_pin, 
      +                          PIN_HIGH);
  1726  00184A  EE20 F001          	lfsr	2,1
  1727  00184E  500A               	movf	lcd_send_enable@lcd^0,w,c
  1728  001850  26D9               	addwf	fsr2l,f,c
  1729  001852  500B               	movf	(lcd_send_enable@lcd+1)^0,w,c
  1730  001854  22DA               	addwfc	fsr2h,f,c
  1731  001856  38DF               	swapf	indf2,w,c
  1732  001858  0B07               	andlw	7
  1733  00185A  6E01               	movwf	gpio_pin_write_value@pin^0,c
  1734  00185C  0E01               	movlw	1
  1735  00185E  6E02               	movwf	gpio_pin_write_value@logic^0,c
  1736  001860  C00A  FFD9         	movff	lcd_send_enable@lcd,fsr2l
  1737  001864  C00B  FFDA         	movff	lcd_send_enable@lcd+1,fsr2h
  1738  001868  38DF               	swapf	indf2,w,c
  1739  00186A  0B0F               	andlw	15
  1740  00186C  EC1F  F00A         	call	_gpio_pin_write_value
  1741  001870                     
  1742                           ;ecu/ecu_lcd/ecu_lcd.c: 65:     _delay((unsigned long)((200)*(8000000UL/4000000.0)));
  1743  001870  0E85               	movlw	133
  1744  001872                     u947:
  1745  001872  2EE8               	decfsz	wreg,f,c
  1746  001874  D7FE               	bra	u947
  1747  001876  F000               	nop	
  1748  001878                     
  1749                           ;ecu/ecu_lcd/ecu_lcd.c: 66:     gpio_pin_write_value(lcd->lcd_en_port, lcd->lcd_en_pin, 
      +                          PIN_LOW);
  1750  001878  EE20 F001          	lfsr	2,1
  1751  00187C  500A               	movf	lcd_send_enable@lcd^0,w,c
  1752  00187E  26D9               	addwf	fsr2l,f,c
  1753  001880  500B               	movf	(lcd_send_enable@lcd+1)^0,w,c
  1754  001882  22DA               	addwfc	fsr2h,f,c
  1755  001884  38DF               	swapf	indf2,w,c
  1756  001886  0B07               	andlw	7
  1757  001888  6E01               	movwf	gpio_pin_write_value@pin^0,c
  1758  00188A  0E00               	movlw	0
  1759  00188C  6E02               	movwf	gpio_pin_write_value@logic^0,c
  1760  00188E  C00A  FFD9         	movff	lcd_send_enable@lcd,fsr2l
  1761  001892  C00B  FFDA         	movff	lcd_send_enable@lcd+1,fsr2h
  1762  001896  38DF               	swapf	indf2,w,c
  1763  001898  0B0F               	andlw	15
  1764  00189A  EC1F  F00A         	call	_gpio_pin_write_value
  1765  00189E  0012               	return		;funcret
  1766  0018A0                     __end_of_lcd_send_enable:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _gpio_pin_write_value *****************
  1770 ;; Defined at:
  1771 ;;		line 67 in file "mcal/mcal_gpio/mcal_gpio.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  port            1    wreg     enum E2998
  1774 ;;  pin             1    0[COMRAM] enum E2988
  1775 ;;  logic           1    1[COMRAM] enum E2980
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  port            1    8[COMRAM] enum E2998
  1778 ;;  ret             1    0        enum E2976
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      enum E2976
  1781 ;; Registers used:
  1782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1788 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;Total ram usage:        9 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_lcd_intialize
  1798 ;;		_lcd_send_enable
  1799 ;;		_lcd_send_command
  1800 ;;		_lcd_send_char_data
  1801 ;;		_led_initialize
  1802 ;;		_led_turn_on
  1803 ;;		_led_turn_off
  1804 ;;		_relay_initialize
  1805 ;;		_relay_turn_on
  1806 ;;		_relay_turn_off
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text9
  1811  00143E                     __ptext9:
  1812                           	callstack 0
  1813  00143E                     _gpio_pin_write_value:
  1814                           	callstack 26
  1815                           
  1816                           ;incstack = 0
  1817                           ;gpio_pin_write_value@port stored from wreg
  1818  00143E  6E09               	movwf	gpio_pin_write_value@port^0,c
  1819  001440                     
  1820                           ;mcal/mcal_gpio/mcal_gpio.c: 69:     if (pin > 8UL - 1) {
  1821  001440  0E07               	movlw	7
  1822  001442  6401               	cpfsgt	gpio_pin_write_value@pin^0,c
  1823  001444  EF26  F00A         	goto	u521
  1824  001448  EF28  F00A         	goto	u520
  1825  00144C                     u521:
  1826  00144C  EF6F  F00A         	goto	l1510
  1827  001450                     u520:
  1828  001450  EF84  F00A         	goto	l158
  1829  001454                     l1500:
  1830                           
  1831                           ;mcal/mcal_gpio/mcal_gpio.c: 74:                 (*lat_register[port]&=(~(1<<pin)));
  1832  001454  C001  F003         	movff	gpio_pin_write_value@pin,??_gpio_pin_write_value
  1833  001458  0E01               	movlw	1
  1834  00145A  6E04               	movwf	(??_gpio_pin_write_value+1)^0,c
  1835  00145C  2A03               	incf	??_gpio_pin_write_value^0,f,c
  1836  00145E  EF33  F00A         	goto	u534
  1837  001462                     u535:
  1838  001462  90D8               	bcf	status,0,c
  1839  001464  3604               	rlcf	(??_gpio_pin_write_value+1)^0,f,c
  1840  001466                     u534:
  1841  001466  2E03               	decfsz	??_gpio_pin_write_value^0,f,c
  1842  001468  EF31  F00A         	goto	u535
  1843  00146C  5004               	movf	(??_gpio_pin_write_value+1)^0,w,c
  1844  00146E  0AFF               	xorlw	255
  1845  001470  6E05               	movwf	(??_gpio_pin_write_value+2)^0,c
  1846  001472  5009               	movf	gpio_pin_write_value@port^0,w,c
  1847  001474  0D02               	mullw	2
  1848  001476  0E31               	movlw	low _lat_register
  1849  001478  24F3               	addwf	243,w,c
  1850  00147A  6ED9               	movwf	fsr2l,c
  1851  00147C  0E00               	movlw	high _lat_register
  1852  00147E  20F4               	addwfc	prodh,w,c
  1853  001480  6EDA               	movwf	fsr2h,c
  1854  001482  CFDE F006          	movff	postinc2,??_gpio_pin_write_value+3
  1855  001486  CFDD F007          	movff	postdec2,??_gpio_pin_write_value+4
  1856  00148A  C006  FFD9         	movff	??_gpio_pin_write_value+3,fsr2l
  1857  00148E  C007  FFDA         	movff	??_gpio_pin_write_value+4,fsr2h
  1858  001492  5005               	movf	(??_gpio_pin_write_value+2)^0,w,c
  1859  001494  16DF               	andwf	indf2,f,c
  1860  001496                     l1502:
  1861                           
  1862                           ;mcal/mcal_gpio/mcal_gpio.c: 76:                 break;
  1863  001496  EF84  F00A         	goto	l158
  1864  00149A                     l1504:
  1865                           
  1866                           ;mcal/mcal_gpio/mcal_gpio.c: 78:                 (*lat_register[port]|=(1<<pin));
  1867  00149A  C001  F003         	movff	gpio_pin_write_value@pin,??_gpio_pin_write_value
  1868  00149E  0E01               	movlw	1
  1869  0014A0  6E04               	movwf	(??_gpio_pin_write_value+1)^0,c
  1870  0014A2  2A03               	incf	??_gpio_pin_write_value^0,f,c
  1871  0014A4  EF56  F00A         	goto	u544
  1872  0014A8                     u545:
  1873  0014A8  90D8               	bcf	status,0,c
  1874  0014AA  3604               	rlcf	(??_gpio_pin_write_value+1)^0,f,c
  1875  0014AC                     u544:
  1876  0014AC  2E03               	decfsz	??_gpio_pin_write_value^0,f,c
  1877  0014AE  EF54  F00A         	goto	u545
  1878  0014B2  5009               	movf	gpio_pin_write_value@port^0,w,c
  1879  0014B4  0D02               	mullw	2
  1880  0014B6  0E31               	movlw	low _lat_register
  1881  0014B8  24F3               	addwf	243,w,c
  1882  0014BA  6ED9               	movwf	fsr2l,c
  1883  0014BC  0E00               	movlw	high _lat_register
  1884  0014BE  20F4               	addwfc	prodh,w,c
  1885  0014C0  6EDA               	movwf	fsr2h,c
  1886  0014C2  CFDE F005          	movff	postinc2,??_gpio_pin_write_value+2
  1887  0014C6  CFDD F006          	movff	postdec2,??_gpio_pin_write_value+3
  1888  0014CA  C005  FFD9         	movff	??_gpio_pin_write_value+2,fsr2l
  1889  0014CE  C006  FFDA         	movff	??_gpio_pin_write_value+3,fsr2h
  1890  0014D2  5004               	movf	(??_gpio_pin_write_value+1)^0,w,c
  1891  0014D4  12DF               	iorwf	indf2,f,c
  1892  0014D6  EF4B  F00A         	goto	l1502
  1893  0014DA                     l1508:
  1894                           
  1895                           ;mcal/mcal_gpio/mcal_gpio.c: 83:         }
  1896  0014DA  EF84  F00A         	goto	l158
  1897  0014DE                     l1510:
  1898  0014DE  5002               	movf	gpio_pin_write_value@logic^0,w,c
  1899  0014E0  6E03               	movwf	??_gpio_pin_write_value^0,c
  1900  0014E2  6A04               	clrf	(??_gpio_pin_write_value+1)^0,c
  1901                           
  1902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1903                           ; Switch size 1, requested type "simple"
  1904                           ; Number of cases is 1, Range of values is 0 to 0
  1905                           ; switch strategies available:
  1906                           ; Name         Instructions Cycles
  1907                           ; simple_byte            4     3 (average)
  1908                           ;	Chosen strategy is simple_byte
  1909  0014E4  5004               	movf	(??_gpio_pin_write_value+1)^0,w,c
  1910  0014E6  0A00               	xorlw	0	; case 0
  1911  0014E8  B4D8               	btfsc	status,2,c
  1912  0014EA  EF79  F00A         	goto	l1860
  1913  0014EE  EF6D  F00A         	goto	l1508
  1914  0014F2                     l1860:
  1915                           
  1916                           ; Switch size 1, requested type "simple"
  1917                           ; Number of cases is 2, Range of values is 0 to 1
  1918                           ; switch strategies available:
  1919                           ; Name         Instructions Cycles
  1920                           ; simple_byte            7     4 (average)
  1921                           ;	Chosen strategy is simple_byte
  1922  0014F2  5003               	movf	??_gpio_pin_write_value^0,w,c
  1923  0014F4  0A00               	xorlw	0	; case 0
  1924  0014F6  B4D8               	btfsc	status,2,c
  1925  0014F8  EF2A  F00A         	goto	l1500
  1926  0014FC  0A01               	xorlw	1	; case 1
  1927  0014FE  B4D8               	btfsc	status,2,c
  1928  001500  EF4D  F00A         	goto	l1504
  1929  001504  EF6D  F00A         	goto	l1508
  1930  001508                     l158:
  1931  001508  0012               	return		;funcret
  1932  00150A                     __end_of_gpio_pin_write_value:
  1933                           	callstack 0
  1934                           
  1935 ;; *************** function _gpio_port_write_value *****************
  1936 ;; Defined at:
  1937 ;;		line 171 in file "mcal/mcal_gpio/mcal_gpio.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  port            1    wreg     enum E2998
  1940 ;;  value           1    0[COMRAM] unsigned char 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  port            1    4[COMRAM] enum E2998
  1943 ;;  ret             1    0        enum E2976
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      enum E2976
  1946 ;; Registers used:
  1947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1953 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1957 ;;Total ram usage:        5 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_lcd_intialize
  1963 ;;		_lcd_send_command
  1964 ;;		_lcd_send_char_data
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text10
  1969  0018EC                     __ptext10:
  1970                           	callstack 0
  1971  0018EC                     _gpio_port_write_value:
  1972                           	callstack 27
  1973                           
  1974                           ;incstack = 0
  1975                           ;gpio_port_write_value@port stored from wreg
  1976  0018EC  6E05               	movwf	gpio_port_write_value@port^0,c
  1977  0018EE                     
  1978                           ;mcal/mcal_gpio/mcal_gpio.c: 173:     if (port > 5UL - 1) {
  1979  0018EE  0E04               	movlw	4
  1980  0018F0  6405               	cpfsgt	gpio_port_write_value@port^0,c
  1981  0018F2  EF7D  F00C         	goto	u551
  1982  0018F6  EF7F  F00C         	goto	u550
  1983  0018FA                     u551:
  1984  0018FA  EF81  F00C         	goto	l1524
  1985  0018FE                     u550:
  1986  0018FE  EF93  F00C         	goto	l195
  1987  001902                     l1524:
  1988                           
  1989                           ;mcal/mcal_gpio/mcal_gpio.c: 176:         *lat_register[port] = value;
  1990  001902  5005               	movf	gpio_port_write_value@port^0,w,c
  1991  001904  0D02               	mullw	2
  1992  001906  0E31               	movlw	low _lat_register
  1993  001908  24F3               	addwf	243,w,c
  1994  00190A  6ED9               	movwf	fsr2l,c
  1995  00190C  0E00               	movlw	high _lat_register
  1996  00190E  20F4               	addwfc	prodh,w,c
  1997  001910  6EDA               	movwf	fsr2h,c
  1998  001912  CFDE F002          	movff	postinc2,??_gpio_port_write_value
  1999  001916  CFDD F003          	movff	postdec2,??_gpio_port_write_value+1
  2000  00191A  C002  FFD9         	movff	??_gpio_port_write_value,fsr2l
  2001  00191E  C003  FFDA         	movff	??_gpio_port_write_value+1,fsr2h
  2002  001922  C001  FFDF         	movff	gpio_port_write_value@value,indf2
  2003  001926                     l195:
  2004  001926  0012               	return		;funcret
  2005  001928                     __end_of_gpio_port_write_value:
  2006                           	callstack 0
  2007                           
  2008 ;; *************** function _gpio_port_direction_intialize *****************
  2009 ;; Defined at:
  2010 ;;		line 127 in file "mcal/mcal_gpio/mcal_gpio.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  port            1    wreg     enum E2998
  2013 ;;  direction       1    0[COMRAM] enum E2984
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  port            1    4[COMRAM] enum E2998
  2016 ;;  ret             1    0        enum E2976
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      enum E2976
  2019 ;; Registers used:
  2020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2026 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;Total ram usage:        5 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_lcd_intialize
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text11
  2040  00166C                     __ptext11:
  2041                           	callstack 0
  2042  00166C                     _gpio_port_direction_intialize:
  2043                           	callstack 29
  2044                           
  2045                           ;incstack = 0
  2046                           ;gpio_port_direction_intialize@port stored from wreg
  2047  00166C  6E05               	movwf	gpio_port_direction_intialize@port^0,c
  2048  00166E                     
  2049                           ;mcal/mcal_gpio/mcal_gpio.c: 129:     if (port > 5UL - 1) {
  2050  00166E  0E04               	movlw	4
  2051  001670  6405               	cpfsgt	gpio_port_direction_intialize@port^0,c
  2052  001672  EF3D  F00B         	goto	u591
  2053  001676  EF3F  F00B         	goto	u590
  2054  00167A                     u591:
  2055  00167A  EF69  F00B         	goto	l1600
  2056  00167E                     u590:
  2057  00167E  EF7E  F00B         	goto	l178
  2058  001682                     l1590:
  2059                           
  2060                           ;mcal/mcal_gpio/mcal_gpio.c: 134:                 *tris_register[port] = 0x00;
  2061  001682  5005               	movf	gpio_port_direction_intialize@port^0,w,c
  2062  001684  0D02               	mullw	2
  2063  001686  0E3B               	movlw	low _tris_register
  2064  001688  24F3               	addwf	243,w,c
  2065  00168A  6ED9               	movwf	fsr2l,c
  2066  00168C  0E00               	movlw	high _tris_register
  2067  00168E  20F4               	addwfc	prodh,w,c
  2068  001690  6EDA               	movwf	fsr2h,c
  2069  001692  CFDE F002          	movff	postinc2,??_gpio_port_direction_intialize
  2070  001696  CFDD F003          	movff	postdec2,??_gpio_port_direction_intialize+1
  2071  00169A  C002  FFD9         	movff	??_gpio_port_direction_intialize,fsr2l
  2072  00169E  C003  FFDA         	movff	??_gpio_port_direction_intialize+1,fsr2h
  2073  0016A2  0E00               	movlw	0
  2074  0016A4  6EDF               	movwf	indf2,c
  2075  0016A6                     l1592:
  2076                           
  2077                           ;mcal/mcal_gpio/mcal_gpio.c: 136:                 break;
  2078  0016A6  EF7E  F00B         	goto	l178
  2079  0016AA                     l1594:
  2080                           
  2081                           ;mcal/mcal_gpio/mcal_gpio.c: 138:                 *tris_register[port] = 0xFF;
  2082  0016AA  5005               	movf	gpio_port_direction_intialize@port^0,w,c
  2083  0016AC  0D02               	mullw	2
  2084  0016AE  0E3B               	movlw	low _tris_register
  2085  0016B0  24F3               	addwf	243,w,c
  2086  0016B2  6ED9               	movwf	fsr2l,c
  2087  0016B4  0E00               	movlw	high _tris_register
  2088  0016B6  20F4               	addwfc	prodh,w,c
  2089  0016B8  6EDA               	movwf	fsr2h,c
  2090  0016BA  CFDE F002          	movff	postinc2,??_gpio_port_direction_intialize
  2091  0016BE  CFDD F003          	movff	postdec2,??_gpio_port_direction_intialize+1
  2092  0016C2  C002  FFD9         	movff	??_gpio_port_direction_intialize,fsr2l
  2093  0016C6  C003  FFDA         	movff	??_gpio_port_direction_intialize+1,fsr2h
  2094  0016CA  0EFF               	movlw	255
  2095  0016CC  6EDF               	movwf	indf2,c
  2096  0016CE  EF53  F00B         	goto	l1592
  2097  0016D2                     l1600:
  2098  0016D2  5001               	movf	gpio_port_direction_intialize@direction^0,w,c
  2099  0016D4  6E02               	movwf	??_gpio_port_direction_intialize^0,c
  2100  0016D6  6A03               	clrf	(??_gpio_port_direction_intialize+1)^0,c
  2101                           
  2102                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2103                           ; Switch size 1, requested type "simple"
  2104                           ; Number of cases is 1, Range of values is 0 to 0
  2105                           ; switch strategies available:
  2106                           ; Name         Instructions Cycles
  2107                           ; simple_byte            4     3 (average)
  2108                           ;	Chosen strategy is simple_byte
  2109  0016D8  5003               	movf	(??_gpio_port_direction_intialize+1)^0,w,c
  2110  0016DA  0A00               	xorlw	0	; case 0
  2111  0016DC  B4D8               	btfsc	status,2,c
  2112  0016DE  EF73  F00B         	goto	l1862
  2113  0016E2  EF7E  F00B         	goto	l178
  2114  0016E6                     l1862:
  2115                           
  2116                           ; Switch size 1, requested type "simple"
  2117                           ; Number of cases is 2, Range of values is 0 to 1
  2118                           ; switch strategies available:
  2119                           ; Name         Instructions Cycles
  2120                           ; simple_byte            7     4 (average)
  2121                           ;	Chosen strategy is simple_byte
  2122  0016E6  5002               	movf	??_gpio_port_direction_intialize^0,w,c
  2123  0016E8  0A00               	xorlw	0	; case 0
  2124  0016EA  B4D8               	btfsc	status,2,c
  2125  0016EC  EF41  F00B         	goto	l1590
  2126  0016F0  0A01               	xorlw	1	; case 1
  2127  0016F2  B4D8               	btfsc	status,2,c
  2128  0016F4  EF55  F00B         	goto	l1594
  2129  0016F8  EF7E  F00B         	goto	l178
  2130  0016FC                     l178:
  2131  0016FC  0012               	return		;funcret
  2132  0016FE                     __end_of_gpio_port_direction_intialize:
  2133                           	callstack 0
  2134                           
  2135 ;; *************** function _gpio_pin_direction_intialize *****************
  2136 ;; Defined at:
  2137 ;;		line 23 in file "mcal/mcal_gpio/mcal_gpio.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  port            1    wreg     enum E2998
  2140 ;;  pin             1    0[COMRAM] enum E2988
  2141 ;;  direction       1    1[COMRAM] enum E2984
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  port            1    8[COMRAM] enum E2998
  2144 ;;  ret             1    0        enum E2976
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  1    wreg      enum E2976
  2147 ;; Registers used:
  2148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2154 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2157 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2158 ;;Total ram usage:        9 bytes
  2159 ;; Hardware stack levels used:    1
  2160 ;; This function calls:
  2161 ;;		Nothing
  2162 ;; This function is called by:
  2163 ;;		_lcd_intialize
  2164 ;;		_button_initialize
  2165 ;;		_led_initialize
  2166 ;;		_relay_initialize
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text12
  2171  00150A                     __ptext12:
  2172                           	callstack 0
  2173  00150A                     _gpio_pin_direction_intialize:
  2174                           	callstack 29
  2175                           
  2176                           ;incstack = 0
  2177                           ;gpio_pin_direction_intialize@port stored from wreg
  2178  00150A  6E09               	movwf	gpio_pin_direction_intialize@port^0,c
  2179  00150C                     
  2180                           ;mcal/mcal_gpio/mcal_gpio.c: 25:     if (pin > 8UL - 1) {
  2181  00150C  0E07               	movlw	7
  2182  00150E  6401               	cpfsgt	gpio_pin_direction_intialize@pin^0,c
  2183  001510  EF8C  F00A         	goto	u561
  2184  001514  EF8E  F00A         	goto	u560
  2185  001518                     u561:
  2186  001518  EFD3  F00A         	goto	l1576
  2187  00151C                     u560:
  2188  00151C  EFE8  F00A         	goto	l143
  2189  001520                     l1566:
  2190                           
  2191                           ;mcal/mcal_gpio/mcal_gpio.c: 30:                 (*tris_register[port]&=(~(1<<pin)));
  2192  001520  C001  F003         	movff	gpio_pin_direction_intialize@pin,??_gpio_pin_direction_intialize
  2193  001524  0E01               	movlw	1
  2194  001526  6E04               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2195  001528  2A03               	incf	??_gpio_pin_direction_intialize^0,f,c
  2196  00152A  EF99  F00A         	goto	u574
  2197  00152E                     u575:
  2198  00152E  90D8               	bcf	status,0,c
  2199  001530  3604               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2200  001532                     u574:
  2201  001532  2E03               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2202  001534  EF97  F00A         	goto	u575
  2203  001538  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2204  00153A  0AFF               	xorlw	255
  2205  00153C  6E05               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  2206  00153E  5009               	movf	gpio_pin_direction_intialize@port^0,w,c
  2207  001540  0D02               	mullw	2
  2208  001542  0E3B               	movlw	low _tris_register
  2209  001544  24F3               	addwf	243,w,c
  2210  001546  6ED9               	movwf	fsr2l,c
  2211  001548  0E00               	movlw	high _tris_register
  2212  00154A  20F4               	addwfc	prodh,w,c
  2213  00154C  6EDA               	movwf	fsr2h,c
  2214  00154E  CFDE F006          	movff	postinc2,??_gpio_pin_direction_intialize+3
  2215  001552  CFDD F007          	movff	postdec2,??_gpio_pin_direction_intialize+4
  2216  001556  C006  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  2217  00155A  C007  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  2218  00155E  5005               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  2219  001560  16DF               	andwf	indf2,f,c
  2220  001562                     l1568:
  2221                           
  2222                           ;mcal/mcal_gpio/mcal_gpio.c: 32:                 break;
  2223  001562  EFE8  F00A         	goto	l143
  2224  001566                     l1570:
  2225                           
  2226                           ;mcal/mcal_gpio/mcal_gpio.c: 34:                 (*tris_register[port]|=(1<<pin));
  2227  001566  C001  F003         	movff	gpio_pin_direction_intialize@pin,??_gpio_pin_direction_intialize
  2228  00156A  0E01               	movlw	1
  2229  00156C  6E04               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2230  00156E  2A03               	incf	??_gpio_pin_direction_intialize^0,f,c
  2231  001570  EFBC  F00A         	goto	u584
  2232  001574                     u585:
  2233  001574  90D8               	bcf	status,0,c
  2234  001576  3604               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2235  001578                     u584:
  2236  001578  2E03               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2237  00157A  EFBA  F00A         	goto	u585
  2238  00157E  5009               	movf	gpio_pin_direction_intialize@port^0,w,c
  2239  001580  0D02               	mullw	2
  2240  001582  0E3B               	movlw	low _tris_register
  2241  001584  24F3               	addwf	243,w,c
  2242  001586  6ED9               	movwf	fsr2l,c
  2243  001588  0E00               	movlw	high _tris_register
  2244  00158A  20F4               	addwfc	prodh,w,c
  2245  00158C  6EDA               	movwf	fsr2h,c
  2246  00158E  CFDE F005          	movff	postinc2,??_gpio_pin_direction_intialize+2
  2247  001592  CFDD F006          	movff	postdec2,??_gpio_pin_direction_intialize+3
  2248  001596  C005  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  2249  00159A  C006  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  2250  00159E  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2251  0015A0  12DF               	iorwf	indf2,f,c
  2252  0015A2  EFB1  F00A         	goto	l1568
  2253  0015A6                     l1576:
  2254  0015A6  5002               	movf	gpio_pin_direction_intialize@direction^0,w,c
  2255  0015A8  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  2256  0015AA  6A04               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  2257                           
  2258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2259                           ; Switch size 1, requested type "simple"
  2260                           ; Number of cases is 1, Range of values is 0 to 0
  2261                           ; switch strategies available:
  2262                           ; Name         Instructions Cycles
  2263                           ; simple_byte            4     3 (average)
  2264                           ;	Chosen strategy is simple_byte
  2265  0015AC  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2266  0015AE  0A00               	xorlw	0	; case 0
  2267  0015B0  B4D8               	btfsc	status,2,c
  2268  0015B2  EFDD  F00A         	goto	l1864
  2269  0015B6  EFE8  F00A         	goto	l143
  2270  0015BA                     l1864:
  2271                           
  2272                           ; Switch size 1, requested type "simple"
  2273                           ; Number of cases is 2, Range of values is 0 to 1
  2274                           ; switch strategies available:
  2275                           ; Name         Instructions Cycles
  2276                           ; simple_byte            7     4 (average)
  2277                           ;	Chosen strategy is simple_byte
  2278  0015BA  5003               	movf	??_gpio_pin_direction_intialize^0,w,c
  2279  0015BC  0A00               	xorlw	0	; case 0
  2280  0015BE  B4D8               	btfsc	status,2,c
  2281  0015C0  EF90  F00A         	goto	l1566
  2282  0015C4  0A01               	xorlw	1	; case 1
  2283  0015C6  B4D8               	btfsc	status,2,c
  2284  0015C8  EFB3  F00A         	goto	l1570
  2285  0015CC  EFE8  F00A         	goto	l143
  2286  0015D0                     l143:
  2287  0015D0  0012               	return		;funcret
  2288  0015D2                     __end_of_gpio_pin_direction_intialize:
  2289                           	callstack 0
  2290                           
  2291                           	psect	rparam
  2292  0000                     
  2293                           	psect	idloc
  2294                           
  2295                           ;Config register IDLOC0 @ 0x200000
  2296                           ;	unspecified, using default values
  2297  200000                     	org	2097152
  2298  200000  FF                 	db	255
  2299                           
  2300                           ;Config register IDLOC1 @ 0x200001
  2301                           ;	unspecified, using default values
  2302  200001                     	org	2097153
  2303  200001  FF                 	db	255
  2304                           
  2305                           ;Config register IDLOC2 @ 0x200002
  2306                           ;	unspecified, using default values
  2307  200002                     	org	2097154
  2308  200002  FF                 	db	255
  2309                           
  2310                           ;Config register IDLOC3 @ 0x200003
  2311                           ;	unspecified, using default values
  2312  200003                     	org	2097155
  2313  200003  FF                 	db	255
  2314                           
  2315                           ;Config register IDLOC4 @ 0x200004
  2316                           ;	unspecified, using default values
  2317  200004                     	org	2097156
  2318  200004  FF                 	db	255
  2319                           
  2320                           ;Config register IDLOC5 @ 0x200005
  2321                           ;	unspecified, using default values
  2322  200005                     	org	2097157
  2323  200005  FF                 	db	255
  2324                           
  2325                           ;Config register IDLOC6 @ 0x200006
  2326                           ;	unspecified, using default values
  2327  200006                     	org	2097158
  2328  200006  FF                 	db	255
  2329                           
  2330                           ;Config register IDLOC7 @ 0x200007
  2331                           ;	unspecified, using default values
  2332  200007                     	org	2097159
  2333  200007  FF                 	db	255
  2334                           
  2335                           	psect	config
  2336                           
  2337                           ; Padding undefined space
  2338  300000                     	org	3145728
  2339  300000  FF                 	db	255
  2340                           
  2341                           ;Config register CONFIG1H @ 0x300001
  2342                           ;	Oscillator Selection bits
  2343                           ;	FOSC = RCIO6, External RC oscillator, port function on RA6
  2344                           ;	Fail-Safe Clock Monitor Enable bit
  2345                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2346                           ;	Internal/External Oscillator Switchover bit
  2347                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2348  300001                     	org	3145729
  2349  300001  07                 	db	7
  2350                           
  2351                           ;Config register CONFIG2L @ 0x300002
  2352                           ;	Power-up Timer Enable bit
  2353                           ;	PWRT = OFF, PWRT disabled
  2354                           ;	Brown-out Reset Enable bits
  2355                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2356                           ;	Brown Out Reset Voltage bits
  2357                           ;	BORV = 18, VBOR set to 1.8 V nominal
  2358  300002                     	org	3145730
  2359  300002  1F                 	db	31
  2360                           
  2361                           ;Config register CONFIG2H @ 0x300003
  2362                           ;	Watchdog Timer Enable bit
  2363                           ;	WDTEN = ON, WDT is always enabled. SWDTEN bit has no effect
  2364                           ;	Watchdog Timer Postscale Select bits
  2365                           ;	WDTPS = 32768, 1:32768
  2366  300003                     	org	3145731
  2367  300003  1F                 	db	31
  2368                           
  2369                           ; Padding undefined space
  2370  300004                     	org	3145732
  2371  300004  FF                 	db	255
  2372                           
  2373                           ;Config register CONFIG3H @ 0x300005
  2374                           ;	CCP2 MUX bit
  2375                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2376                           ;	PORTB A/D Enable bit
  2377                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2378                           ;	Low-Power Timer1 Oscillator Enable bit
  2379                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2380                           ;	HFINTOSC Fast Start-up
  2381                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  2382                           ;	MCLR Pin Enable bit
  2383                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2384  300005                     	org	3145733
  2385  300005  8B                 	db	139
  2386                           
  2387                           ;Config register CONFIG4L @ 0x300006
  2388                           ;	Stack Full/Underflow Reset Enable bit
  2389                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2390                           ;	Single-Supply ICSP Enable bit
  2391                           ;	LVP = ON, Single-Supply ICSP enabled
  2392                           ;	Extended Instruction Set Enable bit
  2393                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2394                           ;	Background Debugger Enable bit
  2395                           ;	DEBUG = 0x1, unprogrammed default
  2396  300006                     	org	3145734
  2397  300006  85                 	db	133
  2398                           
  2399                           ; Padding undefined space
  2400  300007                     	org	3145735
  2401  300007  FF                 	db	255
  2402                           
  2403                           ;Config register CONFIG5L @ 0x300008
  2404                           ;	Code Protection Block 0
  2405                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2406                           ;	Code Protection Block 1
  2407                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2408                           ;	Code Protection Block 2
  2409                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2410                           ;	Code Protection Block 3
  2411                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2412  300008                     	org	3145736
  2413  300008  0F                 	db	15
  2414                           
  2415                           ;Config register CONFIG5H @ 0x300009
  2416                           ;	Boot Block Code Protection bit
  2417                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2418                           ;	Data EEPROM Code Protection bit
  2419                           ;	CPD = OFF, Data EEPROM not code-protected
  2420  300009                     	org	3145737
  2421  300009  C0                 	db	192
  2422                           
  2423                           ;Config register CONFIG6L @ 0x30000A
  2424                           ;	Write Protection Block 0
  2425                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2426                           ;	Write Protection Block 1
  2427                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2428                           ;	Write Protection Block 2
  2429                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2430                           ;	Write Protection Block 3
  2431                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  2432  30000A                     	org	3145738
  2433  30000A  0F                 	db	15
  2434                           
  2435                           ;Config register CONFIG6H @ 0x30000B
  2436                           ;	Configuration Register Write Protection bit
  2437                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2438                           ;	Boot Block Write Protection bit
  2439                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2440                           ;	Data EEPROM Write Protection bit
  2441                           ;	WRTD = OFF, Data EEPROM not write-protected
  2442  30000B                     	org	3145739
  2443  30000B  E0                 	db	224
  2444                           
  2445                           ;Config register CONFIG7L @ 0x30000C
  2446                           ;	Table Read Protection Block 0
  2447                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2448                           ;	Table Read Protection Block 1
  2449                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2450                           ;	Table Read Protection Block 2
  2451                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2452                           ;	Table Read Protection Block 3
  2453                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2454  30000C                     	org	3145740
  2455  30000C  0F                 	db	15
  2456                           
  2457                           ;Config register CONFIG7H @ 0x30000D
  2458                           ;	Boot Block Table Read Protection bit
  2459                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2460  30000D                     	org	3145741
  2461  30000D  40                 	db	64
  2462                           tosu	equ	0xFFF
  2463                           tosh	equ	0xFFE
  2464                           tosl	equ	0xFFD
  2465                           stkptr	equ	0xFFC
  2466                           pclatu	equ	0xFFB
  2467                           pclath	equ	0xFFA
  2468                           pcl	equ	0xFF9
  2469                           tblptru	equ	0xFF8
  2470                           tblptrh	equ	0xFF7
  2471                           tblptrl	equ	0xFF6
  2472                           tablat	equ	0xFF5
  2473                           prodh	equ	0xFF4
  2474                           prodl	equ	0xFF3
  2475                           indf0	equ	0xFEF
  2476                           postinc0	equ	0xFEE
  2477                           postdec0	equ	0xFED
  2478                           preinc0	equ	0xFEC
  2479                           plusw0	equ	0xFEB
  2480                           fsr0h	equ	0xFEA
  2481                           fsr0l	equ	0xFE9
  2482                           wreg	equ	0xFE8
  2483                           indf1	equ	0xFE7
  2484                           postinc1	equ	0xFE6
  2485                           postdec1	equ	0xFE5
  2486                           preinc1	equ	0xFE4
  2487                           plusw1	equ	0xFE3
  2488                           fsr1h	equ	0xFE2
  2489                           fsr1l	equ	0xFE1
  2490                           bsr	equ	0xFE0
  2491                           indf2	equ	0xFDF
  2492                           postinc2	equ	0xFDE
  2493                           postdec2	equ	0xFDD
  2494                           preinc2	equ	0xFDC
  2495                           plusw2	equ	0xFDB
  2496                           fsr2h	equ	0xFDA
  2497                           fsr2l	equ	0xFD9
  2498                           status	equ	0xFD8

Data Sizes:
    Strings     44
    Constant    104
    Data        34
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      72
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S1011_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    f.buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_send_custome_char@arr	PTR const unsigned char  size(2) Largest target is 8
		 -> mesg2(CODE[8]), mesg1(CODE[8]), shab_bat3(CODE[8]), shab_bat2(CODE[8]), 
		 -> shab_bat1(CODE[8]), Shab(CODE[8]), blt(CODE[8]), character6(CODE[8]), 

    lcd_send_custome_char@lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(COMRAM[4]), 

    lcd_send_string_data_pos@data	PTR unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[11]), STR_3(CODE[5]), 
		 -> STR_2(CODE[9]), STR_1(CODE[11]), 

    lcd_send_string_data_pos@lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(COMRAM[4]), 

    lcd_send_char_data_pos@lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(COMRAM[4]), 

    lcd_send_char_data@lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(COMRAM[4]), 

    lcd_send_command@lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(COMRAM[4]), 

    lcd_set_cursor@lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(COMRAM[4]), 

    lcd_send_enable@lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(COMRAM[4]), 

    lcd_intialize@lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(COMRAM[4]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 
		 -> TRISA(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_send_custome_char
    _lcd_send_string_data_pos->_lcd_set_cursor
    _lcd_send_custome_char->_lcd_send_char_data_pos
    _lcd_send_char_data_pos->_lcd_set_cursor
    _lcd_set_cursor->_lcd_send_command
    _lcd_send_char_data->_lcd_send_enable
    _lcd_intialize->_lcd_send_command
    _lcd_send_command->_lcd_send_enable
    _lcd_send_enable->_gpio_pin_write_value

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   71310
                                             36 COMRAM     2     2      0
                      _lcd_intialize
              _lcd_send_custome_char
           _lcd_send_string_data_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_send_string_data_pos                             7     1      6   22520
                                             21 COMRAM     7     1      6
                 _lcd_send_char_data
                   _lcd_send_command
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_send_custome_char                               10     3      7   37592
                                             26 COMRAM    10     3      7
                 _lcd_send_char_data
             _lcd_send_char_data_pos
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_send_char_data_pos                               5     0      5   20977
                                             21 COMRAM     5     0      5
                 _lcd_send_char_data
                   _lcd_send_command
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       6     2      4    7993
                                             15 COMRAM     6     2      4
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_send_char_data                                   3     0      3    5210
                                             11 COMRAM     3     0      3
               _gpio_pin_write_value
              _gpio_port_write_value
                    _lcd_send_enable
 ---------------------------------------------------------------------------------
 (1) _lcd_intialize                                        3     1      2   11198
                                             15 COMRAM     3     1      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_value
      _gpio_port_direction_intialize
              _gpio_port_write_value
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_send_command                                     4     1      3    7338
                                             11 COMRAM     4     1      3
               _gpio_pin_write_value
              _gpio_port_write_value
                    _lcd_send_enable
 ---------------------------------------------------------------------------------
 (4) _lcd_send_enable                                      2     0      2    2212
                                              9 COMRAM     2     0      2
               _gpio_pin_write_value
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_value                                 9     7      2    1972
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _gpio_port_write_value                                5     4      1     308
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _gpio_port_direction_intialize                        5     4      1     179
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_direction_intialize                         9     7      2     907
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_intialize
     _gpio_pin_direction_intialize
     _gpio_pin_write_value
     _gpio_port_direction_intialize
     _gpio_port_write_value
     _lcd_send_command
       _gpio_pin_write_value
       _gpio_port_write_value
       _lcd_send_enable
         _gpio_pin_write_value
   _lcd_send_custome_char
     _lcd_send_char_data
       _gpio_pin_write_value
       _gpio_port_write_value
       _lcd_send_enable
         _gpio_pin_write_value
     _lcd_send_char_data_pos
       _lcd_send_char_data
         _gpio_pin_write_value
         _gpio_port_write_value
         _lcd_send_enable
           _gpio_pin_write_value
       _lcd_send_command
         _gpio_pin_write_value
         _gpio_port_write_value
         _lcd_send_enable
           _gpio_pin_write_value
       _lcd_set_cursor
         _lcd_send_command
           _gpio_pin_write_value
           _gpio_port_write_value
           _lcd_send_enable
             _gpio_pin_write_value
     _lcd_send_command
       _gpio_pin_write_value
       _gpio_port_write_value
       _lcd_send_enable
         _gpio_pin_write_value
   _lcd_send_string_data_pos
     _lcd_send_char_data
       _gpio_pin_write_value
       _gpio_port_write_value
       _lcd_send_enable
         _gpio_pin_write_value
     _lcd_send_command
       _gpio_pin_write_value
       _gpio_port_write_value
       _lcd_send_enable
         _gpio_pin_write_value
     _lcd_set_cursor
       _lcd_send_command
         _gpio_pin_write_value
         _gpio_port_write_value
         _lcd_send_enable
           _gpio_pin_write_value

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     26      48       1       75.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      48      32        0.0%
DATA                 0      0      48       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri Nov 13 16:49:43 2020

          lcd_send_char_data_pos@coulmn 0019                   _lcd_send_custome_char 16FE  
            ??_lcd_send_string_data_pos 001C                                     l143 15D0  
                                   l311 1778                                     l306 17EA  
                                   l158 1508                                     l272 189E  
                                   l178 16FC                                     l282 166A  
                                   l195 1926                                     l291 18EA  
                                   l269 143C                                     l294 195C  
                                   l288 1848                                     u520 1450  
                                   u600 1750                                     u521 144C  
                                   u601 174C                                     u610 17EA  
                                   u611 17E6                                     u550 18FE  
                                   u534 1466                                     u551 18FA  
                                   u535 1462                                     u560 151C  
                                   u544 14AC                                     u561 1518  
                                   u545 14A8                                     u574 1532  
                                   u590 167E                                     u575 152E  
                                   u591 167A                                     u584 1578  
                                   u585 1574                                     u907 138C  
                                   u917 13AE                                     u927 13C8  
                                   u937 183C                                     u947 1872  
                                   u877 1278                                     u887 12AA  
                                   u897 17C6                                     _blt 1059  
                                   prod 000FF3                                     wreg 000FE8  
            __end_of_lcd_send_char_data 18EC                         ?_lcd_set_cursor 0010  
                                  l1500 1454                                    l1502 1496  
                                  l1510 14DE                                    l1600 16D2  
                                  l1504 149A                                    l1530 184A  
                                  l1610 1386                                    l1524 1902  
                                  l1516 18EE                                    l1508 14DA  
                                  l1532 1870                                    l1612 1398  
                                  l1540 15D2                                    l1620 16FE  
                                  l1526 1926                                    l1518 18EE  
                                  l1534 1878                                    l1614 13B6  
                                  l1542 15D8                                    l1550 1630  
                                  l1606 1928                                    l1630 173E  
                                  l1622 1714                                    l1560 150C  
                                  l1536 17EC                                    l1616 13C6  
                                  l1608 12BE                                    l1544 15EE  
                                  l1632 1740                                    l1640 17BC  
                                  l1800 1102                                    l1570 1566  
                                  l1538 1836                                    l1546 1604  
                                  l1634 1750                                    l1618 16FE  
                                  l1642 17C0                                    l1810 11A2  
                                  l1802 1122                                    l1492 1440  
                                  l1556 18A0                                    l1548 161A  
                                  l1628 1718                                    l1644 17CE  
                                  l1636 177A                                    l1820 1236  
                                  l1812 11C2                                    l1804 1142  
                                  l1566 1520                                    l1558 150C  
                                  l1590 1682                                    l1582 166E  
                                  l1494 1440                                    l1638 17A2  
                                  l1822 1252                                    l1814 11E2  
                                  l1806 1162                                    l1568 1562  
                                  l1576 15A6                                    l1592 16A6  
                                  l1584 166E                                    l1824 126E  
                                  l1816 11FE                                    l1808 1182  
                                  l1594 16AA                                    l1826 1284  
                                  l1818 121A                                    l1860 14F2  
                                  l1828 12A0                                    l1862 16E6  
                                  l1864 15BA                                    l1792 1096  
                                  l1858 1644                                    l1794 10A2  
                                  l1796 10C2                                    l1798 10E2  
                                  STR_1 1074                                    STR_2 107F  
                                  STR_3 108D                                    STR_4 1069  
                                  STR_5 108D                                    STR_6 1088  
                                  STR_7 1092                        ?_lcd_send_enable 000A  
                                  _LATA 000F89                                    _LATB 000F8A  
                                  _LATC 000F8B                                    _LATD 000F8C  
                                  _LATE 000F8D                                    _Shab 1051  
                                  _main 1096                                    fsr2h 000FDA  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    prodl 000FF3  
                                  start 0000                            ___param_bank 000000  
            gpio_port_write_value@value 0001                   _gpio_port_write_value 18EC  
                  _gpio_pin_write_value 143E         __size_of_lcd_send_char_data_pos 0036  
                                 ?_main 0001                       ?_lcd_send_command 000C  
                                 _PORTA 000F80                                   _PORTB 000F81  
                                 _PORTC 000F82                                   _PORTD 000F83  
                                 _PORTE 000F84                                   _TRISA 000F92  
                                 _TRISB 000F93                                   _TRISC 000F94  
                                 _TRISD 000F95                                   _TRISE 000F96  
                    ??_lcd_send_command 000F                                   _lcd_1 0045  
                                 _mesg1 1031                                   _mesg2 1029  
                                 tablat 000FF5                                   status 000FD8  
                       ??_lcd_intialize 0012   gpio_pin_direction_intialize@direction 0002  
gpio_port_direction_intialize@direction 0001                        lcd_intialize@lcd 0010  
          lcd_send_string_data_pos@data 001A                         __initialization 195E  
                          __end_of_Shab 1059                            __end_of_main 12BE  
                ?_lcd_send_custome_char 001B                   ?_gpio_pin_write_value 0001  
                                ??_main 0025                           __activetblptr 000002  
        ?_gpio_port_direction_intialize 0001                  _lcd_send_char_data_pos 1928  
                         _tris_register 003B                  ?_gpio_port_write_value 0001  
      __end_of_lcd_send_string_data_pos 17EC                            __pdataCOMRAM 0027  
                          __mediumconst 0000                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
             gpio_port_write_value@port 0005                              __accesstop 0060  
               __end_of__initialization 197E                           ___rparam_used 000001  
                        __pcstackCOMRAM 0001                  ??_gpio_pin_write_value 0003  
                         __end_of_mesg1 1039                           __end_of_mesg2 1031  
                      ??_lcd_set_cursor 0014                lcd_send_custome_char@arr 001F  
              lcd_send_custome_char@lcd 001B                lcd_send_custome_char@pos 0021  
              lcd_send_custome_char@row 001D                    lcd_set_cursor@coulmn 0013  
                 lcd_send_char_data@lcd 000C                      lcd_send_enable@lcd 000A  
                            _character1 1021                              _character2 1019  
                            _character3 1011                              _character4 1009  
                            _character5 1001                              _character6 1061  
                    _lcd_send_char_data 18A0                     ?_lcd_send_char_data 000C  
                  ??_lcd_send_char_data 000F       __size_of_lcd_send_string_data_pos 0072  
             ?_lcd_send_string_data_pos 0016               __size_of_lcd_send_command 005E  
               ??_lcd_send_custome_char 0022                                 __Hparam 0000  
              __size_of_lcd_send_enable 0056                                 __Lparam 0000  
                          __psmallconst 1000                                 __pcinit 195E  
                               __ramtop 1000                                 __ptext0 1096  
                               __ptext1 177A                                 __ptext2 16FE  
                               __ptext3 1928                                 __ptext4 15D2  
                               __ptext5 18A0                                 __ptext6 12BE  
                               __ptext7 17EC                                 __ptext8 184A  
                               __ptext9 143E                 ?_lcd_send_char_data_pos 0016  
                     __end_of_shab_bat1 1051                       __end_of_shab_bat2 1049  
                     __end_of_shab_bat3 1041          lcd_send_custome_char@l_counter 0024  
                  end_of_initialization 197E                           __Lmediumconst 0000  
       ??_gpio_port_direction_intialize 0002                 ??_gpio_port_write_value 0002  
                 __end_of_lcd_intialize 143E                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc2 000FDE          __end_of_lcd_send_char_data_pos 195E  
  __end_of_gpio_pin_direction_intialize 15D2   __size_of_gpio_pin_direction_intialize 00C8  
          _gpio_pin_direction_intialize 150A          lcd_send_string_data_pos@coulmn 0019  
                     ??_lcd_send_enable 000C                           __pidataCOMRAM 1988  
                   start_initialization 195E                             __end_of_blt 1061  
         ?_gpio_pin_direction_intialize 0001                            _lat_register 0031  
                      _lcd_send_command 17EC                gpio_pin_write_value@port 0009  
 __end_of_gpio_port_direction_intialize 16FE  __size_of_gpio_port_direction_intialize 0092  
         _gpio_port_direction_intialize 166C           __size_of_gpio_pin_write_value 00CC  
     gpio_port_direction_intialize@port 0005                  lcd_send_char_data@data 000E  
       gpio_pin_direction_intialize@pin 0001          __size_of_lcd_send_custome_char 007C  
         __end_of_lcd_send_custome_char 177A                     lcd_send_command@lcd 000C  
                           __smallconst 1000               lcd_send_char_data_pos@lcd 0016  
             lcd_send_char_data_pos@row 0018             __size_of_lcd_send_char_data 004C  
               __size_of_lcd_set_cursor 009A                               _shab_bat1 1049  
                             _shab_bat2 1041                               _shab_bat3 1039  
        ??_gpio_pin_direction_intialize 0003          __size_of_gpio_port_write_value 003C  
         __end_of_gpio_port_write_value 1928                      __end_of_character1 1029  
                    __end_of_character2 1021                      __end_of_character3 1019  
                    __end_of_character4 1011                      __end_of_character5 1009  
                    __end_of_character6 1069                _lcd_send_string_data_pos 177A  
           lcd_send_string_data_pos@lcd 0016             lcd_send_string_data_pos@row 0018  
                             copy_data0 1972               gpio_pin_write_value@logic 0002  
                       _lcd_send_enable 184A                                __Hrparam 0000  
               gpio_pin_write_value@pin 0001                                __Lrparam 0000  
              __end_of_lcd_send_command 184A                  __size_of_lcd_intialize 0180  
                              __ptext10 18EC                                __ptext11 166C  
                              __ptext12 150A                           __size_of_main 0228  
           lcd_send_custome_char@coulmn 001E                 lcd_send_command@command 000E  
      gpio_pin_direction_intialize@port 0009            __end_of_gpio_pin_write_value 150A  
               __end_of_lcd_send_enable 18A0                          _lcd_set_cursor 15D2  
                     lcd_set_cursor@lcd 0010                       lcd_set_cursor@row 0012  
                         _lcd_intialize 12BE                ??_lcd_send_char_data_pos 001B  
                __end_of_lcd_set_cursor 166C                           _port_register 0027  
                        ?_lcd_intialize 0010              lcd_send_char_data_pos@data 001A  

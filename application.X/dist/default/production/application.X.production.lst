

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri Nov 13 17:17:16 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 05/05/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F46K20 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	idataBANK0
    77  002270                     __pidataBANK0:
    78                           	callstack 0
    79                           
    80                           ;initializer for _port_register
    81  002270  80                 	db	128
    82  002271  0F                 	db	15
    83  002272  81                 	db	129
    84  002273  0F                 	db	15
    85  002274  82                 	db	130
    86  002275  0F                 	db	15
    87  002276  83                 	db	131
    88  002277  0F                 	db	15
    89  002278  84                 	db	132
    90  002279  0F                 	db	15
    91                           
    92                           ;initializer for _lat_register
    93  00227A  89                 	db	137
    94  00227B  0F                 	db	15
    95  00227C  8A                 	db	138
    96  00227D  0F                 	db	15
    97  00227E  8B                 	db	139
    98  00227F  0F                 	db	15
    99  002280  8C                 	db	140
   100  002281  0F                 	db	15
   101  002282  8D                 	db	141
   102  002283  0F                 	db	15
   103                           
   104                           ;initializer for _tris_register
   105  002284  92                 	db	146
   106  002285  0F                 	db	15
   107  002286  93                 	db	147
   108  002287  0F                 	db	15
   109  002288  94                 	db	148
   110  002289  0F                 	db	15
   111  00228A  95                 	db	149
   112  00228B  0F                 	db	15
   113  00228C  96                 	db	150
   114  00228D  0F                 	db	15
   115                           
   116                           ;initializer for _lcd_1
   117  00228E  32                 	db	50
   118  00228F  13                 	db	19
   119  002290  00                 	db	0
   120  002291  00                 	db	0
   121  0000                     _PORTE	set	3972
   122  0000                     _PORTD	set	3971
   123  0000                     _PORTC	set	3970
   124  0000                     _PORTB	set	3969
   125  0000                     _PORTA	set	3968
   126  0000                     _LATE	set	3981
   127  0000                     _LATD	set	3980
   128  0000                     _LATC	set	3979
   129  0000                     _LATB	set	3978
   130  0000                     _LATA	set	3977
   131  0000                     _TRISE	set	3990
   132  0000                     _TRISD	set	3989
   133  0000                     _TRISC	set	3988
   134  0000                     _TRISB	set	3987
   135  0000                     _TRISA	set	3986
   136                           
   137                           	psect	smallconst
   138  001000                     __psmallconst:
   139                           	callstack 0
   140  001000  00                 	db	0
   141  001001                     STR_1:
   142  001001  54                 	db	84	;'T'
   143  001002  69                 	db	105	;'i'
   144  001003  6D                 	db	109	;'m'
   145  001004  65                 	db	101	;'e'
   146  001005  20                 	db	32
   147  001006  3A                 	db	58	;':'
   148  001007  00                 	db	0
   149  001008                     STR_6:
   150  001008  25                 	db	37
   151  001009  69                 	db	105	;'i'
   152  00100A  00                 	db	0
   153  00100B                     STR_4:
   154  00100B  20                 	db	32
   155  00100C  20                 	db	32
   156  00100D  00                 	db	0
   157  00100E  00                 	db	0	; dummy byte at the end
   158  0000                     
   159                           ; #config settings
   160                           
   161                           	psect	cinit
   162  002204                     __pcinit:
   163                           	callstack 0
   164  002204                     start_initialization:
   165                           	callstack 0
   166  002204                     __initialization:
   167                           	callstack 0
   168                           
   169                           ; Initialize objects allocated to BANK0 (34 bytes)
   170                           ; load TBLPTR registers with __pidataBANK0
   171  002204  0E70               	movlw	low __pidataBANK0
   172  002206  6EF6               	movwf	tblptrl,c
   173  002208  0E22               	movlw	high __pidataBANK0
   174  00220A  6EF7               	movwf	tblptrh,c
   175  00220C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   176  00220E  6EF8               	movwf	tblptru,c
   177  002210  EE00  F0B1         	lfsr	0,__pdataBANK0
   178  002214  EE10 F022          	lfsr	1,34
   179  002218                     copy_data0:
   180  002218  0009               	tblrd		*+
   181  00221A  CFF5 FFEE          	movff	tablat,postinc0
   182  00221E  50E5               	movf	postdec1,w,c
   183  002220  50E1               	movf	fsr1l,w,c
   184  002222  E1FA               	bnz	copy_data0
   185                           
   186                           ; Clear objects allocated to BANK0 (40 bytes)
   187  002224  EE00  F089         	lfsr	0,__pbssBANK0
   188  002228  0E28               	movlw	40
   189  00222A                     clear_0:
   190  00222A  6AEE               	clrf	postinc0,c
   191  00222C  06E8               	decf	wreg,f,c
   192  00222E  E1FD               	bnz	clear_0
   193  002230                     end_of_initialization:
   194                           	callstack 0
   195  002230                     __end_of__initialization:
   196                           	callstack 0
   197  002230  0E00               	movlw	low (__Lmediumconst shr (0+16))
   198  002232  6EF8               	movwf	tblptru,c
   199  002234  0100               	movlb	0
   200  002236  EF53  F00A         	goto	_main	;jump to C main() function
   201                           
   202                           	psect	bssBANK0
   203  000089                     __pbssBANK0:
   204                           	callstack 0
   205  000089                     _nout:
   206                           	callstack 0
   207  000089                     	ds	2
   208  00008B                     _width:
   209                           	callstack 0
   210  00008B                     	ds	2
   211  00008D                     _prec:
   212                           	callstack 0
   213  00008D                     	ds	2
   214  00008F                     _flags:
   215                           	callstack 0
   216  00008F                     	ds	2
   217  000091                     _dbuf:
   218                           	callstack 0
   219  000091                     	ds	32
   220                           
   221                           	psect	dataBANK0
   222  0000B1                     __pdataBANK0:
   223                           	callstack 0
   224  0000B1                     _port_register:
   225                           	callstack 0
   226  0000B1                     	ds	10
   227  0000BB                     _lat_register:
   228                           	callstack 0
   229  0000BB                     	ds	10
   230  0000C5                     _tris_register:
   231                           	callstack 0
   232  0000C5                     	ds	10
   233  0000CF                     _lcd_1:
   234                           	callstack 0
   235  0000CF                     	ds	4
   236                           
   237                           	psect	cstackBANK0
   238  000060                     __pcstackBANK0:
   239                           	callstack 0
   240  000060                     	ds	2
   241  000062                     sprintf@ap:
   242                           	callstack 0
   243                           
   244                           ; 2 bytes @ 0x2
   245  000062                     	ds	2
   246  000064                     sprintf@f:
   247                           	callstack 0
   248                           
   249                           ; 6 bytes @ 0x4
   250  000064                     	ds	6
   251  00006A                     byte_to_string@number:
   252                           	callstack 0
   253                           
   254                           ; 1 bytes @ 0xA
   255  00006A                     	ds	1
   256  00006B                     main@hours:
   257                           	callstack 0
   258                           
   259                           ; 8 bytes @ 0xB
   260  00006B                     	ds	8
   261  000073                     main@min:
   262                           	callstack 0
   263                           
   264                           ; 8 bytes @ 0x13
   265  000073                     	ds	8
   266  00007B                     main@sec:
   267                           	callstack 0
   268                           
   269                           ; 8 bytes @ 0x1B
   270  00007B                     	ds	8
   271  000083                     main@h:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x23
   275  000083                     	ds	2
   276  000085                     main@m:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x25
   280  000085                     	ds	2
   281  000087                     main@s:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0x27
   285  000087                     	ds	2
   286                           
   287                           	psect	cstackCOMRAM
   288  000001                     __pcstackCOMRAM:
   289                           	callstack 0
   290  000001                     ?_strlen:
   291                           	callstack 0
   292  000001                     ?___aodiv:
   293                           	callstack 0
   294  000001                     ?___aomod:
   295                           	callstack 0
   296  000001                     gpio_pin_direction_intialize@pin:
   297                           	callstack 0
   298  000001                     gpio_pin_write_value@pin:
   299                           	callstack 0
   300  000001                     gpio_port_direction_intialize@direction:
   301                           	callstack 0
   302  000001                     gpio_port_write_value@value:
   303                           	callstack 0
   304  000001                     fputc@c:
   305                           	callstack 0
   306  000001                     strlen@s:
   307                           	callstack 0
   308  000001                     ___aodiv@dividend:
   309                           	callstack 0
   310  000001                     ___aomod@dividend:
   311                           	callstack 0
   312                           
   313                           ; 8 bytes @ 0x0
   314  000001                     	ds	1
   315  000002                     ??_gpio_port_direction_intialize:
   316  000002                     ??_gpio_port_write_value:
   317  000002                     gpio_pin_direction_intialize@direction:
   318                           	callstack 0
   319  000002                     gpio_pin_write_value@logic:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0x1
   323  000002                     	ds	1
   324  000003                     ??_gpio_pin_direction_intialize:
   325  000003                     ??_gpio_pin_write_value:
   326  000003                     fputc@fp:
   327                           	callstack 0
   328  000003                     strlen@a:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x2
   332  000003                     	ds	2
   333  000005                     ??_fputc:
   334  000005                     gpio_port_direction_intialize@port:
   335                           	callstack 0
   336  000005                     gpio_port_write_value@port:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x4
   340  000005                     	ds	4
   341  000009                     gpio_pin_direction_intialize@port:
   342                           	callstack 0
   343  000009                     gpio_pin_write_value@port:
   344                           	callstack 0
   345  000009                     ___aodiv@divisor:
   346                           	callstack 0
   347  000009                     ___aomod@divisor:
   348                           	callstack 0
   349                           
   350                           ; 8 bytes @ 0x8
   351  000009                     	ds	1
   352  00000A                     lcd_send_enable@lcd:
   353                           	callstack 0
   354  00000A                     fputs@s:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x9
   358  00000A                     	ds	2
   359  00000C                     lcd_send_command@lcd:
   360                           	callstack 0
   361  00000C                     lcd_send_char_data@lcd:
   362                           	callstack 0
   363  00000C                     fputs@fp:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0xB
   367  00000C                     	ds	2
   368  00000E                     lcd_send_command@command:
   369                           	callstack 0
   370  00000E                     lcd_send_char_data@data:
   371                           	callstack 0
   372  00000E                     fputs@c:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0xD
   376  00000E                     	ds	1
   377  00000F                     ??_lcd_send_command:
   378  00000F                     fputs@i:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0xE
   382  00000F                     	ds	1
   383  000010                     lcd_intialize@lcd:
   384                           	callstack 0
   385  000010                     lcd_set_cursor@lcd:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0xF
   389  000010                     	ds	1
   390  000011                     ?_pad:
   391                           	callstack 0
   392  000011                     ___aodiv@counter:
   393                           	callstack 0
   394  000011                     ___aomod@counter:
   395                           	callstack 0
   396  000011                     pad@fp:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x10
   400  000011                     	ds	1
   401  000012                     ??_lcd_intialize:
   402  000012                     lcd_set_cursor@row:
   403                           	callstack 0
   404  000012                     ___aodiv@sign:
   405                           	callstack 0
   406  000012                     ___aomod@sign:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0x11
   410  000012                     	ds	1
   411  000013                     ?_abs:
   412                           	callstack 0
   413  000013                     lcd_set_cursor@coulmn:
   414                           	callstack 0
   415  000013                     pad@buf:
   416                           	callstack 0
   417  000013                     abs@a:
   418                           	callstack 0
   419  000013                     ___aodiv@quotient:
   420                           	callstack 0
   421                           
   422                           ; 8 bytes @ 0x12
   423  000013                     	ds	1
   424  000014                     ??_lcd_set_cursor:
   425                           
   426                           ; 1 bytes @ 0x13
   427  000014                     	ds	1
   428  000015                     ??_abs:
   429  000015                     pad@p:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x14
   433  000015                     	ds	1
   434  000016                     lcd_send_string_data_pos@lcd:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x15
   438  000016                     	ds	1
   439  000017                     ??_pad:
   440                           
   441                           ; 1 bytes @ 0x16
   442  000017                     	ds	1
   443  000018                     lcd_send_string_data_pos@row:
   444                           	callstack 0
   445  000018                     pad@i:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x17
   449  000018                     	ds	1
   450  000019                     lcd_send_string_data_pos@coulmn:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x18
   454  000019                     	ds	1
   455  00001A                     lcd_send_string_data_pos@data:
   456                           	callstack 0
   457  00001A                     pad@w:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x19
   461  00001A                     	ds	2
   462  00001C                     ??_lcd_send_string_data_pos:
   463  00001C                     ?_dtoa:
   464                           	callstack 0
   465  00001C                     dtoa@fp:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x1B
   469  00001C                     	ds	2
   470  00001E                     dtoa@d:
   471                           	callstack 0
   472                           
   473                           ; 8 bytes @ 0x1D
   474  00001E                     	ds	8
   475  000026                     ??_dtoa:
   476                           
   477                           ; 1 bytes @ 0x25
   478  000026                     	ds	8
   479  00002E                     _dtoa$1071:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x2D
   483  00002E                     	ds	2
   484  000030                     dtoa@p:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x2F
   488  000030                     	ds	2
   489  000032                     dtoa@w:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x31
   493  000032                     	ds	2
   494  000034                     dtoa@s:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x33
   498  000034                     	ds	2
   499  000036                     dtoa@n:
   500                           	callstack 0
   501                           
   502                           ; 8 bytes @ 0x35
   503  000036                     	ds	8
   504  00003E                     dtoa@i:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x3D
   508  00003E                     	ds	2
   509  000040                     ?_vfpfcnvrt:
   510                           	callstack 0
   511  000040                     vfpfcnvrt@fp:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x3F
   515  000040                     	ds	2
   516  000042                     vfpfcnvrt@fmt:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x41
   520  000042                     	ds	2
   521  000044                     vfpfcnvrt@ap:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x43
   525  000044                     	ds	2
   526  000046                     ??_vfpfcnvrt:
   527                           
   528                           ; 1 bytes @ 0x45
   529  000046                     	ds	2
   530  000048                     vfpfcnvrt@ll:
   531                           	callstack 0
   532                           
   533                           ; 8 bytes @ 0x47
   534  000048                     	ds	8
   535  000050                     ?_vfprintf:
   536                           	callstack 0
   537  000050                     vfprintf@fp:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x4F
   541  000050                     	ds	2
   542  000052                     vfprintf@fmt:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x51
   546  000052                     	ds	2
   547  000054                     vfprintf@ap:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x53
   551  000054                     	ds	2
   552  000056                     vfprintf@cfmt:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x55
   556  000056                     	ds	2
   557  000058                     ?_sprintf:
   558                           	callstack 0
   559  000058                     sprintf@s:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x57
   563  000058                     	ds	2
   564  00005A                     sprintf@fmt:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x59
   568  00005A                     	ds	4
   569  00005E                     byte_to_string@output:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x5D
   573  00005E                     	ds	2
   574  000060                     
   575                           ; 1 bytes @ 0x5F
   576 ;;
   577 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   578 ;;
   579 ;; *************** function _main *****************
   580 ;; Defined at:
   581 ;;		line 17 in file "application.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  sec             8   27[BANK0 ] unsigned short [4]
   586 ;;  min             8   19[BANK0 ] unsigned short [4]
   587 ;;  hours           8   11[BANK0 ] unsigned short [4]
   588 ;;  s               2   39[BANK0 ] unsigned short 
   589 ;;  m               2   37[BANK0 ] unsigned short 
   590 ;;  h               2   35[BANK0 ] unsigned short 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  2  220[None  ] int 
   593 ;; Registers used:
   594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   601 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   604 ;;Total ram usage:       30 bytes
   605 ;; Hardware stack levels required when called:    9
   606 ;; This function calls:
   607 ;;		_byte_to_string
   608 ;;		_lcd_intialize
   609 ;;		_lcd_send_string_data_pos
   610 ;; This function is called by:
   611 ;;		Startup code after reset
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text0
   616  0014A6                     __ptext0:
   617                           	callstack 0
   618  0014A6                     _main:
   619                           	callstack 22
   620  0014A6                     
   621                           ;application.c: 18:     lcd_intialize(&lcd_1);
   622  0014A6  0ECF               	movlw	low _lcd_1
   623  0014A8  6E10               	movwf	lcd_intialize@lcd^0,c
   624  0014AA  0E00               	movlw	high _lcd_1
   625  0014AC  6E11               	movwf	(lcd_intialize@lcd+1)^0,c
   626  0014AE  ECDF  F00B         	call	_lcd_intialize	;wreg free
   627  0014B2                     
   628                           ;application.c: 20:     lcd_send_string_data_pos(&lcd_1, 1, 1, "Time :");
   629  0014B2  0ECF               	movlw	low _lcd_1
   630  0014B4  6E16               	movwf	lcd_send_string_data_pos@lcd^0,c
   631  0014B6  0E00               	movlw	high _lcd_1
   632  0014B8  6E17               	movwf	(lcd_send_string_data_pos@lcd+1)^0,c
   633  0014BA  0E01               	movlw	1
   634  0014BC  6E18               	movwf	lcd_send_string_data_pos@row^0,c
   635  0014BE  0E01               	movlw	1
   636  0014C0  6E19               	movwf	lcd_send_string_data_pos@coulmn^0,c
   637  0014C2  0E01               	movlw	low STR_1
   638  0014C4  6E1A               	movwf	lcd_send_string_data_pos@data^0,c
   639  0014C6  0E10               	movlw	high STR_1
   640  0014C8  6E1B               	movwf	(lcd_send_string_data_pos@data+1)^0,c
   641  0014CA  ECE3  F00E         	call	_lcd_send_string_data_pos	;wreg free
   642  0014CE                     l2580:
   643                           
   644                           ;application.c: 24:         for (h = 0; h < 12; h++) {
   645  0014CE  0E00               	movlw	0
   646  0014D0  0100               	movlb	0	; () banked
   647  0014D2  6F84               	movwf	(main@h+1)& (0+255),b
   648  0014D4  0E00               	movlw	0
   649  0014D6  6F83               	movwf	main@h& (0+255),b
   650  0014D8                     l2586:
   651                           
   652                           ; BSR set to: 0
   653                           ;application.c: 25:             for (m = 0; m < 60; m++) {
   654  0014D8  0E00               	movlw	0
   655  0014DA  6F86               	movwf	(main@m+1)& (0+255),b
   656  0014DC  0E00               	movlw	0
   657  0014DE  6F85               	movwf	main@m& (0+255),b
   658  0014E0                     l2592:
   659                           
   660                           ; BSR set to: 0
   661                           ;application.c: 26:                 for (s = 0; s < 60; s++) {
   662  0014E0  0E00               	movlw	0
   663  0014E2  6F88               	movwf	(main@s+1)& (0+255),b
   664  0014E4  0E00               	movlw	0
   665  0014E6  6F87               	movwf	main@s& (0+255),b
   666  0014E8                     l2598:
   667                           
   668                           ; BSR set to: 0
   669                           ;application.c: 27:                     byte_to_string(h,&hours);
   670  0014E8  0E6B               	movlw	low main@hours
   671  0014EA  6E5E               	movwf	byte_to_string@output^0,c
   672  0014EC  0E00               	movlw	high main@hours
   673  0014EE  6E5F               	movwf	(byte_to_string@output+1)^0,c
   674  0014F0  5183               	movf	main@h& (0+255),w,b
   675  0014F2  EC49  F011         	call	_byte_to_string
   676                           
   677                           ;application.c: 28:                     byte_to_string(m,&min);
   678  0014F6  0E73               	movlw	low main@min
   679  0014F8  6E5E               	movwf	byte_to_string@output^0,c
   680  0014FA  0E00               	movlw	high main@min
   681  0014FC  6E5F               	movwf	(byte_to_string@output+1)^0,c
   682  0014FE  0100               	movlb	0	; () banked
   683  001500  5185               	movf	main@m& (0+255),w,b
   684  001502  EC49  F011         	call	_byte_to_string
   685                           
   686                           ;application.c: 29:                     byte_to_string(s,&sec);
   687  001506  0E7B               	movlw	low main@sec
   688  001508  6E5E               	movwf	byte_to_string@output^0,c
   689  00150A  0E00               	movlw	high main@sec
   690  00150C  6E5F               	movwf	(byte_to_string@output+1)^0,c
   691  00150E  0100               	movlb	0	; () banked
   692  001510  5187               	movf	main@s& (0+255),w,b
   693  001512  EC49  F011         	call	_byte_to_string
   694  001516                     
   695                           ;application.c: 30:                     lcd_send_string_data_pos(&lcd_1, 1, 7, hours);
   696  001516  0ECF               	movlw	low _lcd_1
   697  001518  6E16               	movwf	lcd_send_string_data_pos@lcd^0,c
   698  00151A  0E00               	movlw	high _lcd_1
   699  00151C  6E17               	movwf	(lcd_send_string_data_pos@lcd+1)^0,c
   700  00151E  0E01               	movlw	1
   701  001520  6E18               	movwf	lcd_send_string_data_pos@row^0,c
   702  001522  0E07               	movlw	7
   703  001524  6E19               	movwf	lcd_send_string_data_pos@coulmn^0,c
   704  001526  0E6B               	movlw	low main@hours
   705  001528  6E1A               	movwf	lcd_send_string_data_pos@data^0,c
   706  00152A  0E00               	movlw	high main@hours
   707  00152C  6E1B               	movwf	(lcd_send_string_data_pos@data+1)^0,c
   708  00152E  ECE3  F00E         	call	_lcd_send_string_data_pos	;wreg free
   709  001532                     
   710                           ;application.c: 31:                     lcd_send_string_data_pos(&lcd_1, 1, 9, ":");
   711  001532  0ECF               	movlw	low _lcd_1
   712  001534  6E16               	movwf	lcd_send_string_data_pos@lcd^0,c
   713  001536  0E00               	movlw	high _lcd_1
   714  001538  6E17               	movwf	(lcd_send_string_data_pos@lcd+1)^0,c
   715  00153A  0E01               	movlw	1
   716  00153C  6E18               	movwf	lcd_send_string_data_pos@row^0,c
   717  00153E  0E09               	movlw	9
   718  001540  6E19               	movwf	lcd_send_string_data_pos@coulmn^0,c
   719  001542  0E06               	movlw	low (STR_1+5)
   720  001544  6E1A               	movwf	lcd_send_string_data_pos@data^0,c
   721  001546  0E10               	movlw	high (STR_1+5)
   722  001548  6E1B               	movwf	(lcd_send_string_data_pos@data+1)^0,c
   723  00154A  ECE3  F00E         	call	_lcd_send_string_data_pos	;wreg free
   724  00154E                     
   725                           ;application.c: 32:                     lcd_send_string_data_pos(&lcd_1, 1, 10, min);
   726  00154E  0ECF               	movlw	low _lcd_1
   727  001550  6E16               	movwf	lcd_send_string_data_pos@lcd^0,c
   728  001552  0E00               	movlw	high _lcd_1
   729  001554  6E17               	movwf	(lcd_send_string_data_pos@lcd+1)^0,c
   730  001556  0E01               	movlw	1
   731  001558  6E18               	movwf	lcd_send_string_data_pos@row^0,c
   732  00155A  0E0A               	movlw	10
   733  00155C  6E19               	movwf	lcd_send_string_data_pos@coulmn^0,c
   734  00155E  0E73               	movlw	low main@min
   735  001560  6E1A               	movwf	lcd_send_string_data_pos@data^0,c
   736  001562  0E00               	movlw	high main@min
   737  001564  6E1B               	movwf	(lcd_send_string_data_pos@data+1)^0,c
   738  001566  ECE3  F00E         	call	_lcd_send_string_data_pos	;wreg free
   739  00156A                     
   740                           ;application.c: 33:                     lcd_send_string_data_pos(&lcd_1, 1, 12, ":");
   741  00156A  0ECF               	movlw	low _lcd_1
   742  00156C  6E16               	movwf	lcd_send_string_data_pos@lcd^0,c
   743  00156E  0E00               	movlw	high _lcd_1
   744  001570  6E17               	movwf	(lcd_send_string_data_pos@lcd+1)^0,c
   745  001572  0E01               	movlw	1
   746  001574  6E18               	movwf	lcd_send_string_data_pos@row^0,c
   747  001576  0E0C               	movlw	12
   748  001578  6E19               	movwf	lcd_send_string_data_pos@coulmn^0,c
   749  00157A  0E06               	movlw	low (STR_1+5)
   750  00157C  6E1A               	movwf	lcd_send_string_data_pos@data^0,c
   751  00157E  0E10               	movlw	high (STR_1+5)
   752  001580  6E1B               	movwf	(lcd_send_string_data_pos@data+1)^0,c
   753  001582  ECE3  F00E         	call	_lcd_send_string_data_pos	;wreg free
   754  001586                     
   755                           ;application.c: 34:                     lcd_send_string_data_pos(&lcd_1, 1, 13, sec);
   756  001586  0ECF               	movlw	low _lcd_1
   757  001588  6E16               	movwf	lcd_send_string_data_pos@lcd^0,c
   758  00158A  0E00               	movlw	high _lcd_1
   759  00158C  6E17               	movwf	(lcd_send_string_data_pos@lcd+1)^0,c
   760  00158E  0E01               	movlw	1
   761  001590  6E18               	movwf	lcd_send_string_data_pos@row^0,c
   762  001592  0E0D               	movlw	13
   763  001594  6E19               	movwf	lcd_send_string_data_pos@coulmn^0,c
   764  001596  0E7B               	movlw	low main@sec
   765  001598  6E1A               	movwf	lcd_send_string_data_pos@data^0,c
   766  00159A  0E00               	movlw	high main@sec
   767  00159C  6E1B               	movwf	(lcd_send_string_data_pos@data+1)^0,c
   768  00159E  ECE3  F00E         	call	_lcd_send_string_data_pos	;wreg free
   769  0015A2                     
   770                           ;application.c: 35:                 }
   771  0015A2  0100               	movlb	0	; () banked
   772  0015A4  4B87               	infsnz	main@s& (0+255),f,b
   773  0015A6  2B88               	incf	(main@s+1)& (0+255),f,b
   774  0015A8                     
   775                           ; BSR set to: 0
   776  0015A8  5188               	movf	(main@s+1)& (0+255),w,b
   777  0015AA  E109               	bnz	u1960
   778  0015AC  0E3C               	movlw	60
   779  0015AE  5D87               	subwf	main@s& (0+255),w,b
   780  0015B0  A0D8               	btfss	status,0,c
   781  0015B2  EFDD  F00A         	goto	u1961
   782  0015B6  EFDF  F00A         	goto	u1960
   783  0015BA                     u1961:
   784  0015BA  EF74  F00A         	goto	l2598
   785  0015BE                     u1960:
   786  0015BE                     
   787                           ; BSR set to: 0
   788                           ;application.c: 36:                 lcd_send_string_data_pos(&lcd_1, 1, 13, "  ");
   789  0015BE  0ECF               	movlw	low _lcd_1
   790  0015C0  6E16               	movwf	lcd_send_string_data_pos@lcd^0,c
   791  0015C2  0E00               	movlw	high _lcd_1
   792  0015C4  6E17               	movwf	(lcd_send_string_data_pos@lcd+1)^0,c
   793  0015C6  0E01               	movlw	1
   794  0015C8  6E18               	movwf	lcd_send_string_data_pos@row^0,c
   795  0015CA  0E0D               	movlw	13
   796  0015CC  6E19               	movwf	lcd_send_string_data_pos@coulmn^0,c
   797  0015CE  0E0B               	movlw	low STR_4
   798  0015D0  6E1A               	movwf	lcd_send_string_data_pos@data^0,c
   799  0015D2  0E10               	movlw	high STR_4
   800  0015D4  6E1B               	movwf	(lcd_send_string_data_pos@data+1)^0,c
   801  0015D6  ECE3  F00E         	call	_lcd_send_string_data_pos	;wreg free
   802  0015DA                     
   803                           ;application.c: 37:             }
   804  0015DA  0100               	movlb	0	; () banked
   805  0015DC  4B85               	infsnz	main@m& (0+255),f,b
   806  0015DE  2B86               	incf	(main@m+1)& (0+255),f,b
   807  0015E0                     
   808                           ; BSR set to: 0
   809  0015E0  5186               	movf	(main@m+1)& (0+255),w,b
   810  0015E2  E109               	bnz	u1970
   811  0015E4  0E3C               	movlw	60
   812  0015E6  5D85               	subwf	main@m& (0+255),w,b
   813  0015E8  A0D8               	btfss	status,0,c
   814  0015EA  EFF9  F00A         	goto	u1971
   815  0015EE  EFFB  F00A         	goto	u1970
   816  0015F2                     u1971:
   817  0015F2  EF70  F00A         	goto	l2592
   818  0015F6                     u1970:
   819  0015F6                     
   820                           ; BSR set to: 0
   821                           ;application.c: 38:             lcd_send_string_data_pos(&lcd_1, 1, 10, " ");
   822  0015F6  0ECF               	movlw	low _lcd_1
   823  0015F8  6E16               	movwf	lcd_send_string_data_pos@lcd^0,c
   824  0015FA  0E00               	movlw	high _lcd_1
   825  0015FC  6E17               	movwf	(lcd_send_string_data_pos@lcd+1)^0,c
   826  0015FE  0E01               	movlw	1
   827  001600  6E18               	movwf	lcd_send_string_data_pos@row^0,c
   828  001602  0E0A               	movlw	10
   829  001604  6E19               	movwf	lcd_send_string_data_pos@coulmn^0,c
   830  001606  0E0C               	movlw	low (STR_4+1)
   831  001608  6E1A               	movwf	lcd_send_string_data_pos@data^0,c
   832  00160A  0E10               	movlw	high (STR_4+1)
   833  00160C  6E1B               	movwf	(lcd_send_string_data_pos@data+1)^0,c
   834  00160E  ECE3  F00E         	call	_lcd_send_string_data_pos	;wreg free
   835  001612                     
   836                           ;application.c: 39:         }
   837  001612  0100               	movlb	0	; () banked
   838  001614  4B83               	infsnz	main@h& (0+255),f,b
   839  001616  2B84               	incf	(main@h+1)& (0+255),f,b
   840  001618                     
   841                           ; BSR set to: 0
   842  001618  5184               	movf	(main@h+1)& (0+255),w,b
   843  00161A  E109               	bnz	u1980
   844  00161C  0E0C               	movlw	12
   845  00161E  5D83               	subwf	main@h& (0+255),w,b
   846  001620  A0D8               	btfss	status,0,c
   847  001622  EF15  F00B         	goto	u1981
   848  001626  EF17  F00B         	goto	u1980
   849  00162A                     u1981:
   850  00162A  EF6C  F00A         	goto	l2586
   851  00162E                     u1980:
   852  00162E  EF67  F00A         	goto	l2580
   853  001632  EF00  F000         	goto	start
   854  001636                     __end_of_main:
   855                           	callstack 0
   856                           
   857 ;; *************** function _lcd_send_string_data_pos *****************
   858 ;; Defined at:
   859 ;;		line 187 in file "ecu/ecu_lcd/ecu_lcd.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;  lcd             2   21[COMRAM] PTR const struct .
   862 ;;		 -> lcd_1(4), 
   863 ;;  row             1   23[COMRAM] unsigned char 
   864 ;;  coulmn          1   24[COMRAM] unsigned char 
   865 ;;  data            2   25[COMRAM] PTR unsigned char 
   866 ;;		 -> STR_5(2), STR_4(3), STR_3(2), STR_2(2), 
   867 ;;		 -> main@sec(8), main@min(8), main@hours(8), STR_1(7), 
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   879 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   881 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;Total ram usage:        7 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; Hardware stack levels required when called:    4
   886 ;; This function calls:
   887 ;;		_lcd_send_char_data
   888 ;;		_lcd_send_command
   889 ;;		_lcd_set_cursor
   890 ;; This function is called by:
   891 ;;		_main
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text1
   896  001DC6                     __ptext1:
   897                           	callstack 0
   898  001DC6                     _lcd_send_string_data_pos:
   899                           	callstack 26
   900  001DC6                     
   901                           ;ecu/ecu_lcd/ecu_lcd.c: 188:     lcd_send_command(lcd, 0x02);
   902  001DC6  C016  F00C         	movff	lcd_send_string_data_pos@lcd,lcd_send_command@lcd
   903  001DCA  C017  F00D         	movff	lcd_send_string_data_pos@lcd+1,lcd_send_command@lcd+1
   904  001DCE  0E02               	movlw	2
   905  001DD0  6E0E               	movwf	lcd_send_command@command^0,c
   906  001DD2  ECF9  F00F         	call	_lcd_send_command	;wreg free
   907                           
   908                           ;ecu/ecu_lcd/ecu_lcd.c: 189:     lcd_set_cursor(lcd, row, coulmn);
   909  001DD6  C016  F010         	movff	lcd_send_string_data_pos@lcd,lcd_set_cursor@lcd
   910  001DDA  C017  F011         	movff	lcd_send_string_data_pos@lcd+1,lcd_set_cursor@lcd+1
   911  001DDE  C018  F012         	movff	lcd_send_string_data_pos@row,lcd_set_cursor@row
   912  001DE2  C019  F013         	movff	lcd_send_string_data_pos@coulmn,lcd_set_cursor@coulmn
   913  001DE6  EC32  F00F         	call	_lcd_set_cursor	;wreg free
   914                           
   915                           ;ecu/ecu_lcd/ecu_lcd.c: 190:     while (*data) {
   916  001DEA  EF18  F00F         	goto	l2310
   917  001DEE                     l2304:
   918                           
   919                           ;ecu/ecu_lcd/ecu_lcd.c: 191:         lcd_send_char_data(lcd, *data++);
   920  001DEE  C016  F00C         	movff	lcd_send_string_data_pos@lcd,lcd_send_char_data@lcd
   921  001DF2  C017  F00D         	movff	lcd_send_string_data_pos@lcd+1,lcd_send_char_data@lcd+1
   922  001DF6  C01A  FFF6         	movff	lcd_send_string_data_pos@data,tblptrl
   923  001DFA  C01B  FFF7         	movff	lcd_send_string_data_pos@data+1,tblptrh
   924  001DFE  0E00               	movlw	low (__smallconst shr (0+16))
   925  001E00  6EF8               	movwf	tblptru,c
   926  001E02  0E0F               	movlw	(high __ramtop+-1)
   927  001E04  64F7               	cpfsgt	tblptrh,c
   928  001E06  D003               	bra	u1537
   929  001E08  0008               	tblrd		*
   930  001E0A  50F5               	movf	tablat,w,c
   931  001E0C  D005               	bra	u1530
   932  001E0E                     u1537:
   933  001E0E  CFF6 FFE9          	movff	tblptrl,fsr0l
   934  001E12  CFF7 FFEA          	movff	tblptrh,fsr0h
   935  001E16  50EF               	movf	indf0,w,c
   936  001E18                     u1530:
   937  001E18  6E0E               	movwf	lcd_send_char_data@data^0,c
   938  001E1A  EC7C  F010         	call	_lcd_send_char_data	;wreg free
   939  001E1E  4A1A               	infsnz	lcd_send_string_data_pos@data^0,f,c
   940  001E20  2A1B               	incf	(lcd_send_string_data_pos@data+1)^0,f,c
   941  001E22                     
   942                           ;ecu/ecu_lcd/ecu_lcd.c: 192:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
   943  001E22  0E03               	movlw	3
   944  001E24  6E1C               	movwf	??_lcd_send_string_data_pos^0,c
   945  001E26  0E98               	movlw	152
   946  001E28                     u2017:
   947  001E28  2EE8               	decfsz	wreg,f,c
   948  001E2A  D7FE               	bra	u2017
   949  001E2C  2E1C               	decfsz	??_lcd_send_string_data_pos^0,f,c
   950  001E2E  D7FC               	bra	u2017
   951  001E30                     l2310:
   952                           
   953                           ;ecu/ecu_lcd/ecu_lcd.c: 190:     while (*data) {
   954  001E30  C01A  FFF6         	movff	lcd_send_string_data_pos@data,tblptrl
   955  001E34  C01B  FFF7         	movff	lcd_send_string_data_pos@data+1,tblptrh
   956  001E38  0E00               	movlw	low (__smallconst shr (0+16))
   957  001E3A  6EF8               	movwf	tblptru,c
   958  001E3C  0E0F               	movlw	(high __ramtop+-1)
   959  001E3E  64F7               	cpfsgt	tblptrh,c
   960  001E40  D003               	bra	u1547
   961  001E42  0008               	tblrd		*
   962  001E44  50F5               	movf	tablat,w,c
   963  001E46  D005               	bra	u1540
   964  001E48                     u1547:
   965  001E48  CFF6 FFE9          	movff	tblptrl,fsr0l
   966  001E4C  CFF7 FFEA          	movff	tblptrh,fsr0h
   967  001E50  50EF               	movf	indf0,w,c
   968  001E52                     u1540:
   969  001E52  0900               	iorlw	0
   970  001E54  A4D8               	btfss	status,2,c
   971  001E56  EF2F  F00F         	goto	u1551
   972  001E5A  EF31  F00F         	goto	u1550
   973  001E5E                     u1551:
   974  001E5E  EFF7  F00E         	goto	l2304
   975  001E62                     u1550:
   976  001E62  0012               	return		;funcret
   977  001E64                     __end_of_lcd_send_string_data_pos:
   978                           	callstack 0
   979                           
   980 ;; *************** function _lcd_set_cursor *****************
   981 ;; Defined at:
   982 ;;		line 80 in file "ecu/ecu_lcd/ecu_lcd.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;  lcd             2   15[COMRAM] PTR const struct .
   985 ;;		 -> lcd_1(4), 
   986 ;;  row             1   17[COMRAM] unsigned char 
   987 ;;  coulmn          1   18[COMRAM] unsigned char 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   999 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1002 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1003 ;;Total ram usage:        6 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; Hardware stack levels required when called:    3
  1006 ;; This function calls:
  1007 ;;		_lcd_send_command
  1008 ;; This function is called by:
  1009 ;;		_lcd_send_string_data_pos
  1010 ;;		_lcd_send_char_data_pos
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text2
  1015  001E64                     __ptext2:
  1016                           	callstack 0
  1017  001E64                     _lcd_set_cursor:
  1018                           	callstack 26
  1019  001E64                     
  1020                           ;ecu/ecu_lcd/ecu_lcd.c: 81:     coulmn--;
  1021  001E64  0613               	decf	lcd_set_cursor@coulmn^0,f,c
  1022                           
  1023                           ;ecu/ecu_lcd/ecu_lcd.c: 82:     switch (row) {
  1024  001E66  EF61  F00F         	goto	l2272
  1025  001E6A                     l2264:
  1026  001E6A  C010  F00C         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
  1027  001E6E  C011  F00D         	movff	lcd_set_cursor@lcd+1,lcd_send_command@lcd+1
  1028  001E72  5013               	movf	lcd_set_cursor@coulmn^0,w,c
  1029  001E74  0F80               	addlw	128
  1030  001E76  6E0E               	movwf	lcd_send_command@command^0,c
  1031  001E78  ECF9  F00F         	call	_lcd_send_command	;wreg free
  1032                           
  1033                           ;ecu/ecu_lcd/ecu_lcd.c: 84:             break;
  1034  001E7C  EF7E  F00F         	goto	l260
  1035  001E80                     l2266:
  1036  001E80  C010  F00C         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
  1037  001E84  C011  F00D         	movff	lcd_set_cursor@lcd+1,lcd_send_command@lcd+1
  1038  001E88  5013               	movf	lcd_set_cursor@coulmn^0,w,c
  1039  001E8A  0FC0               	addlw	192
  1040  001E8C  6E0E               	movwf	lcd_send_command@command^0,c
  1041  001E8E  ECF9  F00F         	call	_lcd_send_command	;wreg free
  1042                           
  1043                           ;ecu/ecu_lcd/ecu_lcd.c: 86:             break;
  1044  001E92  EF7E  F00F         	goto	l260
  1045  001E96                     l2268:
  1046  001E96  C010  F00C         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
  1047  001E9A  C011  F00D         	movff	lcd_set_cursor@lcd+1,lcd_send_command@lcd+1
  1048  001E9E  5013               	movf	lcd_set_cursor@coulmn^0,w,c
  1049  001EA0  0F94               	addlw	148
  1050  001EA2  6E0E               	movwf	lcd_send_command@command^0,c
  1051  001EA4  ECF9  F00F         	call	_lcd_send_command	;wreg free
  1052                           
  1053                           ;ecu/ecu_lcd/ecu_lcd.c: 88:             break;
  1054  001EA8  EF7E  F00F         	goto	l260
  1055  001EAC                     l2270:
  1056  001EAC  C010  F00C         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
  1057  001EB0  C011  F00D         	movff	lcd_set_cursor@lcd+1,lcd_send_command@lcd+1
  1058  001EB4  5013               	movf	lcd_set_cursor@coulmn^0,w,c
  1059  001EB6  0FD4               	addlw	212
  1060  001EB8  6E0E               	movwf	lcd_send_command@command^0,c
  1061  001EBA  ECF9  F00F         	call	_lcd_send_command	;wreg free
  1062                           
  1063                           ;ecu/ecu_lcd/ecu_lcd.c: 90:             break;
  1064  001EBE  EF7E  F00F         	goto	l260
  1065  001EC2                     l2272:
  1066  001EC2  5012               	movf	lcd_set_cursor@row^0,w,c
  1067  001EC4  6E14               	movwf	??_lcd_set_cursor^0,c
  1068  001EC6  6A15               	clrf	(??_lcd_set_cursor+1)^0,c
  1069                           
  1070                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1071                           ; Switch size 1, requested type "simple"
  1072                           ; Number of cases is 1, Range of values is 0 to 0
  1073                           ; switch strategies available:
  1074                           ; Name         Instructions Cycles
  1075                           ; simple_byte            4     3 (average)
  1076                           ;	Chosen strategy is simple_byte
  1077  001EC8  5015               	movf	(??_lcd_set_cursor+1)^0,w,c
  1078  001ECA  0A00               	xorlw	0	; case 0
  1079  001ECC  B4D8               	btfsc	status,2,c
  1080  001ECE  EF6B  F00F         	goto	l2740
  1081  001ED2  EF7E  F00F         	goto	l260
  1082  001ED6                     l2740:
  1083                           
  1084                           ; Switch size 1, requested type "simple"
  1085                           ; Number of cases is 4, Range of values is 1 to 4
  1086                           ; switch strategies available:
  1087                           ; Name         Instructions Cycles
  1088                           ; simple_byte           13     7 (average)
  1089                           ;	Chosen strategy is simple_byte
  1090  001ED6  5014               	movf	??_lcd_set_cursor^0,w,c
  1091  001ED8  0A01               	xorlw	1	; case 1
  1092  001EDA  B4D8               	btfsc	status,2,c
  1093  001EDC  EF35  F00F         	goto	l2264
  1094  001EE0  0A03               	xorlw	3	; case 2
  1095  001EE2  B4D8               	btfsc	status,2,c
  1096  001EE4  EF40  F00F         	goto	l2266
  1097  001EE8  0A01               	xorlw	1	; case 3
  1098  001EEA  B4D8               	btfsc	status,2,c
  1099  001EEC  EF4B  F00F         	goto	l2268
  1100  001EF0  0A07               	xorlw	7	; case 4
  1101  001EF2  B4D8               	btfsc	status,2,c
  1102  001EF4  EF56  F00F         	goto	l2270
  1103  001EF8  EF7E  F00F         	goto	l260
  1104  001EFC                     l260:
  1105  001EFC  0012               	return		;funcret
  1106  001EFE                     __end_of_lcd_set_cursor:
  1107                           	callstack 0
  1108                           
  1109 ;; *************** function _lcd_send_char_data *****************
  1110 ;; Defined at:
  1111 ;;		line 133 in file "ecu/ecu_lcd/ecu_lcd.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  lcd             2   11[COMRAM] PTR const struct .
  1114 ;;		 -> lcd_1(4), 
  1115 ;;  data            1   13[COMRAM] unsigned char 
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;		None
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1127 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;Total ram usage:        3 bytes
  1132 ;; Hardware stack levels used:    1
  1133 ;; Hardware stack levels required when called:    2
  1134 ;; This function calls:
  1135 ;;		_gpio_pin_write_value
  1136 ;;		_gpio_port_write_value
  1137 ;;		_lcd_send_enable
  1138 ;; This function is called by:
  1139 ;;		_lcd_send_string_data_pos
  1140 ;;		_lcd_send_char_data_pos
  1141 ;;		_lcd_send_string_data_current_pos
  1142 ;;		_lcd_send_custome_char
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text3
  1147  0020F8                     __ptext3:
  1148                           	callstack 0
  1149  0020F8                     _lcd_send_char_data:
  1150                           	callstack 27
  1151  0020F8                     
  1152                           ;ecu/ecu_lcd/ecu_lcd.c: 135:     gpio_pin_write_value(lcd->lcd_rs_port, lcd->lcd_rs_pin,
      +                           PIN_HIGH);
  1153  0020F8  EE20 F002          	lfsr	2,2
  1154  0020FC  500C               	movf	lcd_send_char_data@lcd^0,w,c
  1155  0020FE  26D9               	addwf	fsr2l,f,c
  1156  002100  500D               	movf	(lcd_send_char_data@lcd+1)^0,w,c
  1157  002102  22DA               	addwfc	fsr2h,f,c
  1158  002104  50DF               	movf	indf2,w,c
  1159  002106  0B07               	andlw	7
  1160  002108  6E01               	movwf	gpio_pin_write_value@pin^0,c
  1161  00210A  0E01               	movlw	1
  1162  00210C  6E02               	movwf	gpio_pin_write_value@logic^0,c
  1163  00210E  EE20 F001          	lfsr	2,1
  1164  002112  500C               	movf	lcd_send_char_data@lcd^0,w,c
  1165  002114  26D9               	addwf	fsr2l,f,c
  1166  002116  500D               	movf	(lcd_send_char_data@lcd+1)^0,w,c
  1167  002118  22DA               	addwfc	fsr2h,f,c
  1168  00211A  50DF               	movf	indf2,w,c
  1169  00211C  0B0F               	andlw	15
  1170  00211E  EC51  F00D         	call	_gpio_pin_write_value
  1171                           
  1172                           ;ecu/ecu_lcd/ecu_lcd.c: 136:     gpio_port_write_value(lcd->lcd_data_port, data);
  1173  002122  C00E  F001         	movff	lcd_send_char_data@data,gpio_port_write_value@value
  1174  002126  C00C  FFD9         	movff	lcd_send_char_data@lcd,fsr2l
  1175  00212A  C00D  FFDA         	movff	lcd_send_char_data@lcd+1,fsr2h
  1176  00212E  50DF               	movf	indf2,w,c
  1177  002130  0B0F               	andlw	15
  1178  002132  ECE4  F010         	call	_gpio_port_write_value
  1179                           
  1180                           ;ecu/ecu_lcd/ecu_lcd.c: 137:     lcd_send_enable(lcd);
  1181  002136  C00C  F00A         	movff	lcd_send_char_data@lcd,lcd_send_enable@lcd
  1182  00213A  C00D  F00B         	movff	lcd_send_char_data@lcd+1,lcd_send_enable@lcd+1
  1183  00213E  EC28  F010         	call	_lcd_send_enable	;wreg free
  1184  002142  0012               	return		;funcret
  1185  002144                     __end_of_lcd_send_char_data:
  1186                           	callstack 0
  1187                           
  1188 ;; *************** function _lcd_intialize *****************
  1189 ;; Defined at:
  1190 ;;		line 14 in file "ecu/ecu_lcd/ecu_lcd.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  lcd             2   15[COMRAM] PTR const struct .
  1193 ;;		 -> lcd_1(4), 
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;		None
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      void 
  1198 ;; Registers used:
  1199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1205 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1209 ;;Total ram usage:        3 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; Hardware stack levels required when called:    3
  1212 ;; This function calls:
  1213 ;;		_gpio_pin_direction_intialize
  1214 ;;		_gpio_pin_write_value
  1215 ;;		_gpio_port_direction_intialize
  1216 ;;		_gpio_port_write_value
  1217 ;;		_lcd_send_command
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text4
  1224  0017BE                     __ptext4:
  1225                           	callstack 0
  1226  0017BE                     _lcd_intialize:
  1227                           	callstack 27
  1228  0017BE                     
  1229                           ;ecu/ecu_lcd/ecu_lcd.c: 16:     gpio_port_direction_intialize(lcd->lcd_data_port, 0X00);
  1230  0017BE  0E00               	movlw	0
  1231  0017C0  6E01               	movwf	gpio_port_direction_intialize@direction^0,c
  1232  0017C2  C010  FFD9         	movff	lcd_intialize@lcd,fsr2l
  1233  0017C6  C011  FFDA         	movff	lcd_intialize@lcd+1,fsr2h
  1234  0017CA  50DF               	movf	indf2,w,c
  1235  0017CC  0B0F               	andlw	15
  1236  0017CE  EC7F  F00F         	call	_gpio_port_direction_intialize
  1237                           
  1238                           ;ecu/ecu_lcd/ecu_lcd.c: 17:     gpio_port_write_value(lcd->lcd_data_port, 0X00);
  1239  0017D2  0E00               	movlw	0
  1240  0017D4  6E01               	movwf	gpio_port_write_value@value^0,c
  1241  0017D6  C010  FFD9         	movff	lcd_intialize@lcd,fsr2l
  1242  0017DA  C011  FFDA         	movff	lcd_intialize@lcd+1,fsr2h
  1243  0017DE  50DF               	movf	indf2,w,c
  1244  0017E0  0B0F               	andlw	15
  1245  0017E2  ECE4  F010         	call	_gpio_port_write_value
  1246                           
  1247                           ;ecu/ecu_lcd/ecu_lcd.c: 18:     gpio_pin_direction_intialize(lcd->lcd_en_port, lcd->lcd_
      +                          en_pin, DIRECTION_OUTPUT);
  1248  0017E6  EE20 F001          	lfsr	2,1
  1249  0017EA  5010               	movf	lcd_intialize@lcd^0,w,c
  1250  0017EC  26D9               	addwf	fsr2l,f,c
  1251  0017EE  5011               	movf	(lcd_intialize@lcd+1)^0,w,c
  1252  0017F0  22DA               	addwfc	fsr2h,f,c
  1253  0017F2  38DF               	swapf	indf2,w,c
  1254  0017F4  0B07               	andlw	7
  1255  0017F6  6E01               	movwf	gpio_pin_direction_intialize@pin^0,c
  1256  0017F8  0E00               	movlw	0
  1257  0017FA  6E02               	movwf	gpio_pin_direction_intialize@direction^0,c
  1258  0017FC  C010  FFD9         	movff	lcd_intialize@lcd,fsr2l
  1259  001800  C011  FFDA         	movff	lcd_intialize@lcd+1,fsr2h
  1260  001804  38DF               	swapf	indf2,w,c
  1261  001806  0B0F               	andlw	15
  1262  001808  EC1C  F00E         	call	_gpio_pin_direction_intialize
  1263                           
  1264                           ;ecu/ecu_lcd/ecu_lcd.c: 19:     gpio_pin_write_value(lcd->lcd_en_port, lcd->lcd_en_pin, 
      +                          PIN_LOW);
  1265  00180C  EE20 F001          	lfsr	2,1
  1266  001810  5010               	movf	lcd_intialize@lcd^0,w,c
  1267  001812  26D9               	addwf	fsr2l,f,c
  1268  001814  5011               	movf	(lcd_intialize@lcd+1)^0,w,c
  1269  001816  22DA               	addwfc	fsr2h,f,c
  1270  001818  38DF               	swapf	indf2,w,c
  1271  00181A  0B07               	andlw	7
  1272  00181C  6E01               	movwf	gpio_pin_write_value@pin^0,c
  1273  00181E  0E00               	movlw	0
  1274  001820  6E02               	movwf	gpio_pin_write_value@logic^0,c
  1275  001822  C010  FFD9         	movff	lcd_intialize@lcd,fsr2l
  1276  001826  C011  FFDA         	movff	lcd_intialize@lcd+1,fsr2h
  1277  00182A  38DF               	swapf	indf2,w,c
  1278  00182C  0B0F               	andlw	15
  1279  00182E  EC51  F00D         	call	_gpio_pin_write_value
  1280                           
  1281                           ;ecu/ecu_lcd/ecu_lcd.c: 20:     gpio_pin_direction_intialize(lcd->lcd_rs_port, lcd->lcd_
      +                          rs_pin, DIRECTION_OUTPUT);
  1282  001832  EE20 F002          	lfsr	2,2
  1283  001836  5010               	movf	lcd_intialize@lcd^0,w,c
  1284  001838  26D9               	addwf	fsr2l,f,c
  1285  00183A  5011               	movf	(lcd_intialize@lcd+1)^0,w,c
  1286  00183C  22DA               	addwfc	fsr2h,f,c
  1287  00183E  50DF               	movf	indf2,w,c
  1288  001840  0B07               	andlw	7
  1289  001842  6E01               	movwf	gpio_pin_direction_intialize@pin^0,c
  1290  001844  0E00               	movlw	0
  1291  001846  6E02               	movwf	gpio_pin_direction_intialize@direction^0,c
  1292  001848  EE20 F001          	lfsr	2,1
  1293  00184C  5010               	movf	lcd_intialize@lcd^0,w,c
  1294  00184E  26D9               	addwf	fsr2l,f,c
  1295  001850  5011               	movf	(lcd_intialize@lcd+1)^0,w,c
  1296  001852  22DA               	addwfc	fsr2h,f,c
  1297  001854  50DF               	movf	indf2,w,c
  1298  001856  0B0F               	andlw	15
  1299  001858  EC1C  F00E         	call	_gpio_pin_direction_intialize
  1300                           
  1301                           ;ecu/ecu_lcd/ecu_lcd.c: 21:     gpio_pin_write_value(lcd->lcd_rs_port, lcd->lcd_rs_pin, 
      +                          PIN_LOW);
  1302  00185C  EE20 F002          	lfsr	2,2
  1303  001860  5010               	movf	lcd_intialize@lcd^0,w,c
  1304  001862  26D9               	addwf	fsr2l,f,c
  1305  001864  5011               	movf	(lcd_intialize@lcd+1)^0,w,c
  1306  001866  22DA               	addwfc	fsr2h,f,c
  1307  001868  50DF               	movf	indf2,w,c
  1308  00186A  0B07               	andlw	7
  1309  00186C  6E01               	movwf	gpio_pin_write_value@pin^0,c
  1310  00186E  0E00               	movlw	0
  1311  001870  6E02               	movwf	gpio_pin_write_value@logic^0,c
  1312  001872  EE20 F001          	lfsr	2,1
  1313  001876  5010               	movf	lcd_intialize@lcd^0,w,c
  1314  001878  26D9               	addwf	fsr2l,f,c
  1315  00187A  5011               	movf	(lcd_intialize@lcd+1)^0,w,c
  1316  00187C  22DA               	addwfc	fsr2h,f,c
  1317  00187E  50DF               	movf	indf2,w,c
  1318  001880  0B0F               	andlw	15
  1319  001882  EC51  F00D         	call	_gpio_pin_write_value
  1320  001886                     
  1321                           ;ecu/ecu_lcd/ecu_lcd.c: 22:     _delay((unsigned long)((40)*(8000000UL/4000.0)));
  1322  001886  0E68               	movlw	104
  1323  001888  6E12               	movwf	??_lcd_intialize^0,c
  1324  00188A  0EE4               	movlw	228
  1325  00188C                     u2027:
  1326  00188C  2EE8               	decfsz	wreg,f,c
  1327  00188E  D7FE               	bra	u2027
  1328  001890  2E12               	decfsz	??_lcd_intialize^0,f,c
  1329  001892  D7FC               	bra	u2027
  1330  001894  F000 F000          	nop2	
  1331  001898                     
  1332                           ;ecu/ecu_lcd/ecu_lcd.c: 23:     lcd_send_command(lcd, 0x38);
  1333  001898  C010  F00C         	movff	lcd_intialize@lcd,lcd_send_command@lcd
  1334  00189C  C011  F00D         	movff	lcd_intialize@lcd+1,lcd_send_command@lcd+1
  1335  0018A0  0E38               	movlw	56
  1336  0018A2  6E0E               	movwf	lcd_send_command@command^0,c
  1337  0018A4  ECF9  F00F         	call	_lcd_send_command	;wreg free
  1338                           
  1339                           ;ecu/ecu_lcd/ecu_lcd.c: 24:     _delay((unsigned long)((5)*(8000000UL/4000.0)));
  1340  0018A8  0E0D               	movlw	13
  1341  0018AA  6E12               	movwf	??_lcd_intialize^0,c
  1342  0018AC  0EFC               	movlw	252
  1343  0018AE                     u2037:
  1344  0018AE  2EE8               	decfsz	wreg,f,c
  1345  0018B0  D7FE               	bra	u2037
  1346  0018B2  2E12               	decfsz	??_lcd_intialize^0,f,c
  1347  0018B4  D7FC               	bra	u2037
  1348  0018B6                     
  1349                           ;ecu/ecu_lcd/ecu_lcd.c: 25:     lcd_send_command(lcd, 0x38);
  1350  0018B6  C010  F00C         	movff	lcd_intialize@lcd,lcd_send_command@lcd
  1351  0018BA  C011  F00D         	movff	lcd_intialize@lcd+1,lcd_send_command@lcd+1
  1352  0018BE  0E38               	movlw	56
  1353  0018C0  6E0E               	movwf	lcd_send_command@command^0,c
  1354  0018C2  ECF9  F00F         	call	_lcd_send_command	;wreg free
  1355  0018C6                     
  1356                           ;ecu/ecu_lcd/ecu_lcd.c: 26:     _delay((unsigned long)((300)*(8000000UL/4000000.0)));
  1357  0018C6  0EC8               	movlw	200
  1358  0018C8                     u2047:
  1359  0018C8  2EE8               	decfsz	wreg,f,c
  1360  0018CA  D7FE               	bra	u2047
  1361                           
  1362                           ;ecu/ecu_lcd/ecu_lcd.c: 27:     lcd_send_command(lcd, 0x38);
  1363  0018CC  C010  F00C         	movff	lcd_intialize@lcd,lcd_send_command@lcd
  1364  0018D0  C011  F00D         	movff	lcd_intialize@lcd+1,lcd_send_command@lcd+1
  1365  0018D4  0E38               	movlw	56
  1366  0018D6  6E0E               	movwf	lcd_send_command@command^0,c
  1367  0018D8  ECF9  F00F         	call	_lcd_send_command	;wreg free
  1368                           
  1369                           ;ecu/ecu_lcd/ecu_lcd.c: 29:     lcd_send_command(lcd, 0X01);
  1370  0018DC  C010  F00C         	movff	lcd_intialize@lcd,lcd_send_command@lcd
  1371  0018E0  C011  F00D         	movff	lcd_intialize@lcd+1,lcd_send_command@lcd+1
  1372  0018E4  0E01               	movlw	1
  1373  0018E6  6E0E               	movwf	lcd_send_command@command^0,c
  1374  0018E8  ECF9  F00F         	call	_lcd_send_command	;wreg free
  1375                           
  1376                           ;ecu/ecu_lcd/ecu_lcd.c: 30:     lcd_send_command(lcd, 0x02);
  1377  0018EC  C010  F00C         	movff	lcd_intialize@lcd,lcd_send_command@lcd
  1378  0018F0  C011  F00D         	movff	lcd_intialize@lcd+1,lcd_send_command@lcd+1
  1379  0018F4  0E02               	movlw	2
  1380  0018F6  6E0E               	movwf	lcd_send_command@command^0,c
  1381  0018F8  ECF9  F00F         	call	_lcd_send_command	;wreg free
  1382                           
  1383                           ;ecu/ecu_lcd/ecu_lcd.c: 31:     lcd_send_command(lcd, 0X06);
  1384  0018FC  C010  F00C         	movff	lcd_intialize@lcd,lcd_send_command@lcd
  1385  001900  C011  F00D         	movff	lcd_intialize@lcd+1,lcd_send_command@lcd+1
  1386  001904  0E06               	movlw	6
  1387  001906  6E0E               	movwf	lcd_send_command@command^0,c
  1388  001908  ECF9  F00F         	call	_lcd_send_command	;wreg free
  1389                           
  1390                           ;ecu/ecu_lcd/ecu_lcd.c: 32:     lcd_send_command(lcd, 0X0C);
  1391  00190C  C010  F00C         	movff	lcd_intialize@lcd,lcd_send_command@lcd
  1392  001910  C011  F00D         	movff	lcd_intialize@lcd+1,lcd_send_command@lcd+1
  1393  001914  0E0C               	movlw	12
  1394  001916  6E0E               	movwf	lcd_send_command@command^0,c
  1395  001918  ECF9  F00F         	call	_lcd_send_command	;wreg free
  1396                           
  1397                           ;ecu/ecu_lcd/ecu_lcd.c: 33:     lcd_send_command(lcd, 0x38);
  1398  00191C  C010  F00C         	movff	lcd_intialize@lcd,lcd_send_command@lcd
  1399  001920  C011  F00D         	movff	lcd_intialize@lcd+1,lcd_send_command@lcd+1
  1400  001924  0E38               	movlw	56
  1401  001926  6E0E               	movwf	lcd_send_command@command^0,c
  1402  001928  ECF9  F00F         	call	_lcd_send_command	;wreg free
  1403                           
  1404                           ;ecu/ecu_lcd/ecu_lcd.c: 34:     lcd_send_command(lcd, 0x80);
  1405  00192C  C010  F00C         	movff	lcd_intialize@lcd,lcd_send_command@lcd
  1406  001930  C011  F00D         	movff	lcd_intialize@lcd+1,lcd_send_command@lcd+1
  1407  001934  0E80               	movlw	128
  1408  001936  6E0E               	movwf	lcd_send_command@command^0,c
  1409  001938  ECF9  F00F         	call	_lcd_send_command	;wreg free
  1410  00193C  0012               	return		;funcret
  1411  00193E                     __end_of_lcd_intialize:
  1412                           	callstack 0
  1413                           
  1414 ;; *************** function _lcd_send_command *****************
  1415 ;; Defined at:
  1416 ;;		line 110 in file "ecu/ecu_lcd/ecu_lcd.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  lcd             2   11[COMRAM] PTR const struct .
  1419 ;;		 -> lcd_1(4), 
  1420 ;;  command         1   13[COMRAM] unsigned char 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1432 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;Total ram usage:        4 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    2
  1439 ;; This function calls:
  1440 ;;		_gpio_pin_write_value
  1441 ;;		_gpio_port_write_value
  1442 ;;		_lcd_send_enable
  1443 ;; This function is called by:
  1444 ;;		_lcd_intialize
  1445 ;;		_lcd_set_cursor
  1446 ;;		_lcd_send_string_data_pos
  1447 ;;		_lcd_send_char_data_pos
  1448 ;;		_lcd_send_custome_char
  1449 ;;		_lcd_clear_display
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text5
  1454  001FF2                     __ptext5:
  1455                           	callstack 0
  1456  001FF2                     _lcd_send_command:
  1457                           	callstack 26
  1458  001FF2                     
  1459                           ;ecu/ecu_lcd/ecu_lcd.c: 112:     gpio_pin_write_value(lcd->lcd_rs_port, lcd->lcd_rs_pin,
      +                           PIN_LOW);
  1460  001FF2  EE20 F002          	lfsr	2,2
  1461  001FF6  500C               	movf	lcd_send_command@lcd^0,w,c
  1462  001FF8  26D9               	addwf	fsr2l,f,c
  1463  001FFA  500D               	movf	(lcd_send_command@lcd+1)^0,w,c
  1464  001FFC  22DA               	addwfc	fsr2h,f,c
  1465  001FFE  50DF               	movf	indf2,w,c
  1466  002000  0B07               	andlw	7
  1467  002002  6E01               	movwf	gpio_pin_write_value@pin^0,c
  1468  002004  0E00               	movlw	0
  1469  002006  6E02               	movwf	gpio_pin_write_value@logic^0,c
  1470  002008  EE20 F001          	lfsr	2,1
  1471  00200C  500C               	movf	lcd_send_command@lcd^0,w,c
  1472  00200E  26D9               	addwf	fsr2l,f,c
  1473  002010  500D               	movf	(lcd_send_command@lcd+1)^0,w,c
  1474  002012  22DA               	addwfc	fsr2h,f,c
  1475  002014  50DF               	movf	indf2,w,c
  1476  002016  0B0F               	andlw	15
  1477  002018  EC51  F00D         	call	_gpio_pin_write_value
  1478                           
  1479                           ;ecu/ecu_lcd/ecu_lcd.c: 113:     gpio_port_write_value(lcd->lcd_data_port, command);
  1480  00201C  C00E  F001         	movff	lcd_send_command@command,gpio_port_write_value@value
  1481  002020  C00C  FFD9         	movff	lcd_send_command@lcd,fsr2l
  1482  002024  C00D  FFDA         	movff	lcd_send_command@lcd+1,fsr2h
  1483  002028  50DF               	movf	indf2,w,c
  1484  00202A  0B0F               	andlw	15
  1485  00202C  ECE4  F010         	call	_gpio_port_write_value
  1486                           
  1487                           ;ecu/ecu_lcd/ecu_lcd.c: 114:     lcd_send_enable(lcd);
  1488  002030  C00C  F00A         	movff	lcd_send_command@lcd,lcd_send_enable@lcd
  1489  002034  C00D  F00B         	movff	lcd_send_command@lcd+1,lcd_send_enable@lcd+1
  1490  002038  EC28  F010         	call	_lcd_send_enable	;wreg free
  1491  00203C                     
  1492                           ;ecu/ecu_lcd/ecu_lcd.c: 115:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
  1493  00203C  0E06               	movlw	6
  1494  00203E  6E0F               	movwf	??_lcd_send_command^0,c
  1495  002040  0E30               	movlw	48
  1496  002042                     u2057:
  1497  002042  2EE8               	decfsz	wreg,f,c
  1498  002044  D7FE               	bra	u2057
  1499  002046  2E0F               	decfsz	??_lcd_send_command^0,f,c
  1500  002048  D7FC               	bra	u2057
  1501  00204A  F000 F000          	nop2	
  1502  00204E  0012               	return		;funcret
  1503  002050                     __end_of_lcd_send_command:
  1504                           	callstack 0
  1505                           
  1506 ;; *************** function _lcd_send_enable *****************
  1507 ;; Defined at:
  1508 ;;		line 62 in file "ecu/ecu_lcd/ecu_lcd.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  lcd             2    9[COMRAM] PTR const struct .
  1511 ;;		 -> lcd_1(4), 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;		None
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1523 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;Total ram usage:        2 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; Hardware stack levels required when called:    1
  1530 ;; This function calls:
  1531 ;;		_gpio_pin_write_value
  1532 ;; This function is called by:
  1533 ;;		_lcd_send_command
  1534 ;;		_lcd_send_char_data
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text6
  1539  002050                     __ptext6:
  1540                           	callstack 0
  1541  002050                     _lcd_send_enable:
  1542                           	callstack 26
  1543  002050                     
  1544                           ;ecu/ecu_lcd/ecu_lcd.c: 64:     gpio_pin_write_value(lcd->lcd_en_port, lcd->lcd_en_pin, 
      +                          PIN_HIGH);
  1545  002050  EE20 F001          	lfsr	2,1
  1546  002054  500A               	movf	lcd_send_enable@lcd^0,w,c
  1547  002056  26D9               	addwf	fsr2l,f,c
  1548  002058  500B               	movf	(lcd_send_enable@lcd+1)^0,w,c
  1549  00205A  22DA               	addwfc	fsr2h,f,c
  1550  00205C  38DF               	swapf	indf2,w,c
  1551  00205E  0B07               	andlw	7
  1552  002060  6E01               	movwf	gpio_pin_write_value@pin^0,c
  1553  002062  0E01               	movlw	1
  1554  002064  6E02               	movwf	gpio_pin_write_value@logic^0,c
  1555  002066  C00A  FFD9         	movff	lcd_send_enable@lcd,fsr2l
  1556  00206A  C00B  FFDA         	movff	lcd_send_enable@lcd+1,fsr2h
  1557  00206E  38DF               	swapf	indf2,w,c
  1558  002070  0B0F               	andlw	15
  1559  002072  EC51  F00D         	call	_gpio_pin_write_value
  1560  002076                     
  1561                           ;ecu/ecu_lcd/ecu_lcd.c: 65:     _delay((unsigned long)((200)*(8000000UL/4000000.0)));
  1562  002076  0E85               	movlw	133
  1563  002078                     u2067:
  1564  002078  2EE8               	decfsz	wreg,f,c
  1565  00207A  D7FE               	bra	u2067
  1566  00207C  F000               	nop	
  1567  00207E                     
  1568                           ;ecu/ecu_lcd/ecu_lcd.c: 66:     gpio_pin_write_value(lcd->lcd_en_port, lcd->lcd_en_pin, 
      +                          PIN_LOW);
  1569  00207E  EE20 F001          	lfsr	2,1
  1570  002082  500A               	movf	lcd_send_enable@lcd^0,w,c
  1571  002084  26D9               	addwf	fsr2l,f,c
  1572  002086  500B               	movf	(lcd_send_enable@lcd+1)^0,w,c
  1573  002088  22DA               	addwfc	fsr2h,f,c
  1574  00208A  38DF               	swapf	indf2,w,c
  1575  00208C  0B07               	andlw	7
  1576  00208E  6E01               	movwf	gpio_pin_write_value@pin^0,c
  1577  002090  0E00               	movlw	0
  1578  002092  6E02               	movwf	gpio_pin_write_value@logic^0,c
  1579  002094  C00A  FFD9         	movff	lcd_send_enable@lcd,fsr2l
  1580  002098  C00B  FFDA         	movff	lcd_send_enable@lcd+1,fsr2h
  1581  00209C  38DF               	swapf	indf2,w,c
  1582  00209E  0B0F               	andlw	15
  1583  0020A0  EC51  F00D         	call	_gpio_pin_write_value
  1584  0020A4  0012               	return		;funcret
  1585  0020A6                     __end_of_lcd_send_enable:
  1586                           	callstack 0
  1587                           
  1588 ;; *************** function _gpio_pin_write_value *****************
  1589 ;; Defined at:
  1590 ;;		line 67 in file "mcal/mcal_gpio/mcal_gpio.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  port            1    wreg     enum E2998
  1593 ;;  pin             1    0[COMRAM] enum E2988
  1594 ;;  logic           1    1[COMRAM] enum E2980
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  port            1    8[COMRAM] enum E2998
  1597 ;;  ret             1    0        enum E2976
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      enum E2976
  1600 ;; Registers used:
  1601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1608 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;Total ram usage:        9 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_lcd_intialize
  1617 ;;		_lcd_send_enable
  1618 ;;		_lcd_send_command
  1619 ;;		_lcd_send_char_data
  1620 ;;		_led_initialize
  1621 ;;		_led_turn_on
  1622 ;;		_led_turn_off
  1623 ;;		_relay_initialize
  1624 ;;		_relay_turn_on
  1625 ;;		_relay_turn_off
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           	psect	text7
  1630  001AA2                     __ptext7:
  1631                           	callstack 0
  1632  001AA2                     _gpio_pin_write_value:
  1633                           	callstack 26
  1634                           
  1635                           ;incstack = 0
  1636                           ;gpio_pin_write_value@port stored from wreg
  1637  001AA2  6E09               	movwf	gpio_pin_write_value@port^0,c
  1638  001AA4                     
  1639                           ;mcal/mcal_gpio/mcal_gpio.c: 69:     if (pin > 8UL - 1) {
  1640  001AA4  0E07               	movlw	7
  1641  001AA6  6401               	cpfsgt	gpio_pin_write_value@pin^0,c
  1642  001AA8  EF58  F00D         	goto	u1251
  1643  001AAC  EF5A  F00D         	goto	u1250
  1644  001AB0                     u1251:
  1645  001AB0  EFA1  F00D         	goto	l2072
  1646  001AB4                     u1250:
  1647  001AB4  EFB6  F00D         	goto	l158
  1648  001AB8                     l2062:
  1649                           
  1650                           ;mcal/mcal_gpio/mcal_gpio.c: 74:                 (*lat_register[port]&=(~(1<<pin)));
  1651  001AB8  C001  F003         	movff	gpio_pin_write_value@pin,??_gpio_pin_write_value
  1652  001ABC  0E01               	movlw	1
  1653  001ABE  6E04               	movwf	(??_gpio_pin_write_value+1)^0,c
  1654  001AC0  2A03               	incf	??_gpio_pin_write_value^0,f,c
  1655  001AC2  EF65  F00D         	goto	u1264
  1656  001AC6                     u1265:
  1657  001AC6  90D8               	bcf	status,0,c
  1658  001AC8  3604               	rlcf	(??_gpio_pin_write_value+1)^0,f,c
  1659  001ACA                     u1264:
  1660  001ACA  2E03               	decfsz	??_gpio_pin_write_value^0,f,c
  1661  001ACC  EF63  F00D         	goto	u1265
  1662  001AD0  5004               	movf	(??_gpio_pin_write_value+1)^0,w,c
  1663  001AD2  0AFF               	xorlw	255
  1664  001AD4  6E05               	movwf	(??_gpio_pin_write_value+2)^0,c
  1665  001AD6  5009               	movf	gpio_pin_write_value@port^0,w,c
  1666  001AD8  0D02               	mullw	2
  1667  001ADA  0EBB               	movlw	low _lat_register
  1668  001ADC  24F3               	addwf	243,w,c
  1669  001ADE  6ED9               	movwf	fsr2l,c
  1670  001AE0  0E00               	movlw	high _lat_register
  1671  001AE2  20F4               	addwfc	prodh,w,c
  1672  001AE4  6EDA               	movwf	fsr2h,c
  1673  001AE6  CFDE F006          	movff	postinc2,??_gpio_pin_write_value+3
  1674  001AEA  CFDD F007          	movff	postdec2,??_gpio_pin_write_value+4
  1675  001AEE  C006  FFD9         	movff	??_gpio_pin_write_value+3,fsr2l
  1676  001AF2  C007  FFDA         	movff	??_gpio_pin_write_value+4,fsr2h
  1677  001AF6  5005               	movf	(??_gpio_pin_write_value+2)^0,w,c
  1678  001AF8  16DF               	andwf	indf2,f,c
  1679  001AFA                     l2064:
  1680                           
  1681                           ;mcal/mcal_gpio/mcal_gpio.c: 76:                 break;
  1682  001AFA  EFB6  F00D         	goto	l158
  1683  001AFE                     l2066:
  1684                           
  1685                           ;mcal/mcal_gpio/mcal_gpio.c: 78:                 (*lat_register[port]|=(1<<pin));
  1686  001AFE  C001  F003         	movff	gpio_pin_write_value@pin,??_gpio_pin_write_value
  1687  001B02  0E01               	movlw	1
  1688  001B04  6E04               	movwf	(??_gpio_pin_write_value+1)^0,c
  1689  001B06  2A03               	incf	??_gpio_pin_write_value^0,f,c
  1690  001B08  EF88  F00D         	goto	u1274
  1691  001B0C                     u1275:
  1692  001B0C  90D8               	bcf	status,0,c
  1693  001B0E  3604               	rlcf	(??_gpio_pin_write_value+1)^0,f,c
  1694  001B10                     u1274:
  1695  001B10  2E03               	decfsz	??_gpio_pin_write_value^0,f,c
  1696  001B12  EF86  F00D         	goto	u1275
  1697  001B16  5009               	movf	gpio_pin_write_value@port^0,w,c
  1698  001B18  0D02               	mullw	2
  1699  001B1A  0EBB               	movlw	low _lat_register
  1700  001B1C  24F3               	addwf	243,w,c
  1701  001B1E  6ED9               	movwf	fsr2l,c
  1702  001B20  0E00               	movlw	high _lat_register
  1703  001B22  20F4               	addwfc	prodh,w,c
  1704  001B24  6EDA               	movwf	fsr2h,c
  1705  001B26  CFDE F005          	movff	postinc2,??_gpio_pin_write_value+2
  1706  001B2A  CFDD F006          	movff	postdec2,??_gpio_pin_write_value+3
  1707  001B2E  C005  FFD9         	movff	??_gpio_pin_write_value+2,fsr2l
  1708  001B32  C006  FFDA         	movff	??_gpio_pin_write_value+3,fsr2h
  1709  001B36  5004               	movf	(??_gpio_pin_write_value+1)^0,w,c
  1710  001B38  12DF               	iorwf	indf2,f,c
  1711  001B3A  EF7D  F00D         	goto	l2064
  1712  001B3E                     l2070:
  1713                           
  1714                           ;mcal/mcal_gpio/mcal_gpio.c: 83:         }
  1715  001B3E  EFB6  F00D         	goto	l158
  1716  001B42                     l2072:
  1717  001B42  5002               	movf	gpio_pin_write_value@logic^0,w,c
  1718  001B44  6E03               	movwf	??_gpio_pin_write_value^0,c
  1719  001B46  6A04               	clrf	(??_gpio_pin_write_value+1)^0,c
  1720                           
  1721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1722                           ; Switch size 1, requested type "simple"
  1723                           ; Number of cases is 1, Range of values is 0 to 0
  1724                           ; switch strategies available:
  1725                           ; Name         Instructions Cycles
  1726                           ; simple_byte            4     3 (average)
  1727                           ;	Chosen strategy is simple_byte
  1728  001B48  5004               	movf	(??_gpio_pin_write_value+1)^0,w,c
  1729  001B4A  0A00               	xorlw	0	; case 0
  1730  001B4C  B4D8               	btfsc	status,2,c
  1731  001B4E  EFAB  F00D         	goto	l2742
  1732  001B52  EF9F  F00D         	goto	l2070
  1733  001B56                     l2742:
  1734                           
  1735                           ; Switch size 1, requested type "simple"
  1736                           ; Number of cases is 2, Range of values is 0 to 1
  1737                           ; switch strategies available:
  1738                           ; Name         Instructions Cycles
  1739                           ; simple_byte            7     4 (average)
  1740                           ;	Chosen strategy is simple_byte
  1741  001B56  5003               	movf	??_gpio_pin_write_value^0,w,c
  1742  001B58  0A00               	xorlw	0	; case 0
  1743  001B5A  B4D8               	btfsc	status,2,c
  1744  001B5C  EF5C  F00D         	goto	l2062
  1745  001B60  0A01               	xorlw	1	; case 1
  1746  001B62  B4D8               	btfsc	status,2,c
  1747  001B64  EF7F  F00D         	goto	l2066
  1748  001B68  EF9F  F00D         	goto	l2070
  1749  001B6C                     l158:
  1750  001B6C  0012               	return		;funcret
  1751  001B6E                     __end_of_gpio_pin_write_value:
  1752                           	callstack 0
  1753                           
  1754 ;; *************** function _gpio_port_write_value *****************
  1755 ;; Defined at:
  1756 ;;		line 171 in file "mcal/mcal_gpio/mcal_gpio.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  port            1    wreg     enum E2998
  1759 ;;  value           1    0[COMRAM] unsigned char 
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  port            1    4[COMRAM] enum E2998
  1762 ;;  ret             1    0        enum E2976
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  1    wreg      enum E2976
  1765 ;; Registers used:
  1766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1772 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1774 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1775 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1776 ;;Total ram usage:        5 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_lcd_intialize
  1782 ;;		_lcd_send_command
  1783 ;;		_lcd_send_char_data
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           	psect	text8
  1788  0021C8                     __ptext8:
  1789                           	callstack 0
  1790  0021C8                     _gpio_port_write_value:
  1791                           	callstack 27
  1792                           
  1793                           ;incstack = 0
  1794                           ;gpio_port_write_value@port stored from wreg
  1795  0021C8  6E05               	movwf	gpio_port_write_value@port^0,c
  1796  0021CA                     
  1797                           ;mcal/mcal_gpio/mcal_gpio.c: 173:     if (port > 5UL - 1) {
  1798  0021CA  0E04               	movlw	4
  1799  0021CC  6405               	cpfsgt	gpio_port_write_value@port^0,c
  1800  0021CE  EFEB  F010         	goto	u1431
  1801  0021D2  EFED  F010         	goto	u1430
  1802  0021D6                     u1431:
  1803  0021D6  EFEF  F010         	goto	l2148
  1804  0021DA                     u1430:
  1805  0021DA  EF01  F011         	goto	l195
  1806  0021DE                     l2148:
  1807                           
  1808                           ;mcal/mcal_gpio/mcal_gpio.c: 176:         *lat_register[port] = value;
  1809  0021DE  5005               	movf	gpio_port_write_value@port^0,w,c
  1810  0021E0  0D02               	mullw	2
  1811  0021E2  0EBB               	movlw	low _lat_register
  1812  0021E4  24F3               	addwf	243,w,c
  1813  0021E6  6ED9               	movwf	fsr2l,c
  1814  0021E8  0E00               	movlw	high _lat_register
  1815  0021EA  20F4               	addwfc	prodh,w,c
  1816  0021EC  6EDA               	movwf	fsr2h,c
  1817  0021EE  CFDE F002          	movff	postinc2,??_gpio_port_write_value
  1818  0021F2  CFDD F003          	movff	postdec2,??_gpio_port_write_value+1
  1819  0021F6  C002  FFD9         	movff	??_gpio_port_write_value,fsr2l
  1820  0021FA  C003  FFDA         	movff	??_gpio_port_write_value+1,fsr2h
  1821  0021FE  C001  FFDF         	movff	gpio_port_write_value@value,indf2
  1822  002202                     l195:
  1823  002202  0012               	return		;funcret
  1824  002204                     __end_of_gpio_port_write_value:
  1825                           	callstack 0
  1826                           
  1827 ;; *************** function _gpio_port_direction_intialize *****************
  1828 ;; Defined at:
  1829 ;;		line 127 in file "mcal/mcal_gpio/mcal_gpio.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  port            1    wreg     enum E2998
  1832 ;;  direction       1    0[COMRAM] enum E2984
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  port            1    4[COMRAM] enum E2998
  1835 ;;  ret             1    0        enum E2976
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  1    wreg      enum E2976
  1838 ;; Registers used:
  1839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1845 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1849 ;;Total ram usage:        5 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_lcd_intialize
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text9
  1859  001EFE                     __ptext9:
  1860                           	callstack 0
  1861  001EFE                     _gpio_port_direction_intialize:
  1862                           	callstack 29
  1863                           
  1864                           ;incstack = 0
  1865                           ;gpio_port_direction_intialize@port stored from wreg
  1866  001EFE  6E05               	movwf	gpio_port_direction_intialize@port^0,c
  1867  001F00                     
  1868                           ;mcal/mcal_gpio/mcal_gpio.c: 129:     if (port > 5UL - 1) {
  1869  001F00  0E04               	movlw	4
  1870  001F02  6405               	cpfsgt	gpio_port_direction_intialize@port^0,c
  1871  001F04  EF86  F00F         	goto	u1521
  1872  001F08  EF88  F00F         	goto	u1520
  1873  001F0C                     u1521:
  1874  001F0C  EFB2  F00F         	goto	l2256
  1875  001F10                     u1520:
  1876  001F10  EFC7  F00F         	goto	l178
  1877  001F14                     l2246:
  1878                           
  1879                           ;mcal/mcal_gpio/mcal_gpio.c: 134:                 *tris_register[port] = 0x00;
  1880  001F14  5005               	movf	gpio_port_direction_intialize@port^0,w,c
  1881  001F16  0D02               	mullw	2
  1882  001F18  0EC5               	movlw	low _tris_register
  1883  001F1A  24F3               	addwf	243,w,c
  1884  001F1C  6ED9               	movwf	fsr2l,c
  1885  001F1E  0E00               	movlw	high _tris_register
  1886  001F20  20F4               	addwfc	prodh,w,c
  1887  001F22  6EDA               	movwf	fsr2h,c
  1888  001F24  CFDE F002          	movff	postinc2,??_gpio_port_direction_intialize
  1889  001F28  CFDD F003          	movff	postdec2,??_gpio_port_direction_intialize+1
  1890  001F2C  C002  FFD9         	movff	??_gpio_port_direction_intialize,fsr2l
  1891  001F30  C003  FFDA         	movff	??_gpio_port_direction_intialize+1,fsr2h
  1892  001F34  0E00               	movlw	0
  1893  001F36  6EDF               	movwf	indf2,c
  1894  001F38                     l2248:
  1895                           
  1896                           ;mcal/mcal_gpio/mcal_gpio.c: 136:                 break;
  1897  001F38  EFC7  F00F         	goto	l178
  1898  001F3C                     l2250:
  1899                           
  1900                           ;mcal/mcal_gpio/mcal_gpio.c: 138:                 *tris_register[port] = 0xFF;
  1901  001F3C  5005               	movf	gpio_port_direction_intialize@port^0,w,c
  1902  001F3E  0D02               	mullw	2
  1903  001F40  0EC5               	movlw	low _tris_register
  1904  001F42  24F3               	addwf	243,w,c
  1905  001F44  6ED9               	movwf	fsr2l,c
  1906  001F46  0E00               	movlw	high _tris_register
  1907  001F48  20F4               	addwfc	prodh,w,c
  1908  001F4A  6EDA               	movwf	fsr2h,c
  1909  001F4C  CFDE F002          	movff	postinc2,??_gpio_port_direction_intialize
  1910  001F50  CFDD F003          	movff	postdec2,??_gpio_port_direction_intialize+1
  1911  001F54  C002  FFD9         	movff	??_gpio_port_direction_intialize,fsr2l
  1912  001F58  C003  FFDA         	movff	??_gpio_port_direction_intialize+1,fsr2h
  1913  001F5C  0EFF               	movlw	255
  1914  001F5E  6EDF               	movwf	indf2,c
  1915  001F60  EF9C  F00F         	goto	l2248
  1916  001F64                     l2256:
  1917  001F64  5001               	movf	gpio_port_direction_intialize@direction^0,w,c
  1918  001F66  6E02               	movwf	??_gpio_port_direction_intialize^0,c
  1919  001F68  6A03               	clrf	(??_gpio_port_direction_intialize+1)^0,c
  1920                           
  1921                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1922                           ; Switch size 1, requested type "simple"
  1923                           ; Number of cases is 1, Range of values is 0 to 0
  1924                           ; switch strategies available:
  1925                           ; Name         Instructions Cycles
  1926                           ; simple_byte            4     3 (average)
  1927                           ;	Chosen strategy is simple_byte
  1928  001F6A  5003               	movf	(??_gpio_port_direction_intialize+1)^0,w,c
  1929  001F6C  0A00               	xorlw	0	; case 0
  1930  001F6E  B4D8               	btfsc	status,2,c
  1931  001F70  EFBC  F00F         	goto	l2744
  1932  001F74  EFC7  F00F         	goto	l178
  1933  001F78                     l2744:
  1934                           
  1935                           ; Switch size 1, requested type "simple"
  1936                           ; Number of cases is 2, Range of values is 0 to 1
  1937                           ; switch strategies available:
  1938                           ; Name         Instructions Cycles
  1939                           ; simple_byte            7     4 (average)
  1940                           ;	Chosen strategy is simple_byte
  1941  001F78  5002               	movf	??_gpio_port_direction_intialize^0,w,c
  1942  001F7A  0A00               	xorlw	0	; case 0
  1943  001F7C  B4D8               	btfsc	status,2,c
  1944  001F7E  EF8A  F00F         	goto	l2246
  1945  001F82  0A01               	xorlw	1	; case 1
  1946  001F84  B4D8               	btfsc	status,2,c
  1947  001F86  EF9E  F00F         	goto	l2250
  1948  001F8A  EFC7  F00F         	goto	l178
  1949  001F8E                     l178:
  1950  001F8E  0012               	return		;funcret
  1951  001F90                     __end_of_gpio_port_direction_intialize:
  1952                           	callstack 0
  1953                           
  1954 ;; *************** function _gpio_pin_direction_intialize *****************
  1955 ;; Defined at:
  1956 ;;		line 23 in file "mcal/mcal_gpio/mcal_gpio.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  port            1    wreg     enum E2998
  1959 ;;  pin             1    0[COMRAM] enum E2988
  1960 ;;  direction       1    1[COMRAM] enum E2984
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;  port            1    8[COMRAM] enum E2998
  1963 ;;  ret             1    0        enum E2976
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      enum E2976
  1966 ;; Registers used:
  1967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1973 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;Total ram usage:        9 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_lcd_intialize
  1983 ;;		_button_initialize
  1984 ;;		_led_initialize
  1985 ;;		_relay_initialize
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text10
  1990  001C38                     __ptext10:
  1991                           	callstack 0
  1992  001C38                     _gpio_pin_direction_intialize:
  1993                           	callstack 29
  1994                           
  1995                           ;incstack = 0
  1996                           ;gpio_pin_direction_intialize@port stored from wreg
  1997  001C38  6E09               	movwf	gpio_pin_direction_intialize@port^0,c
  1998  001C3A                     
  1999                           ;mcal/mcal_gpio/mcal_gpio.c: 25:     if (pin > 8UL - 1) {
  2000  001C3A  0E07               	movlw	7
  2001  001C3C  6401               	cpfsgt	gpio_pin_direction_intialize@pin^0,c
  2002  001C3E  EF23  F00E         	goto	u1491
  2003  001C42  EF25  F00E         	goto	u1490
  2004  001C46                     u1491:
  2005  001C46  EF6A  F00E         	goto	l2232
  2006  001C4A                     u1490:
  2007  001C4A  EF7F  F00E         	goto	l143
  2008  001C4E                     l2222:
  2009                           
  2010                           ;mcal/mcal_gpio/mcal_gpio.c: 30:                 (*tris_register[port]&=(~(1<<pin)));
  2011  001C4E  C001  F003         	movff	gpio_pin_direction_intialize@pin,??_gpio_pin_direction_intialize
  2012  001C52  0E01               	movlw	1
  2013  001C54  6E04               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2014  001C56  2A03               	incf	??_gpio_pin_direction_intialize^0,f,c
  2015  001C58  EF30  F00E         	goto	u1504
  2016  001C5C                     u1505:
  2017  001C5C  90D8               	bcf	status,0,c
  2018  001C5E  3604               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2019  001C60                     u1504:
  2020  001C60  2E03               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2021  001C62  EF2E  F00E         	goto	u1505
  2022  001C66  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2023  001C68  0AFF               	xorlw	255
  2024  001C6A  6E05               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  2025  001C6C  5009               	movf	gpio_pin_direction_intialize@port^0,w,c
  2026  001C6E  0D02               	mullw	2
  2027  001C70  0EC5               	movlw	low _tris_register
  2028  001C72  24F3               	addwf	243,w,c
  2029  001C74  6ED9               	movwf	fsr2l,c
  2030  001C76  0E00               	movlw	high _tris_register
  2031  001C78  20F4               	addwfc	prodh,w,c
  2032  001C7A  6EDA               	movwf	fsr2h,c
  2033  001C7C  CFDE F006          	movff	postinc2,??_gpio_pin_direction_intialize+3
  2034  001C80  CFDD F007          	movff	postdec2,??_gpio_pin_direction_intialize+4
  2035  001C84  C006  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  2036  001C88  C007  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  2037  001C8C  5005               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  2038  001C8E  16DF               	andwf	indf2,f,c
  2039  001C90                     l2224:
  2040                           
  2041                           ;mcal/mcal_gpio/mcal_gpio.c: 32:                 break;
  2042  001C90  EF7F  F00E         	goto	l143
  2043  001C94                     l2226:
  2044                           
  2045                           ;mcal/mcal_gpio/mcal_gpio.c: 34:                 (*tris_register[port]|=(1<<pin));
  2046  001C94  C001  F003         	movff	gpio_pin_direction_intialize@pin,??_gpio_pin_direction_intialize
  2047  001C98  0E01               	movlw	1
  2048  001C9A  6E04               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2049  001C9C  2A03               	incf	??_gpio_pin_direction_intialize^0,f,c
  2050  001C9E  EF53  F00E         	goto	u1514
  2051  001CA2                     u1515:
  2052  001CA2  90D8               	bcf	status,0,c
  2053  001CA4  3604               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2054  001CA6                     u1514:
  2055  001CA6  2E03               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2056  001CA8  EF51  F00E         	goto	u1515
  2057  001CAC  5009               	movf	gpio_pin_direction_intialize@port^0,w,c
  2058  001CAE  0D02               	mullw	2
  2059  001CB0  0EC5               	movlw	low _tris_register
  2060  001CB2  24F3               	addwf	243,w,c
  2061  001CB4  6ED9               	movwf	fsr2l,c
  2062  001CB6  0E00               	movlw	high _tris_register
  2063  001CB8  20F4               	addwfc	prodh,w,c
  2064  001CBA  6EDA               	movwf	fsr2h,c
  2065  001CBC  CFDE F005          	movff	postinc2,??_gpio_pin_direction_intialize+2
  2066  001CC0  CFDD F006          	movff	postdec2,??_gpio_pin_direction_intialize+3
  2067  001CC4  C005  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  2068  001CC8  C006  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  2069  001CCC  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2070  001CCE  12DF               	iorwf	indf2,f,c
  2071  001CD0  EF48  F00E         	goto	l2224
  2072  001CD4                     l2232:
  2073  001CD4  5002               	movf	gpio_pin_direction_intialize@direction^0,w,c
  2074  001CD6  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  2075  001CD8  6A04               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  2076                           
  2077                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2078                           ; Switch size 1, requested type "simple"
  2079                           ; Number of cases is 1, Range of values is 0 to 0
  2080                           ; switch strategies available:
  2081                           ; Name         Instructions Cycles
  2082                           ; simple_byte            4     3 (average)
  2083                           ;	Chosen strategy is simple_byte
  2084  001CDA  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2085  001CDC  0A00               	xorlw	0	; case 0
  2086  001CDE  B4D8               	btfsc	status,2,c
  2087  001CE0  EF74  F00E         	goto	l2746
  2088  001CE4  EF7F  F00E         	goto	l143
  2089  001CE8                     l2746:
  2090                           
  2091                           ; Switch size 1, requested type "simple"
  2092                           ; Number of cases is 2, Range of values is 0 to 1
  2093                           ; switch strategies available:
  2094                           ; Name         Instructions Cycles
  2095                           ; simple_byte            7     4 (average)
  2096                           ;	Chosen strategy is simple_byte
  2097  001CE8  5003               	movf	??_gpio_pin_direction_intialize^0,w,c
  2098  001CEA  0A00               	xorlw	0	; case 0
  2099  001CEC  B4D8               	btfsc	status,2,c
  2100  001CEE  EF27  F00E         	goto	l2222
  2101  001CF2  0A01               	xorlw	1	; case 1
  2102  001CF4  B4D8               	btfsc	status,2,c
  2103  001CF6  EF4A  F00E         	goto	l2226
  2104  001CFA  EF7F  F00E         	goto	l143
  2105  001CFE                     l143:
  2106  001CFE  0012               	return		;funcret
  2107  001D00                     __end_of_gpio_pin_direction_intialize:
  2108                           	callstack 0
  2109                           
  2110 ;; *************** function _byte_to_string *****************
  2111 ;; Defined at:
  2112 ;;		line 232 in file "ecu/ecu_lcd/ecu_lcd.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  number          1    wreg     unsigned char 
  2115 ;;  output          2   93[COMRAM] PTR unsigned char 
  2116 ;;		 -> main@sec(8), main@min(8), main@hours(8), 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  number          1   10[BANK0 ] unsigned char 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;Total ram usage:        3 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; Hardware stack levels required when called:    8
  2135 ;; This function calls:
  2136 ;;		_sprintf
  2137 ;; This function is called by:
  2138 ;;		_main
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           	psect	text11
  2143  002292                     __ptext11:
  2144                           	callstack 0
  2145  002292                     _byte_to_string:
  2146                           	callstack 22
  2147                           
  2148                           ;incstack = 0
  2149                           ;byte_to_string@number stored from wreg
  2150  002292  0100               	movlb	0	; () banked
  2151  002294  6F6A               	movwf	byte_to_string@number& (0+255),b
  2152  002296                     
  2153                           ;ecu/ecu_lcd/ecu_lcd.c: 233:     sprintf(output, "%i", number);
  2154  002296  C05E  F058         	movff	byte_to_string@output,sprintf@s
  2155  00229A  C05F  F059         	movff	byte_to_string@output+1,sprintf@s+1
  2156  00229E  0E08               	movlw	low STR_6
  2157  0022A0  6E5A               	movwf	sprintf@fmt^0,c
  2158  0022A2  0E10               	movlw	high STR_6
  2159  0022A4  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2160  0022A6  C06A  F05C         	movff	byte_to_string@number,?_sprintf+4
  2161  0022AA  6A5D               	clrf	(?_sprintf+5)^0,c
  2162  0022AC  EC53  F010         	call	_sprintf	;wreg free
  2163  0022B0  0012               	return		;funcret
  2164  0022B2                     __end_of_byte_to_string:
  2165                           	callstack 0
  2166                           
  2167 ;; *************** function _sprintf *****************
  2168 ;; Defined at:
  2169 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_sprintf.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  s               2   87[COMRAM] PTR unsigned char 
  2172 ;;		 -> main@sec(8), main@min(8), main@hours(8), 
  2173 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  2174 ;;		 -> STR_8(3), STR_7(3), STR_6(3), 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  f               6    4[BANK0 ] struct _IO_FILE
  2177 ;;  ap              2    2[BANK0 ] PTR void [1]
  2178 ;;		 -> ?_sprintf(2), 
  2179 ;;  ret             2    0        int 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  2   87[COMRAM] int 
  2182 ;; Registers used:
  2183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2189 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;Total ram usage:       16 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    7
  2196 ;; This function calls:
  2197 ;;		_vfprintf
  2198 ;; This function is called by:
  2199 ;;		_byte_to_string
  2200 ;;		_short_to_string
  2201 ;;		_int_to_string
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text12
  2206  0020A6                     __ptext12:
  2207                           	callstack 0
  2208  0020A6                     _sprintf:
  2209                           	callstack 22
  2210  0020A6  0E5C               	movlw	low (?_sprintf+4)
  2211  0020A8  0100               	movlb	0	; () banked
  2212  0020AA  6F62               	movwf	sprintf@ap& (0+255),b
  2213  0020AC  0E00               	movlw	high (?_sprintf+4)
  2214  0020AE  6F63               	movwf	(sprintf@ap+1)& (0+255),b
  2215  0020B0  C058  F064         	movff	sprintf@s,sprintf@f
  2216  0020B4  C059  F065         	movff	sprintf@s+1,sprintf@f+1
  2217  0020B8                     
  2218                           ; BSR set to: 0
  2219  0020B8  0E00               	movlw	0
  2220  0020BA  6F67               	movwf	(sprintf@f+3)& (0+255),b
  2221  0020BC  0E00               	movlw	0
  2222  0020BE  6F66               	movwf	(sprintf@f+2)& (0+255),b
  2223  0020C0                     
  2224                           ; BSR set to: 0
  2225  0020C0  0E00               	movlw	0
  2226  0020C2  6F69               	movwf	(sprintf@f+5)& (0+255),b
  2227  0020C4  0E00               	movlw	0
  2228  0020C6  6F68               	movwf	(sprintf@f+4)& (0+255),b
  2229  0020C8                     
  2230                           ; BSR set to: 0
  2231  0020C8  0E64               	movlw	low sprintf@f
  2232  0020CA  6E50               	movwf	vfprintf@fp^0,c
  2233  0020CC  0E00               	movlw	high sprintf@f
  2234  0020CE  6E51               	movwf	(vfprintf@fp+1)^0,c
  2235  0020D0  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  2236  0020D4  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2237  0020D8  0E62               	movlw	low sprintf@ap
  2238  0020DA  6E54               	movwf	vfprintf@ap^0,c
  2239  0020DC  0E00               	movlw	high sprintf@ap
  2240  0020DE  6E55               	movwf	(vfprintf@ap+1)^0,c
  2241  0020E0  ECC8  F00F         	call	_vfprintf	;wreg free
  2242  0020E4  0100               	movlb	0	; () banked
  2243  0020E6  5166               	movf	(sprintf@f+2)& (0+255),w,b
  2244  0020E8  2458               	addwf	sprintf@s^0,w,c
  2245  0020EA  6ED9               	movwf	fsr2l,c
  2246  0020EC  5167               	movf	(sprintf@f+3)& (0+255),w,b
  2247  0020EE  2059               	addwfc	(sprintf@s+1)^0,w,c
  2248  0020F0  6EDA               	movwf	fsr2h,c
  2249  0020F2  0E00               	movlw	0
  2250  0020F4  6EDF               	movwf	indf2,c
  2251  0020F6                     
  2252                           ; BSR set to: 0
  2253  0020F6  0012               	return		;funcret
  2254  0020F8                     __end_of_sprintf:
  2255                           	callstack 0
  2256                           
  2257 ;; *************** function _vfprintf *****************
  2258 ;; Defined at:
  2259 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  2262 ;;		 -> sprintf@f(6), 
  2263 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  2264 ;;		 -> STR_8(3), STR_7(3), STR_6(3), 
  2265 ;;  ap              2   83[COMRAM] PTR PTR void 
  2266 ;;		 -> sprintf@ap(2), 
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  2269 ;;		 -> STR_8(3), STR_7(3), STR_6(3), 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  2   79[COMRAM] int 
  2272 ;; Registers used:
  2273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2279 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2282 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2283 ;;Total ram usage:        8 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; Hardware stack levels required when called:    6
  2286 ;; This function calls:
  2287 ;;		_vfpfcnvrt
  2288 ;; This function is called by:
  2289 ;;		_sprintf
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           	psect	text13
  2294  001F90                     __ptext13:
  2295                           	callstack 0
  2296  001F90                     _vfprintf:
  2297                           	callstack 22
  2298  001F90                     
  2299                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2300  001F90  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  2301  001F94  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2302  001F98                     
  2303                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2304  001F98  0E00               	movlw	0
  2305  001F9A  0100               	movlb	0	; () banked
  2306  001F9C  6F8A               	movwf	(_nout+1)& (0+255),b
  2307  001F9E  0E00               	movlw	0
  2308  001FA0  6F89               	movwf	_nout& (0+255),b
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2311  001FA2  EFE6  F00F         	goto	l2212
  2312  001FA6                     l2210:
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2316  001FA6  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  2317  001FAA  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2318  001FAE  0E56               	movlw	low vfprintf@cfmt
  2319  001FB0  6E42               	movwf	vfpfcnvrt@fmt^0,c
  2320  001FB2  0E00               	movlw	high vfprintf@cfmt
  2321  001FB4  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2322  001FB6  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  2323  001FBA  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2324  001FBE  EC79  F009         	call	_vfpfcnvrt	;wreg free
  2325  001FC2  5040               	movf	?_vfpfcnvrt^0,w,c
  2326  001FC4  0100               	movlb	0	; () banked
  2327  001FC6  2789               	addwf	_nout& (0+255),f,b
  2328  001FC8  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  2329  001FCA  238A               	addwfc	(_nout+1)& (0+255),f,b
  2330  001FCC                     l2212:
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2334  001FCC  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  2335  001FD0  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2336  001FD4                     	if	0	;tblptru may be non-zero
  2337  001FD4                     	endif
  2338  001FD4                     	if	0	;tblptru may be non-zero
  2339  001FD4                     	endif
  2340  001FD4  0008               	tblrd		*
  2341  001FD6  50F5               	movf	tablat,w,c
  2342  001FD8  0900               	iorlw	0
  2343  001FDA  A4D8               	btfss	status,2,c
  2344  001FDC  EFF2  F00F         	goto	u1481
  2345  001FE0  EFF4  F00F         	goto	u1480
  2346  001FE4                     u1481:
  2347  001FE4  EFD3  F00F         	goto	l2210
  2348  001FE8                     u1480:
  2349  001FE8                     
  2350                           ; BSR set to: 0
  2351                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2352  001FE8  C089  F050         	movff	_nout,?_vfprintf
  2353  001FEC  C08A  F051         	movff	_nout+1,?_vfprintf+1
  2354  001FF0                     
  2355                           ; BSR set to: 0
  2356  001FF0  0012               	return		;funcret
  2357  001FF2                     __end_of_vfprintf:
  2358                           	callstack 0
  2359                           
  2360 ;; *************** function _vfpfcnvrt *****************
  2361 ;; Defined at:
  2362 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2365 ;;		 -> sprintf@f(6), 
  2366 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2367 ;;		 -> vfprintf@cfmt(2), 
  2368 ;;  ap              2   67[COMRAM] PTR PTR void 
  2369 ;;		 -> sprintf@ap(2), 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  ll              8   71[COMRAM] long long 
  2372 ;;  llu             8    0        unsigned long long 
  2373 ;;  f               4    0        unsigned long long 
  2374 ;;  vp              3    0        PTR void 
  2375 ;;  ct              3    0        unsigned char [3]
  2376 ;;  cp              3    0        PTR unsigned char 
  2377 ;;  i               2    0        int 
  2378 ;;  done            2    0        int 
  2379 ;;  c               1    0        unsigned char 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  2   63[COMRAM] int 
  2382 ;; Registers used:
  2383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2389 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2393 ;;Total ram usage:       16 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    5
  2396 ;; This function calls:
  2397 ;;		_dtoa
  2398 ;;		_fputc
  2399 ;; This function is called by:
  2400 ;;		_vfprintf
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           	psect	text14
  2405  0012F2                     __ptext14:
  2406                           	callstack 0
  2407  0012F2                     _vfpfcnvrt:
  2408                           	callstack 22
  2409  0012F2                     
  2410                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2411  0012F2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2412  0012F6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2413  0012FA  CFDE FFF6          	movff	postinc2,tblptrl
  2414  0012FE  CFDD FFF7          	movff	postdec2,tblptrh
  2415  001302                     	if	0	;tblptru may be non-zero
  2416  001302                     	endif
  2417  001302                     	if	0	;tblptru may be non-zero
  2418  001302                     	endif
  2419  001302  0008               	tblrd		*
  2420  001304  50F5               	movf	tablat,w,c
  2421  001306  0A25               	xorlw	37
  2422  001308  A4D8               	btfss	status,2,c
  2423  00130A  EF89  F009         	goto	u1441
  2424  00130E  EF8B  F009         	goto	u1440
  2425  001312                     u1441:
  2426  001312  EF37  F00A         	goto	l2194
  2427  001316                     u1440:
  2428  001316                     
  2429                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2430  001316  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2431  00131A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2432  00131E  2ADE               	incf	postinc2,f,c
  2433  001320  0E00               	movlw	0
  2434  001322  22DD               	addwfc	postdec2,f,c
  2435  001324                     
  2436                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2437  001324  0E00               	movlw	0
  2438  001326  0100               	movlb	0	; () banked
  2439  001328  6F8C               	movwf	(_width+1)& (0+255),b
  2440  00132A  0E00               	movlw	0
  2441  00132C  6F8B               	movwf	_width& (0+255),b
  2442  00132E  C08B  F08F         	movff	_width,_flags
  2443  001332  C08C  F090         	movff	_width+1,_flags+1
  2444  001336                     
  2445                           ; BSR set to: 0
  2446                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2447  001336  698D               	setf	_prec& (0+255),b
  2448  001338  698E               	setf	(_prec+1)& (0+255),b
  2449  00133A                     
  2450                           ; BSR set to: 0
  2451                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2452  00133A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2453  00133E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2454  001342  CFDE FFF6          	movff	postinc2,tblptrl
  2455  001346  CFDD FFF7          	movff	postdec2,tblptrh
  2456  00134A                     	if	0	;tblptru may be non-zero
  2457  00134A                     	endif
  2458  00134A                     	if	0	;tblptru may be non-zero
  2459  00134A                     	endif
  2460  00134A  0008               	tblrd		*
  2461  00134C  50F5               	movf	tablat,w,c
  2462  00134E  0A64               	xorlw	100
  2463  001350  B4D8               	btfsc	status,2,c
  2464  001352  EFAD  F009         	goto	u1451
  2465  001356  EFAF  F009         	goto	u1450
  2466  00135A                     u1451:
  2467  00135A  EFC1  F009         	goto	l2172
  2468  00135E                     u1450:
  2469  00135E                     
  2470                           ; BSR set to: 0
  2471  00135E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2472  001362  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2473  001366  CFDE FFF6          	movff	postinc2,tblptrl
  2474  00136A  CFDD FFF7          	movff	postdec2,tblptrh
  2475  00136E                     	if	0	;tblptru may be non-zero
  2476  00136E                     	endif
  2477  00136E                     	if	0	;tblptru may be non-zero
  2478  00136E                     	endif
  2479  00136E  0008               	tblrd		*
  2480  001370  50F5               	movf	tablat,w,c
  2481  001372  0A69               	xorlw	105
  2482  001374  A4D8               	btfss	status,2,c
  2483  001376  EFBF  F009         	goto	u1461
  2484  00137A  EFC1  F009         	goto	u1460
  2485  00137E                     u1461:
  2486  00137E  EF01  F00A         	goto	l2178
  2487  001382                     u1460:
  2488  001382                     l2172:
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2492  001382  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2493  001386  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2494  00138A  2ADE               	incf	postinc2,f,c
  2495  00138C  0E00               	movlw	0
  2496  00138E  22DD               	addwfc	postdec2,f,c
  2497                           
  2498                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2499  001390  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2500  001394  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2501  001398  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2502  00139C  0E02               	movlw	2
  2503  00139E  26DE               	addwf	postinc2,f,c
  2504  0013A0  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2505  0013A4  0E00               	movlw	0
  2506  0013A6  22DD               	addwfc	postdec2,f,c
  2507  0013A8  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2508  0013AC  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2509  0013B0  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  2510  0013B4  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  2511  0013B8  0E00               	movlw	0
  2512  0013BA  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2513  0013BC  0EFF               	movlw	-1
  2514  0013BE  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  2515  0013C0  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  2516  0013C2  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  2517  0013C4  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  2518  0013C6  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  2519  0013C8  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  2520  0013CA                     
  2521                           ; BSR set to: 0
  2522                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2523  0013CA  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2524  0013CE  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2525  0013D2  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2526  0013D6  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2527  0013DA  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2528  0013DE  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2529  0013E2  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2530  0013E6  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2531  0013EA  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2532  0013EE  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2533  0013F2  EC08  F008         	call	_dtoa	;wreg free
  2534  0013F6  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  2535  0013FA  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2536  0013FE  EF52  F00A         	goto	l1047
  2537  001402                     l2178:
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2541  001402  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2542  001406  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2543  00140A  CFDE FFF6          	movff	postinc2,tblptrl
  2544  00140E  CFDD FFF7          	movff	postdec2,tblptrh
  2545  001412                     	if	0	;tblptru may be non-zero
  2546  001412                     	endif
  2547  001412                     	if	0	;tblptru may be non-zero
  2548  001412                     	endif
  2549  001412  0008               	tblrd		*
  2550  001414  50F5               	movf	tablat,w,c
  2551  001416  0A25               	xorlw	37
  2552  001418  A4D8               	btfss	status,2,c
  2553  00141A  EF11  F00A         	goto	u1471
  2554  00141E  EF13  F00A         	goto	u1470
  2555  001422                     u1471:
  2556  001422  EF2A  F00A         	goto	l2188
  2557  001426                     u1470:
  2558  001426                     
  2559                           ; BSR set to: 0
  2560                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2561  001426  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2562  00142A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2563  00142E  2ADE               	incf	postinc2,f,c
  2564  001430  0E00               	movlw	0
  2565  001432  22DD               	addwfc	postdec2,f,c
  2566  001434                     
  2567                           ; BSR set to: 0
  2568                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2569  001434  0E00               	movlw	0
  2570  001436  6E02               	movwf	(fputc@c+1)^0,c
  2571  001438  0E25               	movlw	37
  2572  00143A  6E01               	movwf	fputc@c^0,c
  2573  00143C  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2574  001440  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2575  001444  ECB7  F00D         	call	_fputc	;wreg free
  2576  001448                     l2184:
  2577                           
  2578                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2579  001448  0E00               	movlw	0
  2580  00144A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2581  00144C  0E01               	movlw	1
  2582  00144E  6E40               	movwf	?_vfpfcnvrt^0,c
  2583  001450  EF52  F00A         	goto	l1047
  2584  001454                     l2188:
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2588  001454  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2589  001458  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2590  00145C  2ADE               	incf	postinc2,f,c
  2591  00145E  0E00               	movlw	0
  2592  001460  22DD               	addwfc	postdec2,f,c
  2593  001462                     
  2594                           ; BSR set to: 0
  2595                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2596  001462  0E00               	movlw	0
  2597  001464  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2598  001466  0E00               	movlw	0
  2599  001468  6E40               	movwf	?_vfpfcnvrt^0,c
  2600  00146A  EF52  F00A         	goto	l1047
  2601  00146E                     l2194:
  2602                           
  2603                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2604  00146E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2605  001472  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2606  001476  CFDE FFF6          	movff	postinc2,tblptrl
  2607  00147A  CFDD FFF7          	movff	postdec2,tblptrh
  2608  00147E                     	if	0	;tblptru may be non-zero
  2609  00147E                     	endif
  2610  00147E                     	if	0	;tblptru may be non-zero
  2611  00147E                     	endif
  2612  00147E  0008               	tblrd		*
  2613  001480  50F5               	movf	tablat,w,c
  2614  001482  6E01               	movwf	fputc@c^0,c
  2615  001484  6A02               	clrf	(fputc@c+1)^0,c
  2616  001486  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2617  00148A  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2618  00148E  ECB7  F00D         	call	_fputc	;wreg free
  2619  001492                     
  2620                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2621  001492  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2622  001496  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2623  00149A  2ADE               	incf	postinc2,f,c
  2624  00149C  0E00               	movlw	0
  2625  00149E  22DD               	addwfc	postdec2,f,c
  2626  0014A0  EF24  F00A         	goto	l2184
  2627  0014A4                     l1047:
  2628  0014A4  0012               	return		;funcret
  2629  0014A6                     __end_of_vfpfcnvrt:
  2630                           	callstack 0
  2631                           
  2632 ;; *************** function _dtoa *****************
  2633 ;; Defined at:
  2634 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2637 ;;		 -> sprintf@f(6), 
  2638 ;;  d               8   29[COMRAM] long long 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  n               8   53[COMRAM] long long 
  2641 ;;  i               2   61[COMRAM] int 
  2642 ;;  s               2   51[COMRAM] int 
  2643 ;;  w               2   49[COMRAM] int 
  2644 ;;  p               2   47[COMRAM] int 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  2   27[COMRAM] int 
  2647 ;; Registers used:
  2648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2654 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;Total ram usage:       36 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    4
  2661 ;; This function calls:
  2662 ;;		___aodiv
  2663 ;;		___aomod
  2664 ;;		_abs
  2665 ;;		_pad
  2666 ;; This function is called by:
  2667 ;;		_vfpfcnvrt
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           	psect	text15
  2672  001010                     __ptext15:
  2673                           	callstack 0
  2674  001010                     _dtoa:
  2675                           	callstack 22
  2676  001010                     
  2677                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2678  001010  C01E  F036         	movff	dtoa@d,dtoa@n
  2679  001014  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  2680  001018  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  2681  00101C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  2682  001020  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  2683  001024  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  2684  001028  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  2685  00102C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  2686  001030                     
  2687                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2688  001030  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  2689  001032  EF1D  F008         	goto	u1281
  2690  001036  EF20  F008         	goto	u1280
  2691  00103A                     u1281:
  2692  00103A  0E01               	movlw	1
  2693  00103C  EF21  F008         	goto	u1290
  2694  001040                     u1280:
  2695  001040  0E00               	movlw	0
  2696  001042                     u1290:
  2697  001042  6E34               	movwf	dtoa@s^0,c
  2698  001044  6A35               	clrf	(dtoa@s+1)^0,c
  2699                           
  2700                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2701  001046  5034               	movf	dtoa@s^0,w,c
  2702  001048  1035               	iorwf	(dtoa@s+1)^0,w,c
  2703  00104A  B4D8               	btfsc	status,2,c
  2704  00104C  EF2A  F008         	goto	u1301
  2705  001050  EF2C  F008         	goto	u1300
  2706  001054                     u1301:
  2707  001054  EF3C  F008         	goto	l2084
  2708  001058                     u1300:
  2709  001058                     
  2710                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2711  001058  1E3D               	comf	(dtoa@n+7)^0,f,c
  2712  00105A  1E3C               	comf	(dtoa@n+6)^0,f,c
  2713  00105C  1E3B               	comf	(dtoa@n+5)^0,f,c
  2714  00105E  1E3A               	comf	(dtoa@n+4)^0,f,c
  2715  001060  1E39               	comf	(dtoa@n+3)^0,f,c
  2716  001062  1E38               	comf	(dtoa@n+2)^0,f,c
  2717  001064  1E37               	comf	(dtoa@n+1)^0,f,c
  2718  001066  6C36               	negf	dtoa@n^0,c
  2719  001068  0E00               	movlw	0
  2720  00106A  2237               	addwfc	(dtoa@n+1)^0,f,c
  2721  00106C  2238               	addwfc	(dtoa@n+2)^0,f,c
  2722  00106E  2239               	addwfc	(dtoa@n+3)^0,f,c
  2723  001070  223A               	addwfc	(dtoa@n+4)^0,f,c
  2724  001072  223B               	addwfc	(dtoa@n+5)^0,f,c
  2725  001074  223C               	addwfc	(dtoa@n+6)^0,f,c
  2726  001076  223D               	addwfc	(dtoa@n+7)^0,f,c
  2727  001078                     l2084:
  2728                           
  2729                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2730  001078  0100               	movlb	0	; () banked
  2731  00107A  BF8E               	btfsc	(_prec+1)& (0+255),7,b
  2732  00107C  EF42  F008         	goto	u1311
  2733  001080  EF44  F008         	goto	u1310
  2734  001084                     u1311:
  2735  001084  EF45  F008         	goto	l2088
  2736  001088                     u1310:
  2737  001088                     
  2738                           ; BSR set to: 0
  2739                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2740  001088  938F               	bcf	_flags& (0+255),1,b
  2741  00108A                     l2088:
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2745  00108A  BF8E               	btfsc	(_prec+1)& (0+255),7,b
  2746  00108C  EF52  F008         	goto	u1320
  2747  001090  518E               	movf	(_prec+1)& (0+255),w,b
  2748  001092  E106               	bnz	u1321
  2749  001094  058D               	decf	_prec& (0+255),w,b
  2750  001096  B0D8               	btfsc	status,0,c
  2751  001098  EF50  F008         	goto	u1321
  2752  00109C  EF52  F008         	goto	u1320
  2753  0010A0                     u1321:
  2754  0010A0  EF58  F008         	goto	l1020
  2755  0010A4                     u1320:
  2756  0010A4                     
  2757                           ; BSR set to: 0
  2758  0010A4  0E00               	movlw	0
  2759  0010A6  6E31               	movwf	(dtoa@p+1)^0,c
  2760  0010A8  0E01               	movlw	1
  2761  0010AA  6E30               	movwf	dtoa@p^0,c
  2762  0010AC  EF5C  F008         	goto	l1022
  2763  0010B0                     l1020:
  2764                           
  2765                           ; BSR set to: 0
  2766  0010B0  C08D  F030         	movff	_prec,dtoa@p
  2767  0010B4  C08E  F031         	movff	_prec+1,dtoa@p+1
  2768  0010B8                     l1022:
  2769                           
  2770                           ; BSR set to: 0
  2771                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2772  0010B8  C08B  F032         	movff	_width,dtoa@w
  2773  0010BC  C08C  F033         	movff	_width+1,dtoa@w+1
  2774  0010C0                     
  2775                           ; BSR set to: 0
  2776                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2777  0010C0  5034               	movf	dtoa@s^0,w,c
  2778  0010C2  1035               	iorwf	(dtoa@s+1)^0,w,c
  2779  0010C4  A4D8               	btfss	status,2,c
  2780  0010C6  EF67  F008         	goto	u1331
  2781  0010CA  EF69  F008         	goto	u1330
  2782  0010CE                     u1331:
  2783  0010CE  EF70  F008         	goto	l2096
  2784  0010D2                     u1330:
  2785  0010D2                     
  2786                           ; BSR set to: 0
  2787  0010D2  A58F               	btfss	_flags& (0+255),2,b
  2788  0010D4  EF6E  F008         	goto	u1341
  2789  0010D8  EF70  F008         	goto	u1340
  2790  0010DC                     u1341:
  2791  0010DC  EF73  F008         	goto	l2098
  2792  0010E0                     u1340:
  2793  0010E0                     l2096:
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  2797  0010E0  0632               	decf	dtoa@w^0,f,c
  2798  0010E2  A0D8               	btfss	status,0,c
  2799  0010E4  0633               	decf	(dtoa@w+1)^0,f,c
  2800  0010E6                     l2098:
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2804  0010E6  0E00               	movlw	0
  2805  0010E8  6E3F               	movwf	(dtoa@i+1)^0,c
  2806  0010EA  0E1F               	movlw	31
  2807  0010EC  6E3E               	movwf	dtoa@i^0,c
  2808  0010EE                     
  2809                           ; BSR set to: 0
  2810                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2811  0010EE  0E00               	movlw	0
  2812  0010F0  6FB0               	movwf	(_dbuf+31)& (0+255),b
  2813                           
  2814                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2815  0010F2  EFF7  F008         	goto	l2112
  2816  0010F6                     l2102:
  2817                           
  2818                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  2819  0010F6  063E               	decf	dtoa@i^0,f,c
  2820  0010F8  A0D8               	btfss	status,0,c
  2821  0010FA  063F               	decf	(dtoa@i+1)^0,f,c
  2822  0010FC                     
  2823                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2824  0010FC  0E91               	movlw	low _dbuf
  2825  0010FE  243E               	addwf	dtoa@i^0,w,c
  2826  001100  6ED9               	movwf	fsr2l,c
  2827  001102  0E00               	movlw	high _dbuf
  2828  001104  203F               	addwfc	(dtoa@i+1)^0,w,c
  2829  001106  6EDA               	movwf	fsr2h,c
  2830  001108  C036  F001         	movff	dtoa@n,___aomod@dividend
  2831  00110C  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2832  001110  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2833  001114  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2834  001118  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2835  00111C  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2836  001120  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2837  001124  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2838  001128  0E0A               	movlw	10
  2839  00112A  6E09               	movwf	___aomod@divisor^0,c
  2840  00112C  0E00               	movlw	0
  2841  00112E  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2842  001130  0E00               	movlw	0
  2843  001132  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2844  001134  0E00               	movlw	0
  2845  001136  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2846  001138  0E00               	movlw	0
  2847  00113A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2848  00113C  0E00               	movlw	0
  2849  00113E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2850  001140  0E00               	movlw	0
  2851  001142  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2852  001144  0E00               	movlw	0
  2853  001146  6E10               	movwf	(___aomod@divisor+7)^0,c
  2854  001148  EC9F  F00C         	call	___aomod	;wreg free
  2855  00114C  C001  F026         	movff	?___aomod,??_dtoa
  2856  001150  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2857  001154  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2858  001158  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2859  00115C  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2860  001160  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2861  001164  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2862  001168  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2863  00116C  C026  F013         	movff	??_dtoa,abs@a
  2864  001170  C028  F014         	movff	??_dtoa+2,abs@a+1
  2865  001174  ECC4  F010         	call	_abs	;wreg free
  2866  001178  5013               	movf	?_abs^0,w,c
  2867  00117A  0F30               	addlw	48
  2868  00117C  6EDF               	movwf	indf2,c
  2869  00117E                     
  2870                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  2871  00117E  0630               	decf	dtoa@p^0,f,c
  2872  001180  A0D8               	btfss	status,0,c
  2873  001182  0631               	decf	(dtoa@p+1)^0,f,c
  2874  001184                     
  2875                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  2876  001184  0632               	decf	dtoa@w^0,f,c
  2877  001186  A0D8               	btfss	status,0,c
  2878  001188  0633               	decf	(dtoa@w+1)^0,f,c
  2879  00118A                     
  2880                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2881  00118A  C036  F001         	movff	dtoa@n,___aodiv@dividend
  2882  00118E  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2883  001192  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2884  001196  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2885  00119A  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2886  00119E  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2887  0011A2  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2888  0011A6  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2889  0011AA  0E0A               	movlw	10
  2890  0011AC  6E09               	movwf	___aodiv@divisor^0,c
  2891  0011AE  0E00               	movlw	0
  2892  0011B0  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2893  0011B2  0E00               	movlw	0
  2894  0011B4  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2895  0011B6  0E00               	movlw	0
  2896  0011B8  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2897  0011BA  0E00               	movlw	0
  2898  0011BC  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2899  0011BE  0E00               	movlw	0
  2900  0011C0  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2901  0011C2  0E00               	movlw	0
  2902  0011C4  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2903  0011C6  0E00               	movlw	0
  2904  0011C8  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2905  0011CA  EC1B  F00B         	call	___aodiv	;wreg free
  2906  0011CE  C001  F036         	movff	?___aodiv,dtoa@n
  2907  0011D2  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  2908  0011D6  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  2909  0011DA  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  2910  0011DE  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  2911  0011E2  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  2912  0011E6  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  2913  0011EA  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  2914  0011EE                     l2112:
  2915                           
  2916                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2917  0011EE  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  2918  0011F0  EF02  F009         	goto	u1351
  2919  0011F4  503F               	movf	(dtoa@i+1)^0,w,c
  2920  0011F6  E108               	bnz	u1350
  2921  0011F8  043E               	decf	dtoa@i^0,w,c
  2922  0011FA  A0D8               	btfss	status,0,c
  2923  0011FC  EF02  F009         	goto	u1351
  2924  001200  EF04  F009         	goto	u1350
  2925  001204                     u1351:
  2926  001204  EF35  F009         	goto	l2122
  2927  001208                     u1350:
  2928  001208  5036               	movf	dtoa@n^0,w,c
  2929  00120A  1037               	iorwf	(dtoa@n+1)^0,w,c
  2930  00120C  1038               	iorwf	(dtoa@n+2)^0,w,c
  2931  00120E  1039               	iorwf	(dtoa@n+3)^0,w,c
  2932  001210  103A               	iorwf	(dtoa@n+4)^0,w,c
  2933  001212  103B               	iorwf	(dtoa@n+5)^0,w,c
  2934  001214  103C               	iorwf	(dtoa@n+6)^0,w,c
  2935  001216  103D               	iorwf	(dtoa@n+7)^0,w,c
  2936  001218  A4D8               	btfss	status,2,c
  2937  00121A  EF11  F009         	goto	u1361
  2938  00121E  EF13  F009         	goto	u1360
  2939  001222                     u1361:
  2940  001222  EF7B  F008         	goto	l2102
  2941  001226                     u1360:
  2942  001226  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2943  001228  EF20  F009         	goto	u1370
  2944  00122C  5031               	movf	(dtoa@p+1)^0,w,c
  2945  00122E  E106               	bnz	u1371
  2946  001230  0430               	decf	dtoa@p^0,w,c
  2947  001232  B0D8               	btfsc	status,0,c
  2948  001234  EF1E  F009         	goto	u1371
  2949  001238  EF20  F009         	goto	u1370
  2950  00123C                     u1371:
  2951  00123C  EF7B  F008         	goto	l2102
  2952  001240                     u1370:
  2953  001240  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2954  001242  EF2B  F009         	goto	u1381
  2955  001246  5033               	movf	(dtoa@w+1)^0,w,c
  2956  001248  E108               	bnz	u1380
  2957  00124A  0432               	decf	dtoa@w^0,w,c
  2958  00124C  A0D8               	btfss	status,0,c
  2959  00124E  EF2B  F009         	goto	u1381
  2960  001252  EF2D  F009         	goto	u1380
  2961  001256                     u1381:
  2962  001256  EF35  F009         	goto	l2122
  2963  00125A                     u1380:
  2964  00125A  0100               	movlb	0	; () banked
  2965  00125C  B38F               	btfsc	_flags& (0+255),1,b
  2966  00125E  EF33  F009         	goto	u1391
  2967  001262  EF35  F009         	goto	u1390
  2968  001266                     u1391:
  2969  001266  EF7B  F008         	goto	l2102
  2970  00126A                     u1390:
  2971  00126A                     l2122:
  2972                           
  2973                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2974  00126A  5034               	movf	dtoa@s^0,w,c
  2975  00126C  1035               	iorwf	(dtoa@s+1)^0,w,c
  2976  00126E  A4D8               	btfss	status,2,c
  2977  001270  EF3C  F009         	goto	u1401
  2978  001274  EF3E  F009         	goto	u1400
  2979  001278                     u1401:
  2980  001278  EF46  F009         	goto	l2126
  2981  00127C                     u1400:
  2982  00127C  0100               	movlb	0	; () banked
  2983  00127E  A58F               	btfss	_flags& (0+255),2,b
  2984  001280  EF44  F009         	goto	u1411
  2985  001284  EF46  F009         	goto	u1410
  2986  001288                     u1411:
  2987  001288  EF64  F009         	goto	l2136
  2988  00128C                     u1410:
  2989  00128C                     l2126:
  2990                           
  2991                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  2992  00128C  063E               	decf	dtoa@i^0,f,c
  2993  00128E  A0D8               	btfss	status,0,c
  2994  001290  063F               	decf	(dtoa@i+1)^0,f,c
  2995  001292                     
  2996                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2997  001292  5034               	movf	dtoa@s^0,w,c
  2998  001294  1035               	iorwf	(dtoa@s+1)^0,w,c
  2999  001296  A4D8               	btfss	status,2,c
  3000  001298  EF50  F009         	goto	u1421
  3001  00129C  EF52  F009         	goto	u1420
  3002  0012A0                     u1421:
  3003  0012A0  EF58  F009         	goto	l2132
  3004  0012A4                     u1420:
  3005  0012A4  0E00               	movlw	0
  3006  0012A6  6E2F               	movwf	(_dtoa$1071+1)^0,c
  3007  0012A8  0E2B               	movlw	43
  3008  0012AA  6E2E               	movwf	_dtoa$1071^0,c
  3009  0012AC  EF5C  F009         	goto	l2134
  3010  0012B0                     l2132:
  3011  0012B0  0E00               	movlw	0
  3012  0012B2  6E2F               	movwf	(_dtoa$1071+1)^0,c
  3013  0012B4  0E2D               	movlw	45
  3014  0012B6  6E2E               	movwf	_dtoa$1071^0,c
  3015  0012B8                     l2134:
  3016  0012B8  0E91               	movlw	low _dbuf
  3017  0012BA  243E               	addwf	dtoa@i^0,w,c
  3018  0012BC  6ED9               	movwf	fsr2l,c
  3019  0012BE  0E00               	movlw	high _dbuf
  3020  0012C0  203F               	addwfc	(dtoa@i+1)^0,w,c
  3021  0012C2  6EDA               	movwf	fsr2h,c
  3022  0012C4  C02E  FFDF         	movff	_dtoa$1071,indf2
  3023  0012C8                     l2136:
  3024                           
  3025                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3026  0012C8  C01C  F011         	movff	dtoa@fp,pad@fp
  3027  0012CC  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  3028  0012D0  0E91               	movlw	low _dbuf
  3029  0012D2  243E               	addwf	dtoa@i^0,w,c
  3030  0012D4  6E13               	movwf	pad@buf^0,c
  3031  0012D6  0E00               	movlw	high _dbuf
  3032  0012D8  203F               	addwfc	(dtoa@i+1)^0,w,c
  3033  0012DA  6E14               	movwf	(pad@buf+1)^0,c
  3034  0012DC  C032  F015         	movff	dtoa@w,pad@p
  3035  0012E0  C033  F016         	movff	dtoa@w+1,pad@p+1
  3036  0012E4  EC80  F00E         	call	_pad	;wreg free
  3037  0012E8  C011  F01C         	movff	?_pad,?_dtoa
  3038  0012EC  C012  F01D         	movff	?_pad+1,?_dtoa+1
  3039  0012F0  0012               	return		;funcret
  3040  0012F2                     __end_of_dtoa:
  3041                           	callstack 0
  3042                           
  3043 ;; *************** function _pad *****************
  3044 ;; Defined at:
  3045 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3048 ;;		 -> sprintf@f(6), 
  3049 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3050 ;;		 -> dbuf(32), 
  3051 ;;  p               2   20[COMRAM] int 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  w               2   25[COMRAM] int 
  3054 ;;  i               2   23[COMRAM] int 
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  2   16[COMRAM] int 
  3057 ;; Registers used:
  3058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3064 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3065 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;Total ram usage:       11 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    3
  3071 ;; This function calls:
  3072 ;;		_fputc
  3073 ;;		_fputs
  3074 ;;		_strlen
  3075 ;; This function is called by:
  3076 ;;		_dtoa
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text16
  3081  001D00                     __ptext16:
  3082                           	callstack 0
  3083  001D00                     _pad:
  3084                           	callstack 22
  3085  001D00                     
  3086                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3087  001D00  0100               	movlb	0	; () banked
  3088  001D02  A18F               	btfss	_flags& (0+255),0,b
  3089  001D04  EF86  F00E         	goto	u1201
  3090  001D08  EF88  F00E         	goto	u1200
  3091  001D0C                     u1201:
  3092  001D0C  EF92  F00E         	goto	l2032
  3093  001D10                     u1200:
  3094  001D10                     
  3095                           ; BSR set to: 0
  3096                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3097  001D10  C013  F00A         	movff	pad@buf,fputs@s
  3098  001D14  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3099  001D18  C011  F00C         	movff	pad@fp,fputs@fp
  3100  001D1C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3101  001D20  ECA2  F010         	call	_fputs	;wreg free
  3102  001D24                     l2032:
  3103                           
  3104                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3105  001D24  BE16               	btfsc	(pad@p+1)^0,7,c
  3106  001D26  EF97  F00E         	goto	u1211
  3107  001D2A  EF99  F00E         	goto	u1210
  3108  001D2E                     u1211:
  3109  001D2E  EF9F  F00E         	goto	l2036
  3110  001D32                     u1210:
  3111  001D32  C015  F01A         	movff	pad@p,pad@w
  3112  001D36  C016  F01B         	movff	pad@p+1,pad@w+1
  3113  001D3A  EFA3  F00E         	goto	l1009
  3114  001D3E                     l2036:
  3115  001D3E  0E00               	movlw	0
  3116  001D40  6E1B               	movwf	(pad@w+1)^0,c
  3117  001D42  0E00               	movlw	0
  3118  001D44  6E1A               	movwf	pad@w^0,c
  3119  001D46                     l1009:
  3120                           
  3121                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3122  001D46  0E00               	movlw	0
  3123  001D48  6E19               	movwf	(pad@i+1)^0,c
  3124  001D4A  0E00               	movlw	0
  3125  001D4C  6E18               	movwf	pad@i^0,c
  3126                           
  3127                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3128  001D4E  EFB5  F00E         	goto	l2042
  3129  001D52                     l2038:
  3130                           
  3131                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3132  001D52  0E00               	movlw	0
  3133  001D54  6E02               	movwf	(fputc@c+1)^0,c
  3134  001D56  0E20               	movlw	32
  3135  001D58  6E01               	movwf	fputc@c^0,c
  3136  001D5A  C011  F003         	movff	pad@fp,fputc@fp
  3137  001D5E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3138  001D62  ECB7  F00D         	call	_fputc	;wreg free
  3139  001D66                     
  3140                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3141  001D66  4A18               	infsnz	pad@i^0,f,c
  3142  001D68  2A19               	incf	(pad@i+1)^0,f,c
  3143  001D6A                     l2042:
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3146  001D6A  501A               	movf	pad@w^0,w,c
  3147  001D6C  5C18               	subwf	pad@i^0,w,c
  3148  001D6E  5019               	movf	(pad@i+1)^0,w,c
  3149  001D70  0A80               	xorlw	128
  3150  001D72  6E17               	movwf	??_pad^0,c
  3151  001D74  501B               	movf	(pad@w+1)^0,w,c
  3152  001D76  0A80               	xorlw	128
  3153  001D78  5817               	subwfb	??_pad^0,w,c
  3154  001D7A  A0D8               	btfss	status,0,c
  3155  001D7C  EFC2  F00E         	goto	u1221
  3156  001D80  EFC4  F00E         	goto	u1220
  3157  001D84                     u1221:
  3158  001D84  EFA9  F00E         	goto	l2038
  3159  001D88                     u1220:
  3160  001D88                     
  3161                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3162  001D88  0100               	movlb	0	; () banked
  3163  001D8A  B18F               	btfsc	_flags& (0+255),0,b
  3164  001D8C  EFCA  F00E         	goto	u1231
  3165  001D90  EFCC  F00E         	goto	u1230
  3166  001D94                     u1231:
  3167  001D94  EFD6  F00E         	goto	l2046
  3168  001D98                     u1230:
  3169  001D98                     
  3170                           ; BSR set to: 0
  3171                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3172  001D98  C013  F00A         	movff	pad@buf,fputs@s
  3173  001D9C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3174  001DA0  C011  F00C         	movff	pad@fp,fputs@fp
  3175  001DA4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3176  001DA8  ECA2  F010         	call	_fputs	;wreg free
  3177  001DAC                     l2046:
  3178                           
  3179                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3180  001DAC  C013  F001         	movff	pad@buf,strlen@s
  3181  001DB0  C014  F002         	movff	pad@buf+1,strlen@s+1
  3182  001DB4  EC1D  F011         	call	_strlen	;wreg free
  3183  001DB8  501A               	movf	pad@w^0,w,c
  3184  001DBA  2401               	addwf	?_strlen^0,w,c
  3185  001DBC  6E11               	movwf	?_pad^0,c
  3186  001DBE  501B               	movf	(pad@w+1)^0,w,c
  3187  001DC0  2002               	addwfc	(?_strlen+1)^0,w,c
  3188  001DC2  6E12               	movwf	(?_pad+1)^0,c
  3189  001DC4  0012               	return		;funcret
  3190  001DC6                     __end_of_pad:
  3191                           	callstack 0
  3192                           
  3193 ;; *************** function _strlen *****************
  3194 ;; Defined at:
  3195 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3198 ;;		 -> dbuf(32), 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3201 ;;		 -> dbuf(32), 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  2    0[COMRAM] unsigned int 
  3204 ;; Registers used:
  3205 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3211 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;Total ram usage:        4 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_pad
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text17
  3225  00223A                     __ptext17:
  3226                           	callstack 0
  3227  00223A                     _strlen:
  3228                           	callstack 24
  3229  00223A  C001  F003         	movff	strlen@s,strlen@a
  3230  00223E  C002  F004         	movff	strlen@s+1,strlen@a+1
  3231  002242  EF25  F011         	goto	l1942
  3232  002246                     l1940:
  3233  002246  4A01               	infsnz	strlen@s^0,f,c
  3234  002248  2A02               	incf	(strlen@s+1)^0,f,c
  3235  00224A                     l1942:
  3236  00224A  C001  FFD9         	movff	strlen@s,fsr2l
  3237  00224E  C002  FFDA         	movff	strlen@s+1,fsr2h
  3238  002252  50DF               	movf	indf2,w,c
  3239  002254  A4D8               	btfss	status,2,c
  3240  002256  EF2F  F011         	goto	u1061
  3241  00225A  EF31  F011         	goto	u1060
  3242  00225E                     u1061:
  3243  00225E  EF23  F011         	goto	l1940
  3244  002262                     u1060:
  3245  002262  5003               	movf	strlen@a^0,w,c
  3246  002264  5C01               	subwf	strlen@s^0,w,c
  3247  002266  6E01               	movwf	?_strlen^0,c
  3248  002268  5004               	movf	(strlen@a+1)^0,w,c
  3249  00226A  5802               	subwfb	(strlen@s+1)^0,w,c
  3250  00226C  6E02               	movwf	(?_strlen+1)^0,c
  3251  00226E  0012               	return		;funcret
  3252  002270                     __end_of_strlen:
  3253                           	callstack 0
  3254                           
  3255 ;; *************** function _fputs *****************
  3256 ;; Defined at:
  3257 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3260 ;;		 -> dbuf(32), 
  3261 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3262 ;;		 -> sprintf@f(6), 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  i               2   14[COMRAM] int 
  3265 ;;  c               1   13[COMRAM] unsigned char 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  2    9[COMRAM] int 
  3268 ;; Registers used:
  3269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3275 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;Total ram usage:        7 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    2
  3282 ;; This function calls:
  3283 ;;		_fputc
  3284 ;; This function is called by:
  3285 ;;		_pad
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           	psect	text18
  3290  002144                     __ptext18:
  3291                           	callstack 0
  3292  002144                     _fputs:
  3293                           	callstack 22
  3294  002144  0E00               	movlw	0
  3295  002146  6E10               	movwf	(fputs@i+1)^0,c
  3296  002148  0E00               	movlw	0
  3297  00214A  6E0F               	movwf	fputs@i^0,c
  3298  00214C  EFB3  F010         	goto	l1936
  3299  002150                     l1932:
  3300  002150  C00E  F001         	movff	fputs@c,fputc@c
  3301  002154  6A02               	clrf	(fputc@c+1)^0,c
  3302  002156  C00C  F003         	movff	fputs@fp,fputc@fp
  3303  00215A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3304  00215E  ECB7  F00D         	call	_fputc	;wreg free
  3305  002162  4A0F               	infsnz	fputs@i^0,f,c
  3306  002164  2A10               	incf	(fputs@i+1)^0,f,c
  3307  002166                     l1936:
  3308  002166  500F               	movf	fputs@i^0,w,c
  3309  002168  240A               	addwf	fputs@s^0,w,c
  3310  00216A  6ED9               	movwf	fsr2l,c
  3311  00216C  5010               	movf	(fputs@i+1)^0,w,c
  3312  00216E  200B               	addwfc	(fputs@s+1)^0,w,c
  3313  002170  6EDA               	movwf	fsr2h,c
  3314  002172  50DF               	movf	indf2,w,c
  3315  002174  6E0E               	movwf	fputs@c^0,c
  3316  002176  500E               	movf	fputs@c^0,w,c
  3317  002178  A4D8               	btfss	status,2,c
  3318  00217A  EFC1  F010         	goto	u1051
  3319  00217E  EFC3  F010         	goto	u1050
  3320  002182                     u1051:
  3321  002182  EFA8  F010         	goto	l1932
  3322  002186                     u1050:
  3323  002186  0012               	return		;funcret
  3324  002188                     __end_of_fputs:
  3325                           	callstack 0
  3326                           
  3327 ;; *************** function _fputc *****************
  3328 ;; Defined at:
  3329 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;  c               2    0[COMRAM] int 
  3332 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3333 ;;		 -> sprintf@f(6), 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  2    0[COMRAM] int 
  3338 ;; Registers used:
  3339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3347 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;Total ram usage:        9 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; Hardware stack levels required when called:    1
  3352 ;; This function calls:
  3353 ;;		_putch
  3354 ;; This function is called by:
  3355 ;;		_pad
  3356 ;;		_vfpfcnvrt
  3357 ;;		_fputs
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text19
  3362  001B6E                     __ptext19:
  3363                           	callstack 0
  3364  001B6E                     _fputc:
  3365                           	callstack 25
  3366  001B6E  5003               	movf	fputc@fp^0,w,c
  3367  001B70  1004               	iorwf	(fputc@fp+1)^0,w,c
  3368  001B72  B4D8               	btfsc	status,2,c
  3369  001B74  EFBE  F00D         	goto	u1011
  3370  001B78  EFC0  F00D         	goto	u1010
  3371  001B7C                     u1011:
  3372  001B7C  EFC9  F00D         	goto	l1920
  3373  001B80                     u1010:
  3374  001B80  5003               	movf	fputc@fp^0,w,c
  3375  001B82  1004               	iorwf	(fputc@fp+1)^0,w,c
  3376  001B84  A4D8               	btfss	status,2,c
  3377  001B86  EFC7  F00D         	goto	u1021
  3378  001B8A  EFC9  F00D         	goto	u1020
  3379  001B8E                     u1021:
  3380  001B8E  EFCE  F00D         	goto	l1922
  3381  001B92                     u1020:
  3382  001B92                     l1920:
  3383  001B92  5001               	movf	fputc@c^0,w,c
  3384  001B94  EC59  F011         	call	_putch
  3385  001B98  EF1B  F00E         	goto	l1073
  3386  001B9C                     l1922:
  3387  001B9C  EE20 F004          	lfsr	2,4
  3388  001BA0  5003               	movf	fputc@fp^0,w,c
  3389  001BA2  26D9               	addwf	fsr2l,f,c
  3390  001BA4  5004               	movf	(fputc@fp+1)^0,w,c
  3391  001BA6  22DA               	addwfc	fsr2h,f,c
  3392  001BA8  50DE               	movf	postinc2,w,c
  3393  001BAA  10DE               	iorwf	postinc2,w,c
  3394  001BAC  B4D8               	btfsc	status,2,c
  3395  001BAE  EFDB  F00D         	goto	u1031
  3396  001BB2  EFDD  F00D         	goto	u1030
  3397  001BB6                     u1031:
  3398  001BB6  EFF8  F00D         	goto	l1926
  3399  001BBA                     u1030:
  3400  001BBA  EE20 F004          	lfsr	2,4
  3401  001BBE  5003               	movf	fputc@fp^0,w,c
  3402  001BC0  26D9               	addwf	fsr2l,f,c
  3403  001BC2  5004               	movf	(fputc@fp+1)^0,w,c
  3404  001BC4  22DA               	addwfc	fsr2h,f,c
  3405  001BC6  EE10 F002          	lfsr	1,2
  3406  001BCA  5003               	movf	fputc@fp^0,w,c
  3407  001BCC  26E1               	addwf	fsr1l,f,c
  3408  001BCE  5004               	movf	(fputc@fp+1)^0,w,c
  3409  001BD0  22E2               	addwfc	fsr1h,f,c
  3410  001BD2  50DE               	movf	postinc2,w,c
  3411  001BD4  5CE6               	subwf	postinc1,w,c
  3412  001BD6  50E6               	movf	postinc1,w,c
  3413  001BD8  0A80               	xorlw	128
  3414  001BDA  6E09               	movwf	(??_fputc+4)^0,c
  3415  001BDC  50DE               	movf	postinc2,w,c
  3416  001BDE  0A80               	xorlw	128
  3417  001BE0  5809               	subwfb	(??_fputc+4)^0,w,c
  3418  001BE2  B0D8               	btfsc	status,0,c
  3419  001BE4  EFF6  F00D         	goto	u1041
  3420  001BE8  EFF8  F00D         	goto	u1040
  3421  001BEC                     u1041:
  3422  001BEC  EF1B  F00E         	goto	l1073
  3423  001BF0                     u1040:
  3424  001BF0                     l1926:
  3425  001BF0  EE20 F002          	lfsr	2,2
  3426  001BF4  5003               	movf	fputc@fp^0,w,c
  3427  001BF6  26D9               	addwf	fsr2l,f,c
  3428  001BF8  5004               	movf	(fputc@fp+1)^0,w,c
  3429  001BFA  22DA               	addwfc	fsr2h,f,c
  3430  001BFC  CFDE F005          	movff	postinc2,??_fputc
  3431  001C00  CFDD F006          	movff	postdec2,??_fputc+1
  3432  001C04  C003  FFD9         	movff	fputc@fp,fsr2l
  3433  001C08  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3434  001C0C  CFDE F007          	movff	postinc2,??_fputc+2
  3435  001C10  CFDD F008          	movff	postdec2,??_fputc+3
  3436  001C14  5005               	movf	??_fputc^0,w,c
  3437  001C16  2407               	addwf	(??_fputc+2)^0,w,c
  3438  001C18  6ED9               	movwf	fsr2l,c
  3439  001C1A  5006               	movf	(??_fputc+1)^0,w,c
  3440  001C1C  2008               	addwfc	(??_fputc+3)^0,w,c
  3441  001C1E  6EDA               	movwf	fsr2h,c
  3442  001C20  C001  FFDF         	movff	fputc@c,indf2
  3443  001C24  EE20 F002          	lfsr	2,2
  3444  001C28  5003               	movf	fputc@fp^0,w,c
  3445  001C2A  26D9               	addwf	fsr2l,f,c
  3446  001C2C  5004               	movf	(fputc@fp+1)^0,w,c
  3447  001C2E  22DA               	addwfc	fsr2h,f,c
  3448  001C30  2ADE               	incf	postinc2,f,c
  3449  001C32  0E00               	movlw	0
  3450  001C34  22DD               	addwfc	postdec2,f,c
  3451  001C36                     l1073:
  3452  001C36  0012               	return		;funcret
  3453  001C38                     __end_of_fputc:
  3454                           	callstack 0
  3455                           
  3456 ;; *************** function _putch *****************
  3457 ;; Defined at:
  3458 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\putch.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;  c               1    wreg     unsigned char 
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;  c               1    0[COMRAM] unsigned char 
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      void 
  3465 ;; Registers used:
  3466 ;;		wreg
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;Total ram usage:        0 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; This function calls:
  3479 ;;		Nothing
  3480 ;; This function is called by:
  3481 ;;		_fputc
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485                           	psect	text20
  3486  0022B2                     __ptext20:
  3487                           	callstack 0
  3488  0022B2                     _putch:
  3489                           	callstack 25
  3490  0022B2  0012               	return		;funcret
  3491  0022B4                     __end_of_putch:
  3492                           	callstack 0
  3493                           
  3494 ;; *************** function _abs *****************
  3495 ;; Defined at:
  3496 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  a               2   18[COMRAM] int 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  2   18[COMRAM] int 
  3503 ;; Registers used:
  3504 ;;		wreg, status,2, status,0
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3510 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3512 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3513 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3514 ;;Total ram usage:        4 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_dtoa
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           	psect	text21
  3524  002188                     __ptext21:
  3525                           	callstack 0
  3526  002188                     _abs:
  3527                           	callstack 25
  3528  002188  BE14               	btfsc	(abs@a+1)^0,7,c
  3529  00218A  EFD1  F010         	goto	u1240
  3530  00218E  5014               	movf	(abs@a+1)^0,w,c
  3531  002190  E106               	bnz	u1241
  3532  002192  0413               	decf	abs@a^0,w,c
  3533  002194  B0D8               	btfsc	status,0,c
  3534  002196  EFCF  F010         	goto	u1241
  3535  00219A  EFD1  F010         	goto	u1240
  3536  00219E                     u1241:
  3537  00219E  EFDF  F010         	goto	l1058
  3538  0021A2                     u1240:
  3539  0021A2  C013  F015         	movff	abs@a,??_abs
  3540  0021A6  C014  F016         	movff	abs@a+1,??_abs+1
  3541  0021AA  1E15               	comf	??_abs^0,f,c
  3542  0021AC  1E16               	comf	(??_abs+1)^0,f,c
  3543  0021AE  4A15               	infsnz	??_abs^0,f,c
  3544  0021B0  2A16               	incf	(??_abs+1)^0,f,c
  3545  0021B2  C015  F013         	movff	??_abs,?_abs
  3546  0021B6  C016  F014         	movff	??_abs+1,?_abs+1
  3547  0021BA  EFE3  F010         	goto	l1061
  3548  0021BE                     l1058:
  3549  0021BE  C013  F013         	movff	abs@a,?_abs
  3550  0021C2  C014  F014         	movff	abs@a+1,?_abs+1
  3551  0021C6                     l1061:
  3552  0021C6  0012               	return		;funcret
  3553  0021C8                     __end_of_abs:
  3554                           	callstack 0
  3555                           
  3556 ;; *************** function ___aomod *****************
  3557 ;; Defined at:
  3558 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  dividend        8    0[COMRAM] long long 
  3561 ;;  divisor         8    8[COMRAM] long long 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  sign            1   17[COMRAM] unsigned char 
  3564 ;;  counter         1   16[COMRAM] unsigned char 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  8    0[COMRAM] long long 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, status,0
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3574 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;Total ram usage:       18 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		_dtoa
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           	psect	text22
  3588  00193E                     __ptext22:
  3589                           	callstack 0
  3590  00193E                     ___aomod:
  3591                           	callstack 25
  3592  00193E  0E00               	movlw	0
  3593  001940  6E12               	movwf	___aomod@sign^0,c
  3594  001942  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3595  001944  EFA8  F00C         	goto	u1140
  3596  001948  EFA6  F00C         	goto	u1141
  3597  00194C                     u1141:
  3598  00194C  EFBA  F00C         	goto	l2000
  3599  001950                     u1140:
  3600  001950  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3601  001952  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3602  001954  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3603  001956  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3604  001958  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3605  00195A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3606  00195C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3607  00195E  6C01               	negf	___aomod@dividend^0,c
  3608  001960  0E00               	movlw	0
  3609  001962  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3610  001964  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3611  001966  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3612  001968  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3613  00196A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3614  00196C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3615  00196E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3616  001970  0E01               	movlw	1
  3617  001972  6E12               	movwf	___aomod@sign^0,c
  3618  001974                     l2000:
  3619  001974  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3620  001976  EFC1  F00C         	goto	u1150
  3621  00197A  EFBF  F00C         	goto	u1151
  3622  00197E                     u1151:
  3623  00197E  EFD1  F00C         	goto	l2004
  3624  001982                     u1150:
  3625  001982  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3626  001984  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3627  001986  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3628  001988  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3629  00198A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3630  00198C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3631  00198E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3632  001990  6C09               	negf	___aomod@divisor^0,c
  3633  001992  0E00               	movlw	0
  3634  001994  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3635  001996  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3636  001998  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3637  00199A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3638  00199C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3639  00199E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3640  0019A0  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3641  0019A2                     l2004:
  3642  0019A2  5009               	movf	___aomod@divisor^0,w,c
  3643  0019A4  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3644  0019A6  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3645  0019A8  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3646  0019AA  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3647  0019AC  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3648  0019AE  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3649  0019B0  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3650  0019B2  B4D8               	btfsc	status,2,c
  3651  0019B4  EFDE  F00C         	goto	u1161
  3652  0019B8  EFE0  F00C         	goto	u1160
  3653  0019BC                     u1161:
  3654  0019BC  EF28  F00D         	goto	l2020
  3655  0019C0                     u1160:
  3656  0019C0  0E01               	movlw	1
  3657  0019C2  6E11               	movwf	___aomod@counter^0,c
  3658  0019C4  EFEE  F00C         	goto	l2010
  3659  0019C8                     l2008:
  3660  0019C8  90D8               	bcf	status,0,c
  3661  0019CA  3609               	rlcf	___aomod@divisor^0,f,c
  3662  0019CC  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3663  0019CE  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3664  0019D0  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3665  0019D2  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3666  0019D4  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3667  0019D6  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3668  0019D8  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3669  0019DA  2A11               	incf	___aomod@counter^0,f,c
  3670  0019DC                     l2010:
  3671  0019DC  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3672  0019DE  EFF3  F00C         	goto	u1171
  3673  0019E2  EFF5  F00C         	goto	u1170
  3674  0019E6                     u1171:
  3675  0019E6  EFE4  F00C         	goto	l2008
  3676  0019EA                     u1170:
  3677  0019EA                     l2012:
  3678  0019EA  5009               	movf	___aomod@divisor^0,w,c
  3679  0019EC  5C01               	subwf	___aomod@dividend^0,w,c
  3680  0019EE  500A               	movf	(___aomod@divisor+1)^0,w,c
  3681  0019F0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3682  0019F2  500B               	movf	(___aomod@divisor+2)^0,w,c
  3683  0019F4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3684  0019F6  500C               	movf	(___aomod@divisor+3)^0,w,c
  3685  0019F8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3686  0019FA  500D               	movf	(___aomod@divisor+4)^0,w,c
  3687  0019FC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3688  0019FE  500E               	movf	(___aomod@divisor+5)^0,w,c
  3689  001A00  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3690  001A02  500F               	movf	(___aomod@divisor+6)^0,w,c
  3691  001A04  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3692  001A06  5010               	movf	(___aomod@divisor+7)^0,w,c
  3693  001A08  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3694  001A0A  A0D8               	btfss	status,0,c
  3695  001A0C  EF0A  F00D         	goto	u1181
  3696  001A10  EF0C  F00D         	goto	u1180
  3697  001A14                     u1181:
  3698  001A14  EF1C  F00D         	goto	l2016
  3699  001A18                     u1180:
  3700  001A18  5009               	movf	___aomod@divisor^0,w,c
  3701  001A1A  5E01               	subwf	___aomod@dividend^0,f,c
  3702  001A1C  500A               	movf	(___aomod@divisor+1)^0,w,c
  3703  001A1E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3704  001A20  500B               	movf	(___aomod@divisor+2)^0,w,c
  3705  001A22  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3706  001A24  500C               	movf	(___aomod@divisor+3)^0,w,c
  3707  001A26  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3708  001A28  500D               	movf	(___aomod@divisor+4)^0,w,c
  3709  001A2A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3710  001A2C  500E               	movf	(___aomod@divisor+5)^0,w,c
  3711  001A2E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3712  001A30  500F               	movf	(___aomod@divisor+6)^0,w,c
  3713  001A32  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3714  001A34  5010               	movf	(___aomod@divisor+7)^0,w,c
  3715  001A36  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3716  001A38                     l2016:
  3717  001A38  90D8               	bcf	status,0,c
  3718  001A3A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3719  001A3C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3720  001A3E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3721  001A40  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3722  001A42  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3723  001A44  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3724  001A46  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3725  001A48  3209               	rrcf	___aomod@divisor^0,f,c
  3726  001A4A  2E11               	decfsz	___aomod@counter^0,f,c
  3727  001A4C  EFF5  F00C         	goto	l2012
  3728  001A50                     l2020:
  3729  001A50  5012               	movf	___aomod@sign^0,w,c
  3730  001A52  B4D8               	btfsc	status,2,c
  3731  001A54  EF2E  F00D         	goto	u1191
  3732  001A58  EF30  F00D         	goto	u1190
  3733  001A5C                     u1191:
  3734  001A5C  EF40  F00D         	goto	l2024
  3735  001A60                     u1190:
  3736  001A60  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3737  001A62  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3738  001A64  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3739  001A66  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3740  001A68  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3741  001A6A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3742  001A6C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3743  001A6E  6C01               	negf	___aomod@dividend^0,c
  3744  001A70  0E00               	movlw	0
  3745  001A72  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3746  001A74  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3747  001A76  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3748  001A78  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3749  001A7A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3750  001A7C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3751  001A7E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3752  001A80                     l2024:
  3753  001A80  C001  F001         	movff	___aomod@dividend,?___aomod
  3754  001A84  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3755  001A88  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3756  001A8C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3757  001A90  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3758  001A94  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3759  001A98  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3760  001A9C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3761  001AA0  0012               	return		;funcret
  3762  001AA2                     __end_of___aomod:
  3763                           	callstack 0
  3764                           
  3765 ;; *************** function ___aodiv *****************
  3766 ;; Defined at:
  3767 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;  dividend        8    0[COMRAM] long long 
  3770 ;;  divisor         8    8[COMRAM] long long 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  quotient        8   18[COMRAM] long long 
  3773 ;;  sign            1   17[COMRAM] unsigned char 
  3774 ;;  counter         1   16[COMRAM] unsigned char 
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  8    0[COMRAM] long long 
  3777 ;; Registers used:
  3778 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3784 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3788 ;;Total ram usage:       26 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; This function calls:
  3791 ;;		Nothing
  3792 ;; This function is called by:
  3793 ;;		_dtoa
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text23
  3798  001636                     __ptext23:
  3799                           	callstack 0
  3800  001636                     ___aodiv:
  3801                           	callstack 25
  3802  001636  0E00               	movlw	0
  3803  001638  6E12               	movwf	___aodiv@sign^0,c
  3804  00163A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3805  00163C  EF24  F00B         	goto	u1070
  3806  001640  EF22  F00B         	goto	u1071
  3807  001644                     u1071:
  3808  001644  EF36  F00B         	goto	l1956
  3809  001648                     u1070:
  3810  001648  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3811  00164A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3812  00164C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3813  00164E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3814  001650  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3815  001652  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3816  001654  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3817  001656  6C09               	negf	___aodiv@divisor^0,c
  3818  001658  0E00               	movlw	0
  3819  00165A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3820  00165C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3821  00165E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3822  001660  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3823  001662  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3824  001664  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3825  001666  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3826  001668  0E01               	movlw	1
  3827  00166A  6E12               	movwf	___aodiv@sign^0,c
  3828  00166C                     l1956:
  3829  00166C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3830  00166E  EF3D  F00B         	goto	u1080
  3831  001672  EF3B  F00B         	goto	u1081
  3832  001676                     u1081:
  3833  001676  EF4F  F00B         	goto	l1962
  3834  00167A                     u1080:
  3835  00167A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3836  00167C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3837  00167E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3838  001680  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3839  001682  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3840  001684  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3841  001686  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3842  001688  6C01               	negf	___aodiv@dividend^0,c
  3843  00168A  0E00               	movlw	0
  3844  00168C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3845  00168E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3846  001690  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3847  001692  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3848  001694  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3849  001696  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3850  001698  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3851  00169A  0E01               	movlw	1
  3852  00169C  1A12               	xorwf	___aodiv@sign^0,f,c
  3853  00169E                     l1962:
  3854  00169E  EE20  F013         	lfsr	2,___aodiv@quotient
  3855  0016A2  0E07               	movlw	7
  3856  0016A4                     u1091:
  3857  0016A4  6ADE               	clrf	postinc2,c
  3858  0016A6  06E8               	decf	wreg,f,c
  3859  0016A8  E2FD               	bc	u1091
  3860  0016AA  5009               	movf	___aodiv@divisor^0,w,c
  3861  0016AC  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3862  0016AE  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3863  0016B0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3864  0016B2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3865  0016B4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3866  0016B6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3867  0016B8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3868  0016BA  B4D8               	btfsc	status,2,c
  3869  0016BC  EF62  F00B         	goto	u1101
  3870  0016C0  EF64  F00B         	goto	u1100
  3871  0016C4                     u1101:
  3872  0016C4  EFB6  F00B         	goto	l1984
  3873  0016C8                     u1100:
  3874  0016C8  0E01               	movlw	1
  3875  0016CA  6E11               	movwf	___aodiv@counter^0,c
  3876  0016CC  EF72  F00B         	goto	l1970
  3877  0016D0                     l1968:
  3878  0016D0  90D8               	bcf	status,0,c
  3879  0016D2  3609               	rlcf	___aodiv@divisor^0,f,c
  3880  0016D4  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3881  0016D6  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3882  0016D8  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3883  0016DA  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3884  0016DC  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3885  0016DE  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3886  0016E0  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3887  0016E2  2A11               	incf	___aodiv@counter^0,f,c
  3888  0016E4                     l1970:
  3889  0016E4  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3890  0016E6  EF77  F00B         	goto	u1111
  3891  0016EA  EF79  F00B         	goto	u1110
  3892  0016EE                     u1111:
  3893  0016EE  EF68  F00B         	goto	l1968
  3894  0016F2                     u1110:
  3895  0016F2                     l1972:
  3896  0016F2  90D8               	bcf	status,0,c
  3897  0016F4  3613               	rlcf	___aodiv@quotient^0,f,c
  3898  0016F6  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3899  0016F8  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3900  0016FA  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3901  0016FC  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3902  0016FE  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3903  001700  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3904  001702  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3905  001704  5009               	movf	___aodiv@divisor^0,w,c
  3906  001706  5C01               	subwf	___aodiv@dividend^0,w,c
  3907  001708  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3908  00170A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3909  00170C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3910  00170E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3911  001710  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3912  001712  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3913  001714  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3914  001716  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3915  001718  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3916  00171A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3917  00171C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3918  00171E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3919  001720  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3920  001722  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3921  001724  A0D8               	btfss	status,0,c
  3922  001726  EF97  F00B         	goto	u1121
  3923  00172A  EF99  F00B         	goto	u1120
  3924  00172E                     u1121:
  3925  00172E  EFAA  F00B         	goto	l1980
  3926  001732                     u1120:
  3927  001732  5009               	movf	___aodiv@divisor^0,w,c
  3928  001734  5E01               	subwf	___aodiv@dividend^0,f,c
  3929  001736  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3930  001738  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3931  00173A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3932  00173C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3933  00173E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3934  001740  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3935  001742  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3936  001744  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3937  001746  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3938  001748  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3939  00174A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3940  00174C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3941  00174E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3942  001750  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3943  001752  8013               	bsf	___aodiv@quotient^0,0,c
  3944  001754                     l1980:
  3945  001754  90D8               	bcf	status,0,c
  3946  001756  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3947  001758  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3948  00175A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3949  00175C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3950  00175E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3951  001760  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3952  001762  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3953  001764  3209               	rrcf	___aodiv@divisor^0,f,c
  3954  001766  2E11               	decfsz	___aodiv@counter^0,f,c
  3955  001768  EF79  F00B         	goto	l1972
  3956  00176C                     l1984:
  3957  00176C  5012               	movf	___aodiv@sign^0,w,c
  3958  00176E  B4D8               	btfsc	status,2,c
  3959  001770  EFBC  F00B         	goto	u1131
  3960  001774  EFBE  F00B         	goto	u1130
  3961  001778                     u1131:
  3962  001778  EFCE  F00B         	goto	l1988
  3963  00177C                     u1130:
  3964  00177C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3965  00177E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3966  001780  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3967  001782  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3968  001784  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3969  001786  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3970  001788  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3971  00178A  6C13               	negf	___aodiv@quotient^0,c
  3972  00178C  0E00               	movlw	0
  3973  00178E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3974  001790  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3975  001792  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3976  001794  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3977  001796  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3978  001798  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3979  00179A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3980  00179C                     l1988:
  3981  00179C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3982  0017A0  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3983  0017A4  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3984  0017A8  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3985  0017AC  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3986  0017B0  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3987  0017B4  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3988  0017B8  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3989  0017BC  0012               	return		;funcret
  3990  0017BE                     __end_of___aodiv:
  3991                           	callstack 0
  3992                           
  3993                           	psect	rparam
  3994  0000                     
  3995                           	psect	idloc
  3996                           
  3997                           ;Config register IDLOC0 @ 0x200000
  3998                           ;	unspecified, using default values
  3999  200000                     	org	2097152
  4000  200000  FF                 	db	255
  4001                           
  4002                           ;Config register IDLOC1 @ 0x200001
  4003                           ;	unspecified, using default values
  4004  200001                     	org	2097153
  4005  200001  FF                 	db	255
  4006                           
  4007                           ;Config register IDLOC2 @ 0x200002
  4008                           ;	unspecified, using default values
  4009  200002                     	org	2097154
  4010  200002  FF                 	db	255
  4011                           
  4012                           ;Config register IDLOC3 @ 0x200003
  4013                           ;	unspecified, using default values
  4014  200003                     	org	2097155
  4015  200003  FF                 	db	255
  4016                           
  4017                           ;Config register IDLOC4 @ 0x200004
  4018                           ;	unspecified, using default values
  4019  200004                     	org	2097156
  4020  200004  FF                 	db	255
  4021                           
  4022                           ;Config register IDLOC5 @ 0x200005
  4023                           ;	unspecified, using default values
  4024  200005                     	org	2097157
  4025  200005  FF                 	db	255
  4026                           
  4027                           ;Config register IDLOC6 @ 0x200006
  4028                           ;	unspecified, using default values
  4029  200006                     	org	2097158
  4030  200006  FF                 	db	255
  4031                           
  4032                           ;Config register IDLOC7 @ 0x200007
  4033                           ;	unspecified, using default values
  4034  200007                     	org	2097159
  4035  200007  FF                 	db	255
  4036                           
  4037                           	psect	config
  4038                           
  4039                           ; Padding undefined space
  4040  300000                     	org	3145728
  4041  300000  FF                 	db	255
  4042                           
  4043                           ;Config register CONFIG1H @ 0x300001
  4044                           ;	Oscillator Selection bits
  4045                           ;	FOSC = RCIO6, External RC oscillator, port function on RA6
  4046                           ;	Fail-Safe Clock Monitor Enable bit
  4047                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4048                           ;	Internal/External Oscillator Switchover bit
  4049                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4050  300001                     	org	3145729
  4051  300001  07                 	db	7
  4052                           
  4053                           ;Config register CONFIG2L @ 0x300002
  4054                           ;	Power-up Timer Enable bit
  4055                           ;	PWRT = OFF, PWRT disabled
  4056                           ;	Brown-out Reset Enable bits
  4057                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4058                           ;	Brown Out Reset Voltage bits
  4059                           ;	BORV = 18, VBOR set to 1.8 V nominal
  4060  300002                     	org	3145730
  4061  300002  1F                 	db	31
  4062                           
  4063                           ;Config register CONFIG2H @ 0x300003
  4064                           ;	Watchdog Timer Enable bit
  4065                           ;	WDTEN = ON, WDT is always enabled. SWDTEN bit has no effect
  4066                           ;	Watchdog Timer Postscale Select bits
  4067                           ;	WDTPS = 32768, 1:32768
  4068  300003                     	org	3145731
  4069  300003  1F                 	db	31
  4070                           
  4071                           ; Padding undefined space
  4072  300004                     	org	3145732
  4073  300004  FF                 	db	255
  4074                           
  4075                           ;Config register CONFIG3H @ 0x300005
  4076                           ;	CCP2 MUX bit
  4077                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4078                           ;	PORTB A/D Enable bit
  4079                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4080                           ;	Low-Power Timer1 Oscillator Enable bit
  4081                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4082                           ;	HFINTOSC Fast Start-up
  4083                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  4084                           ;	MCLR Pin Enable bit
  4085                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4086  300005                     	org	3145733
  4087  300005  8B                 	db	139
  4088                           
  4089                           ;Config register CONFIG4L @ 0x300006
  4090                           ;	Stack Full/Underflow Reset Enable bit
  4091                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4092                           ;	Single-Supply ICSP Enable bit
  4093                           ;	LVP = ON, Single-Supply ICSP enabled
  4094                           ;	Extended Instruction Set Enable bit
  4095                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4096                           ;	Background Debugger Enable bit
  4097                           ;	DEBUG = 0x1, unprogrammed default
  4098  300006                     	org	3145734
  4099  300006  85                 	db	133
  4100                           
  4101                           ; Padding undefined space
  4102  300007                     	org	3145735
  4103  300007  FF                 	db	255
  4104                           
  4105                           ;Config register CONFIG5L @ 0x300008
  4106                           ;	Code Protection Block 0
  4107                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4108                           ;	Code Protection Block 1
  4109                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4110                           ;	Code Protection Block 2
  4111                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4112                           ;	Code Protection Block 3
  4113                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4114  300008                     	org	3145736
  4115  300008  0F                 	db	15
  4116                           
  4117                           ;Config register CONFIG5H @ 0x300009
  4118                           ;	Boot Block Code Protection bit
  4119                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4120                           ;	Data EEPROM Code Protection bit
  4121                           ;	CPD = OFF, Data EEPROM not code-protected
  4122  300009                     	org	3145737
  4123  300009  C0                 	db	192
  4124                           
  4125                           ;Config register CONFIG6L @ 0x30000A
  4126                           ;	Write Protection Block 0
  4127                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4128                           ;	Write Protection Block 1
  4129                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4130                           ;	Write Protection Block 2
  4131                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4132                           ;	Write Protection Block 3
  4133                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  4134  30000A                     	org	3145738
  4135  30000A  0F                 	db	15
  4136                           
  4137                           ;Config register CONFIG6H @ 0x30000B
  4138                           ;	Configuration Register Write Protection bit
  4139                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4140                           ;	Boot Block Write Protection bit
  4141                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4142                           ;	Data EEPROM Write Protection bit
  4143                           ;	WRTD = OFF, Data EEPROM not write-protected
  4144  30000B                     	org	3145739
  4145  30000B  E0                 	db	224
  4146                           
  4147                           ;Config register CONFIG7L @ 0x30000C
  4148                           ;	Table Read Protection Block 0
  4149                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4150                           ;	Table Read Protection Block 1
  4151                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4152                           ;	Table Read Protection Block 2
  4153                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4154                           ;	Table Read Protection Block 3
  4155                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4156  30000C                     	org	3145740
  4157  30000C  0F                 	db	15
  4158                           
  4159                           ;Config register CONFIG7H @ 0x30000D
  4160                           ;	Boot Block Table Read Protection bit
  4161                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4162  30000D                     	org	3145741
  4163  30000D  40                 	db	64
  4164                           tosu	equ	0xFFF
  4165                           tosh	equ	0xFFE
  4166                           tosl	equ	0xFFD
  4167                           stkptr	equ	0xFFC
  4168                           pclatu	equ	0xFFB
  4169                           pclath	equ	0xFFA
  4170                           pcl	equ	0xFF9
  4171                           tblptru	equ	0xFF8
  4172                           tblptrh	equ	0xFF7
  4173                           tblptrl	equ	0xFF6
  4174                           tablat	equ	0xFF5
  4175                           prodh	equ	0xFF4
  4176                           prodl	equ	0xFF3
  4177                           indf0	equ	0xFEF
  4178                           postinc0	equ	0xFEE
  4179                           postdec0	equ	0xFED
  4180                           preinc0	equ	0xFEC
  4181                           plusw0	equ	0xFEB
  4182                           fsr0h	equ	0xFEA
  4183                           fsr0l	equ	0xFE9
  4184                           wreg	equ	0xFE8
  4185                           indf1	equ	0xFE7
  4186                           postinc1	equ	0xFE6
  4187                           postdec1	equ	0xFE5
  4188                           preinc1	equ	0xFE4
  4189                           plusw1	equ	0xFE3
  4190                           fsr1h	equ	0xFE2
  4191                           fsr1l	equ	0xFE1
  4192                           bsr	equ	0xFE0
  4193                           indf2	equ	0xFDF
  4194                           postinc2	equ	0xFDE
  4195                           postdec2	equ	0xFDD
  4196                           preinc2	equ	0xFDC
  4197                           plusw2	equ	0xFDB
  4198                           fsr2h	equ	0xFDA
  4199                           fsr2l	equ	0xFD9
  4200                           status	equ	0xFD8

Data Sizes:
    Strings     13
    Constant    0
    Data        34
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     41     115
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> main@sec(BANK0[8]), main@min(BANK0[8]), main@hours(BANK0[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> main@sec(BANK0[8]), main@min(BANK0[8]), main@hours(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S998_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> main@sec(BANK0[8]), main@min(BANK0[8]), main@hours(BANK0[8]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> main@sec(BANK0[8]), main@min(BANK0[8]), main@hours(BANK0[8]), 

    byte_to_string@output	PTR unsigned char  size(2) Largest target is 8
		 -> main@sec(BANK0[8]), main@min(BANK0[8]), main@hours(BANK0[8]), 

    lcd_send_string_data_pos@data	PTR unsigned char  size(2) Largest target is 8
		 -> STR_5(CODE[2]), STR_4(CODE[3]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> main@sec(BANK0[8]), main@min(BANK0[8]), main@hours(BANK0[8]), STR_1(CODE[7]), 

    lcd_send_string_data_pos@lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(BANK0[4]), 

    lcd_send_char_data@lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(BANK0[4]), 

    lcd_send_command@lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(BANK0[4]), 

    lcd_set_cursor@lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(BANK0[4]), 

    lcd_send_enable@lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(BANK0[4]), 

    lcd_intialize@lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(BANK0[4]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 
		 -> TRISA(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_byte_to_string
    _lcd_send_string_data_pos->_lcd_set_cursor
    _lcd_set_cursor->_lcd_send_command
    _lcd_send_char_data->_lcd_send_enable
    _lcd_intialize->_lcd_send_command
    _lcd_send_command->_lcd_send_enable
    _lcd_send_enable->_gpio_pin_write_value
    _byte_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod

Critical Paths under _main in BANK0

    _main->_byte_to_string
    _byte_to_string->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   41712
                                             11 BANK0     30    30      0
                     _byte_to_string
                      _lcd_intialize
           _lcd_send_string_data_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_send_string_data_pos                             7     1      6   23128
                                             21 COMRAM     7     1      6
                 _lcd_send_char_data
                   _lcd_send_command
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       6     2      4    7993
                                             15 COMRAM     6     2      4
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_send_char_data                                   3     0      3    5210
                                             11 COMRAM     3     0      3
               _gpio_pin_write_value
              _gpio_port_write_value
                    _lcd_send_enable
 ---------------------------------------------------------------------------------
 (1) _lcd_intialize                                        3     1      2   11198
                                             15 COMRAM     3     1      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_value
      _gpio_port_direction_intialize
              _gpio_port_write_value
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_send_command                                     4     1      3    7338
                                             11 COMRAM     4     1      3
               _gpio_pin_write_value
              _gpio_port_write_value
                    _lcd_send_enable
 ---------------------------------------------------------------------------------
 (4) _lcd_send_enable                                      2     0      2    2212
                                              9 COMRAM     2     0      2
               _gpio_pin_write_value
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_value                                 9     7      2    1972
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _gpio_port_write_value                                5     4      1     308
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _gpio_port_direction_intialize                        5     4      1     179
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_direction_intialize                         9     7      2     907
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _byte_to_string                                       3     1      2    7032
                                             93 COMRAM     2     0      2
                                             10 BANK0      1     1      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    6760
                                             87 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _byte_to_string
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _lcd_intialize
     _gpio_pin_direction_intialize
     _gpio_pin_write_value
     _gpio_port_direction_intialize
     _gpio_port_write_value
     _lcd_send_command
       _gpio_pin_write_value
       _gpio_port_write_value
       _lcd_send_enable
         _gpio_pin_write_value
   _lcd_send_string_data_pos
     _lcd_send_char_data
       _gpio_pin_write_value
       _gpio_port_write_value
       _lcd_send_enable
         _gpio_pin_write_value
     _lcd_send_command
       _gpio_pin_write_value
       _gpio_port_write_value
       _lcd_send_enable
         _gpio_pin_write_value
     _lcd_set_cursor
       _lcd_send_command
         _gpio_pin_write_value
         _gpio_port_write_value
         _lcd_send_enable
           _gpio_pin_write_value

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     29      73       5       71.9%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D2      32        0.0%
DATA                 0      0      D2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri Nov 13 17:17:16 2020

            ??_lcd_send_string_data_pos 001C                    byte_to_string@number 006A  
                  byte_to_string@output 005E                                     l143 1CFE  
                                   l250 20A4                                     l260 1EFC  
                                   l158 1B6C                                     l431 1AA0  
                                   l247 193C                                     l418 17BC  
                                   l178 1F8E                                     l266 204E  
                                   l195 2202                                     l284 1E62  
                                   l269 2142                                     l295 22B0  
                                   l982 20F6                                     _abs 2188  
                                   _pad 1D00                                     prod 000FF3  
                                   wreg 000FE8              __end_of_lcd_send_char_data 2144  
                       ?_lcd_set_cursor 0010                                    l1012 1D88  
                                  l1020 10B0                                    l1014 1DC4  
                                  l1022 10B8                                    l2000 1974  
                                  l1040 12F0                                    l1009 1D46  
                                  l2010 19DC                                    l2002 1982  
                                  ?_abs 0013                                    l2012 19EA  
                                  l2020 1A50                                    l2004 19A2  
                                  l2100 10EE                                    l1061 21C6  
                                  l1053 1FE8                                    l2022 1A60  
                                  l2014 1A18                                    l2006 19C0  
                                  l2030 1D10                                    l2110 118A  
                                  l2102 10F6                                    l1054 1FF0  
                                  l1047 14A4                                    l2024 1A80  
                                  l2016 1A38                                    l2008 19C8  
                                  l2040 1D66                                    l2032 1D24  
                                  l2120 125A                                    l2104 10FC  
                                  l2112 11EE                                    l1073 1C36  
                                  l1081 2186                                    l2018 1A4A  
                                  l1058 21BE                                    l2050 2188  
                                  l1090 226E                                    l2042 1D6A  
                                  l2034 1D32                                    l2130 12A4  
                                  l2114 1208                                    l2122 126A  
                                  l2106 117E                                    l2210 1FA6  
                                  l2202 1FF2                                    l2052 21A2  
                                  l1084 22B2                                    l2044 1D98  
                                  l2036 1D3E                                    l2028 1D00  
                                  l2132 12B0                                    l2124 127C  
                                  l2116 1226                                    l2108 1184  
                                  l2212 1FCC                                    l2140 21CA  
                                  l2204 203C                                    l2300 18C6  
                                  l2046 1DAC                                    l2038 1D52  
                                  l2134 12B8                                    l2126 128C  
                                  l2118 1240                                    l2206 1F90  
                                  l2222 1C4E                                    l2214 1C3A  
                                  l2150 2202                                    l2142 21CA  
                                  l2070 1B3E                                    l2062 1AB8  
                                  l2054 1AA4                                    l2310 1E30  
                                  l2302 1DC6                                    l2128 1292  
                                  l2136 12C8                                    l2080 1030  
                                  l2160 12F2                                    l2208 1F98  
                                  l2312 2296                                    l2224 1C90  
                                  l2232 1CD4                                    l2216 1C3A  
                                  l2240 1F00                                    l2064 1AFA  
                                  l2072 1B42                                    l2056 1AA4  
                                  l2304 1DEE                                    l2090 10A4  
                                  l2082 1058                                    l2170 135E  
                                  l2162 1316                                    l2226 1C94  
                                  l2250 1F3C                                    l2066 1AFE  
                                  l2154 2050                                    l2306 1E1E  
                                  l2092 10C0                                    l2084 1078  
                                  l2180 1426                                    l2172 1382  
                                  l2164 1324                                    l2148 21DE  
                                  l2156 2076                                    l2308 1E22  
                                  l2094 10D2                                    l2086 1088  
                                  l2078 1010                                    l2190 1462  
                                  l2182 1434                                    l2174 13CA  
                                  l2166 1336                                    l2246 1F14  
                                  l2238 1F00                                    l2158 207E  
                                  l2270 1EAC                                    l2262 1E64  
                                  l2096 10E0                                    l2088 108A  
                                  l2184 1448                                    l2168 133A  
                                  l2280 20A6                                    l2248 1F38  
                                  l2256 1F64                                    l2264 1E6A  
                                  l2272 1EC2                                    l2600 1516  
                                  l2098 10E6                                    l2178 1402  
                                  l2194 146E                                    l2282 20B8  
                                  l2266 1E80                                    l2610 15A2  
                                  l2602 1532                                    l2196 1492  
                                  l2188 1454                                    l2284 20C0  
                                  l2292 17BE                                    l2268 1E96  
                                  l2620 15F6                                    l2612 15A8  
                                  l2604 154E                                    l2286 20C8  
                                  l2294 1886                                    l2278 20F8  
                                  l2622 1612                                    l2614 15BE  
                                  l2606 156A                                    l1920 1B92  
                                  l2288 20E4                                    l2296 1898  
                                  l2624 1618                                    l2616 15DA  
                                  l2608 1586                                    l1922 1B9C  
                                  l1930 2144                                    l2298 18B6  
                                  l2618 15E0                                    l1924 1BBA  
                                  l1916 1B6E                                    l1932 2150  
                                  l1940 2246                                    l2740 1ED6  
                                  l2580 14CE                                    l1950 163A  
                                  l1926 1BF0                                    l1918 1B80  
                                  l1934 2162                                    l1942 224A  
                                  l2742 1B56                                    l1960 169A  
                                  l1952 1648                                    l1936 2166  
                                  l1944 2262                                    l2744 1F78  
                                  l2592 14E0                                    l2576 14A6  
                                  l1970 16E4                                    l1962 169E  
                                  l1954 1668                                    l1938 223A  
                                  l2746 1CE8                                    l2586 14D8  
                                  l2578 14B2                                    l1980 1754  
                                  l1972 16F2                                    l1964 16AA  
                                  l1956 166C                                    l1948 1636  
                                  l1982 1766                                    l1974 1704  
                                  l1966 16C8                                    l1958 167A  
                                  l2598 14E8                                    ?_pad 0011  
                                  l1976 1732                                    l1968 16D0  
                                  l1984 176C                                    l1992 193E  
                                  l1986 177C                                    l1978 1752  
                                  l1994 1942                                    l1988 179C  
                                  l1996 1950                                    l1998 1970  
                                  STR_1 1001                                    STR_2 1006  
                                  STR_3 1006                                    STR_4 100B  
                                  STR_5 100C                                    STR_6 1008  
                      ?_lcd_send_enable 000A                                    u1010 1B80  
                                  u1011 1B7C                                    u1100 16C8  
                                  u1020 1B92                                    u1101 16C4  
                                  u1021 1B8E                                    u1110 16F2  
                                  u1030 1BBA                                    u1111 16EE  
                                  u1031 1BB6                                    u1120 1732  
                                  u1040 1BF0                                    u1200 1D10  
                                  u1121 172E                                    u1041 1BEC  
                                  u1201 1D0C                                    u1130 177C  
                                  u1050 2186                                    u1210 1D32  
                                  u1131 1778                                    u1051 2182  
                                  u1211 1D2E                                    u1140 1950  
                                  u1060 2262                                    u1220 1D88  
                                  u1300 1058                                    u1141 194C  
                                  u1061 225E                                    u1221 1D84  
                                  u1301 1054                                    u1070 1648  
                                  u1150 1982                                    u1230 1D98  
                                  u1310 1088                                    u1071 1644  
                                  u1151 197E                                    u1231 1D94  
                                  u1311 1084                                    u1080 167A  
                                  u1160 19C0                                    u1240 21A2  
                                  u1400 127C                                    u1320 10A4  
                                  u1081 1676                                    u1161 19BC  
                                  u1241 219E                                    u1401 1278  
                                  u1321 10A0                                    u2017 1E28  
                                  u1170 19EA                                    u1410 128C  
                                  u1330 10D2                                    u1250 1AB4  
                                  u1091 16A4                                    u1171 19E6  
                                  u1411 1288                                    u1331 10CE  
                                  u1251 1AB0                                    u2027 188C  
                                  u1180 1A18                                    u1420 12A4  
                                  u1340 10E0                                    u1181 1A14  
                                  u1421 12A0                                    u1341 10DC  
                                  u2037 18AE                                    _LATA 000F89  
                                  u1190 1A60                                    u1350 1208  
                                  u1430 21DA                                    _LATB 000F8A  
                                  u1191 1A5C                                    u1351 1204  
                                  u1431 21D6                                    u2047 18C8  
                                  _LATC 000F8B                                    u1360 1226  
                                  u1280 1040                                    u1440 1316  
                                  u1504 1C60                                    u1520 1F10  
                                  u1264 1ACA                                    _LATD 000F8C  
                                  u1361 1222                                    u1281 103A  
                                  u1441 1312                                    u1505 1C5C  
                                  u1521 1F0C                                    u1265 1AC6  
                                  u2057 2042                                    _LATE 000F8D  
                                  u1370 1240                                    u1290 1042  
                                  u1450 135E                                    u1514 1CA6  
                                  u1274 1B10                                    u1530 1E18  
                                  u1371 123C                                    u1451 135A  
                                  u1515 1CA2                                    u1275 1B0C  
                                  u2067 2078                                    u1380 125A  
                                  u1460 1382                                    u1540 1E52  
                                  u1381 1256                                    u1461 137E  
                                  u1390 126A                                    u1470 1426  
                                  u1550 1E62                                    u1391 1266  
                                  u1471 1422                                    u1551 1E5E  
                                  u1480 1FE8                                    u1481 1FE4  
                                  u1537 1E0E                                    u1490 1C4A  
                                  u1491 1C46                                    u1547 1E48  
                                  u1960 15BE                                    u1961 15BA  
                                  u1970 15F6                                    u1971 15F2  
                                  u1980 162E                                    u1981 162A  
                                  abs@a 0013                                    _dbuf 0091  
                                  _main 14A6                                    _dtoa 1010  
                                  _prec 008D                                    _nout 0089  
                                  pad@i 0018                                    pad@p 0015  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  indf0 000FEF                                    fsr2h 000FDA  
                                  fsr0l 000FE9                                    indf2 000FDF  
                                  fsr1l 000FE1                                    pad@w 001A  
                                  fsr2l 000FD9                                    prodl 000FF3  
                                  start 0000                            ___param_bank 000000  
            gpio_port_write_value@value 0001                   _gpio_port_write_value 21C8  
                                 ??_abs 0015                                   ??_pad 0017  
                  _gpio_pin_write_value 1AA2                         __end_of___aodiv 17BE  
                                 ?_main 0001                                   ?_dtoa 001C  
                       __end_of___aomod 1AA2                       ?_lcd_send_command 000C  
                          vfpfcnvrt@fmt 0042                                   _PORTA 000F80  
                                 _PORTB 000F81                                   _PORTC 000F82  
                                 _PORTD 000F83                                   _PORTE 000F84  
                                 _TRISA 000F92                                   _TRISB 000F93  
                                 _TRISC 000F94                                   _TRISD 000F95  
                                 _TRISE 000F96                      ??_lcd_send_command 000F  
                                 _lcd_1 00CF                                   _flags 008F  
                                 _fputc 1B6E                                   _fputs 2144  
                                 pad@fp 0011                                   _width 008B  
                                 _putch 22B2                                   main@h 0083  
                                 main@m 0085                                   dtoa@d 001E  
                                 main@s 0087                                   dtoa@i 003E  
                                 dtoa@n 0036                                   dtoa@p 0030  
                                 dtoa@s 0034                                   dtoa@w 0032  
                                 tablat 000FF5                                   status 000FD8  
                       __end_of_sprintf 20F8                         ??_lcd_intialize 0012  
 gpio_pin_direction_intialize@direction 0002  gpio_port_direction_intialize@direction 0001  
                      lcd_intialize@lcd 0010            lcd_send_string_data_pos@data 001A  
                       __initialization 2204                            __end_of_main 1636  
                          __end_of_dtoa 12F2                   ?_gpio_pin_write_value 0001  
                                ??_main 0060                                  ??_dtoa 0026  
                         __activetblptr 000002          ?_gpio_port_direction_intialize 0001  
                                ?_fputc 0001                                  ?_fputs 000A  
                                ?_putch 0001                           _tris_register 00C5  
                          vfprintf@cfmt 0056                  ?_gpio_port_write_value 0001  
                             ??___aodiv 0011                               ??___aomod 0011  
      __end_of_lcd_send_string_data_pos 1E64                                  clear_0 222A  
                                pad@buf 0013                                  dtoa@fp 001C  
                                _strlen 223A                                  fputc@c 0001  
                                fputs@c 000E                                  fputs@i 000F  
                                fputs@s 000A                            __mediumconst 0000  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                                  putch@c 0001  
                      __end_of_vfprintf 1FF2                               ??_sprintf 005E  
             gpio_port_write_value@port 0005                              __accesstop 0060  
               __end_of__initialization 2230                           ___rparam_used 000001  
                        __pcstackCOMRAM 0001                  ??_gpio_pin_write_value 0003  
                          __pidataBANK0 2270                           __end_of_fputc 1C38  
                         __end_of_fputs 2188                           __end_of_putch 22B4  
                      ??_lcd_set_cursor 0014                    lcd_set_cursor@coulmn 0013  
                               ??_fputc 0005                                 ??_fputs 000E  
                               ??_putch 0001                              __pbssBANK0 0089  
                 lcd_send_char_data@lcd 000C                      lcd_send_enable@lcd 000A  
                    _lcd_send_char_data 20F8                     ?_lcd_send_char_data 000C  
                               ?_strlen 0001                      __size_of_vfpfcnvrt 01B4  
                  ??_lcd_send_char_data 000F       __size_of_lcd_send_string_data_pos 009E  
             ?_lcd_send_string_data_pos 0016                 __size_of_byte_to_string 0020  
             __size_of_lcd_send_command 005E                                 __Hparam 0000  
              __size_of_lcd_send_enable 0056                                 __Lparam 0000  
                               ___aodiv 1636                                 ___aomod 193E  
                             ?_vfprintf 0050                            __psmallconst 1000  
                               __pcinit 2204                                 __ramtop 1000  
                               __ptext0 14A6                                 __ptext1 1DC6  
                               __ptext2 1E64                                 __ptext3 20F8  
                               __ptext4 17BE                                 __ptext5 1FF2  
                               __ptext6 2050                                 __ptext7 1AA2  
                               __ptext8 21C8                                 __ptext9 1EFE  
                       __size_of_strlen 0036                            __size_of_abs 0040  
                          __size_of_pad 00C6                                 _sprintf 20A6  
                               main@min 0073                                 main@sec 007B  
                  end_of_initialization 2230                                 fputc@fp 0003  
                         __Lmediumconst 0000                                 fputs@fp 000C  
       ??_gpio_port_direction_intialize 0002                 ??_gpio_port_write_value 0002  
                 __end_of_lcd_intialize 193E                       __end_of_vfpfcnvrt 14A6  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE                              ??_vfprintf 0056  
                               strlen@a 0003                                 strlen@s 0001  
  __end_of_gpio_pin_direction_intialize 1D00   __size_of_gpio_pin_direction_intialize 00C8  
          _gpio_pin_direction_intialize 1C38          lcd_send_string_data_pos@coulmn 0019  
                           vfpfcnvrt@ap 0044                             vfpfcnvrt@fp 0040  
                           vfpfcnvrt@ll 0048                       ??_lcd_send_enable 000C  
                        __end_of_strlen 2270                     start_initialization 2204  
                           __end_of_abs 21C8                             __end_of_pad 1DC6  
         ?_gpio_pin_direction_intialize 0001                            _lat_register 00BB  
                        _byte_to_string 2292                        _lcd_send_command 1FF2  
              gpio_pin_write_value@port 0009                             vfprintf@fmt 0052  
 __end_of_gpio_port_direction_intialize 1F90  __size_of_gpio_port_direction_intialize 0092  
         _gpio_port_direction_intialize 1EFE           __size_of_gpio_pin_write_value 00CC  
                           __pdataBANK0 00B1       gpio_port_direction_intialize@port 0005  
                              ??_strlen 0003                  lcd_send_char_data@data 000E  
                         __pcstackBANK0 0060                        ___aodiv@dividend 0001  
                __end_of_byte_to_string 22B2         gpio_pin_direction_intialize@pin 0001  
                             _dtoa$1071 002E                                ?___aodiv 0001  
                              ?___aomod 0001                        ___aodiv@quotient 0013  
                   lcd_send_command@lcd 000C                       __size_of_vfprintf 0062  
                           __smallconst 1000             __size_of_lcd_send_char_data 004C  
                              ?_sprintf 0058                         ?_byte_to_string 005E  
                        __size_of_fputc 00CA                          __size_of_fputs 0044  
                        __size_of_putch 0002                 __size_of_lcd_set_cursor 009A  
        ??_gpio_pin_direction_intialize 0003          __size_of_gpio_port_write_value 003C  
         __end_of_gpio_port_write_value 2204                               _vfpfcnvrt 12F2  
                             main@hours 006B                _lcd_send_string_data_pos 1DC6  
           lcd_send_string_data_pos@lcd 0016             lcd_send_string_data_pos@row 0018  
                             copy_data0 2218               gpio_pin_write_value@logic 0002  
                       _lcd_send_enable 2050                                __Hrparam 0000  
               gpio_pin_write_value@pin 0001                              vfprintf@ap 0054  
                              __Lrparam 0000                              vfprintf@fp 0050  
                      __size_of___aodiv 0188                        __size_of___aomod 0164  
                            ?_vfpfcnvrt 0040                         ___aodiv@divisor 0009  
                       ___aodiv@counter 0011                __end_of_lcd_send_command 2050  
                            sprintf@fmt 005A                  __size_of_lcd_intialize 0180  
                              __ptext10 1C38                                __ptext11 2292  
                              __ptext20 22B2                                __ptext12 20A6  
                              __ptext21 2188                                __ptext13 1F90  
                              __ptext22 193E                                __ptext14 12F2  
                              __ptext23 1636                                __ptext15 1010  
                              __ptext16 1D00                                __ptext17 223A  
                              __ptext18 2144                                __ptext19 1B6E  
                      __size_of_sprintf 0052                           __size_of_main 0190  
                         __size_of_dtoa 02E2                                _vfprintf 1F90  
                      ___aomod@dividend 0001                 lcd_send_command@command 000E  
      gpio_pin_direction_intialize@port 0009            __end_of_gpio_pin_write_value 1B6E  
               __end_of_lcd_send_enable 20A6                          _lcd_set_cursor 1E64  
                     lcd_set_cursor@lcd 0010                               sprintf@ap 0062  
                     lcd_set_cursor@row 0012                           _lcd_intialize 17BE  
                       ___aomod@divisor 0009                             ??_vfpfcnvrt 0046  
                       ___aomod@counter 0011                                sprintf@f 0064  
                              sprintf@s 0058                        ??_byte_to_string 0060  
                __end_of_lcd_set_cursor 1EFE                            ___aodiv@sign 0012  
                         _port_register 00B1                            ___aomod@sign 0012  
                        ?_lcd_intialize 0010  
